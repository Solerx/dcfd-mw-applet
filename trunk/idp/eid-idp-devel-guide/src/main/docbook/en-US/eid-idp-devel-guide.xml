<?xml version="1.0" encoding="UTF-8"?>
<article version="5.0"
	xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
	xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<articleinfo>
		<title>Guía de Desarrolladores para el eID Identity Provider</title>
		<subtitle>
			Integrando su aplicación web con el eID Identity
			Provider.
		</subtitle>
		<subtitle>
			Versión &project.version;
		</subtitle>
		<copyright>
			<year>2009-2013</year>
			<holder>FedICT</holder>
		</copyright>
		<releaseinfo>10 Aug 2014</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Wim</firstname>
				<surname>Vandenhaute</surname>
			</author>
			<author>
				<firstname>Frank</firstname>
				<surname>Cornelis</surname>
			</author>
		</authorgroup>
		<abstract>
			<para>
				Esta guía de desarrollo sirve de punto de entrada para integrar el Proveedor de Identidad eID en aplicaciones web. La audiencia de destino son desarrolladores web y arquitectos de aplicaciones web.
			</para>
		</abstract>
	</articleinfo>
	<section>
		<title>Introdución</title>
		<para>
			El eID Identity Provider (eID IdP) es un proveedor de identidad que utiliza el eID Applet para autenticar usuarios. El principal objetivo del eID Identidy Provider es facilitar la integración del eID en aplicaciones Web de un Proveedor de Servicios. Este utiliza el eID trust service para la validación de  certificados digitales.
		</para>
		<para>
			El eID Identity Provider soporta varios protocolos como se muestra en las siguientes secciones.
		</para>
		<tip>
			<title>Sincronización de Reloj</title>
			<para>
				La mayoría de los formatos de los tokens de autenticación provistos por el eID IdP contienen algún tipo de sellado de tiempo. Debido a esto, es importante tener una correcta sincronización del reloj entre el eID IdP y las aplicaciones web de los Proveedores de Servicios. La forma más simple es utilizar NTP.
			</para>
		</tip>
	</section>
	<section>
		<title>SAML v2.0 POST del Navegador</title>
		<section>
			<title>Solicitud de Autenticación</title>
			<para>
				La aplicación web del Proveedor de Servicio (SP) envía una solicitud de autenticación SAML v2.0 codificada en Base64 utilizando HTTP Post a través del navegador del cliente. El parámetro POST utilizado para eso es  
				<emphasis>SAMLRequest</emphasis>
				.
			</para>
			<para>
				El siguiente es un ejemplo de dicha solicitud de autenticación SAML v2.0:
				<programlisting language="XML"><![CDATA[<saml2p:AuthnRequest xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
    AssertionConsumerServiceURL="https://192.168.1.101:443/eid-idp-sp/saml2-landing"
    Destination="https://192.168.1.101:443/eid-idp/protocol/saml2"
    ForceAuthn="true"
    ID="authn-request-21b80327-7204-44ef-9e42-73633ae2e175"
    IssueInstant="1970-01-01T00:00:00.000Z"
    ProtocolBinding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
    Version="2.0">

    <saml2:Issuer xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion">
        https://192.168.1.101:443/eid-idp-sp/saml2-landing
    </saml2:Issuer>

</saml2p:AuthnRequest>]]></programlisting>
			</para>
			<section>
				<title>Java SDK</title>
				<para>
					El SDK de Java del eID Identity Provider provee un servlet 
					(
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.AuthenticationRequestServlet
					</code>
					) el que puede generar dicha solicitud. La configuración del servlet puede ser realizada proveyendo:
					<itemizedlist>
						<listitem>
							<para>
								<code>AuthenticationRequestService(Class)</code>
								Ubicación JNDI opcional (o referencia de clase) de una 
                                                                implementación de la interfaz 
                                                                AuthenticationRequestService.  
                                                                Esta implementación puede proveer una identidad 
                                                                opcional del Proveedor de Servicios utilizado 
                                                                para la firma de la solicitud de autenticación, 
                                                                emisor de la solicitud de autenticación,
                                                                estado de relay (opcional), IdP de destino,
                                                                destino del Proveedor de Servicios y opcionalmente el
                                                                lenguaje a mostrar en la aplicación web del  eID IdP .
							</para>
						</listitem>
					</itemizedlist>

					También proveyendo los siguientes parámetros:
					<itemizedlist>
						<listitem>
							<para>
								<code>IdPDestination</code>
								La ubicación del servlet de destino eID IdP SAML v2.0
							</para>
						</listitem>
						<listitem>
							<para>
								<code>SPDestination</code>
								La ubicación absoluta del servlet de destino SAML v2.0 del Proveedor de Servicio que manejara la respuesta de autenticación entrante.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>SPDestinationPage</code>
								La ubicación del proveedor de servicio  SAML
								v2.0 qué manejará la respuesta de autenticación entrante. 
                                                                La ruta absoluta será construida automáticamente desde el contexto del servlet.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>Language</code>
								Lenguaje opcional para mostrar la aplicación web del IDP.
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					El siguiente ejemplo muestra una sección del archivo 
					<code>web.xml</code>
					para configurar el servlet.
				</para>
				<programlisting language="XML"><![CDATA[<servlet>
	<servlet-name>SAML2AuthenticationRequestServlet</servlet-name>
	<servlet-class>
		be.fedict.eid.idp.sp.protocol.saml2.AuthenticationRequestServlet
	</servlet-class>
	<init-param>
		<param-name>AuthenticationRequestService</param-name>
		<param-value>
			be/fedict/eid/idp/sp/saml2/AuthenticationRequestServiceBean
		</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>SAML2AuthenticationRequestServlet</servlet-name>
	<url-pattern>/saml-request</url-pattern>
</servlet-mapping>]]></programlisting>
				<para>
                                        La clase
					<code>AuthenticationRequestUtil</code>
					está disponible para la integración fuera del contexto del servlet 
					( ej.
					JSF lifecycle components). Nótese que esta  necesita de la clase 
					<code>HttpServletResponse</code>
					para enviar la solicitud de autenticación utilizando 
					POST del navegador.
				</para>
			</section>
		</section>
		<section>
			<title>Respuesta de Autenticación</title>
			<para>
				El Identity Provider retornara  una respuesta de autenticación SAML v2.0 codificada en Base64 utilizando un POST del navegador del cliente.
                            El parámetro POST utilizado para esto es:
				<emphasis>SAMLResponse</emphasis>
				.
			</para>
			<para>
				El siguiente es un ejemplo de dicha respuesta de autenticación SAML v2.0:
				<programlisting language="XML"><![CDATA[<saml2p:Response xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
    Destination="https://192.168.1.101:443/eid-idp-sp/saml2-landing"
    ID="saml-response-eccaf61a-f8f1-4346-9c25-a83c1e8fa599"
    IssueInstant="2010-08-03T08:56:53.366Z"
    Version="2.0">

    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        ...
    </ds:Signature>

    <saml2p:Status>
        <saml2p:StatusCode Value="urn:oasis:names:tc:SAML:2.0:status:Success" />
    </saml2p:Status>
    <saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
        ID="assertion-765aec37-0788-4c3b-a6ca-88eb78a9890c"
        IssueInstant="2010-08-03T08:56:53.366Z"
        Version="2.0">

        <saml2:Issuer>http://www.e-contract.be/</saml2:Issuer>

        <saml2:Subject>
            <saml2:NameID>71715100070</saml2:NameID>
            <saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
            <saml2:SubjectConfirmationData
                InResponseTo="authn-request-21b80327-7204-44ef-9e42-73633ae2e175"
                NotBefore="2010-08-03T08:56:53.366Z"
                NotOnOrAfter="2010-08-03T09:01:53.366Z"
                Recipient="https://192.168.1.101:443/eid-idp-sp/saml2-landing" />
            </saml2:SubjectConfirmation>
        </saml2:Subject>

        <saml2:Conditions
            NotBefore="2010-08-03T08:56:53.366Z"
            NotOnOrAfter="2010-08-03T09:01:53.366Z">
            <saml2:AudienceRestriction>
                <saml2:Audience>
                    https://192.168.1.101:443/eid-idp-sp/saml2-landing
                </saml2:Audience>
            </saml2:AudienceRestriction>
        </saml2:Conditions>

        <saml2:AuthnStatement AuthnInstant="2010-08-03T08:56:53.366Z">
            <saml2:AuthnContext />
        </saml2:AuthnStatement>

        <saml2:AttributeStatement>
            <saml2:Attribute Name="urn:be:fedict:eid:idp:name">
                <saml2:AttributeValue>
                    SPECIMEN
                </saml2:AttributeValue>
            </saml2:Attribute>
            <saml2:Attribute Name="urn:be:fedict:eid:idp:firstName">
                <saml2:AttributeValue>
                    Alice Geldigekaart2266
                </saml2:AttributeValue>
            </saml2:Attribute>
        </saml2:AttributeStatement>

    </saml2:Assertion>
</saml2p:Response>]]></programlisting>
			</para>
			<section>
				<title>Java SDK</title>
				<para>
					El SDK de Java del Identity Provider provee un servlet 
					(
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.post.AuthenticationResponseServlet
					</code>
					) el cual manejará la respuesta SAML de autenticación entrante.
					Este servlet utiliza los siguientes parámetros:
					
					<itemizedlist>
						<listitem>
							<para>
								<code>ResponseSessionAttribute</code>
								Atributo de HTTP Session en el cual un objeto 
								AuthenticationResponse es retornado el cual es
                                                                entregado después de una autenticación exitosa. 
                                                                Este objeto contiene el identificador de 
                                                                usuario, hora de autenticación, mapa de los atributos 
                                                                retornados, política de autenticación y estado del relay.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>RequiresResponseSignature</code>
								Bandera opcional que indica si el proveedor de servicio 
                                                                espera que la respuesta esté firmada. El valor por defecto es falso.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>AuthenticationResponseService</code>
								Ubicación JNDI de la implementación de la interfaz. 
                                                                Tal implementación permite la validación de la cadena 
                                                                de certificados en la respuesta de la autenticación SAML v2.0.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>RedirectPage</code>
								Página a re direccionar luego de una autenticación exitosa.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>ErrorPage</code>
								Página a re direccionar si algo salió mal en el procesamiento de la respuesta de la autenticación.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>ErrorMessageSessionAttribute</code>
								Atributo de sesión HTTP en el cual se entrega más información si algo salió mal en el procesamiento de la respuesta de la autenticación.
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					
                                        Los atributos por defecto pueden ser consultados del mapa 
                                    utilizando las constantes en la clase de ayuda 
					<code>be.fedict.eid.idp.common.AttributeConstants</code>
					.
					Tenga en cuenta que para el flujo de 
					<emphasis>authentication-only</emphasis>
					no todos estos atributos están disponibles. El siguiente ejemplo muestra la configuración del servlet en el archivo 
					<code>web.xml</code>.
					
				</para>
				<programlisting language="XML"><![CDATA[<servlet>
	<servlet-name>SAML2AuthenticationResponseServlet</servlet-name>
	<servlet-class>
		be.fedict.eid.idp.sp.protocol.saml2.AuthenticationResponseServlet
	</servlet-class>
	<init-param>
		<param-name>ResponseSessionAttribute</param-name>
		<param-value>Response</param-value>
	</init-param>
	<init-param>
		<param-name>RedirectPage</param-name>
		<param-value>/authn-result.jsp</param-value>
	</init-param>
	<init-param>
		<param-name>AuthenticationResponseService</param-name>
		<param-value>
			be/fedict/eid/idp/sp/saml2/AuthenticationResponseServiceBean
		</param-value>
	</init-param>
	<init-param>
		<param-name>ErrorPage</param-name>
		<param-value>/error.jsp</param-value>
	</init-param>
	<init-param>
		<param-name>ErrorMessageSessionAttribute</param-name>
		<param-value>ErrorMessage</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>SAML2AuthenticationResponseServlet</servlet-name>
	<url-pattern>/saml2-landing</url-pattern>
</servlet-mapping>]]></programlisting>
				<para>
					Para procesar la respuesta de la autenticación SAML v2.0  
                                    fuera del contexto el servlet (por ejemplo componentes de ciclo de vida) 
                                    se puede utilizar la clase:
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.post.AuthenticationResponseProcessor
					</code>
					.
				</para>
			</section>
		</section>
	</section>
	<section>
		<title>SAML v2.0 Artifact Binding</title>
		<para>
			Se tiene disponible soporte para enlaces de artefactos 
                    pero sólo aplicable a las respuestas de autenticación. 
                    Enviar solicitudes de autenticación SAML v2.0  es posible 
                    de manera similar al protocolo HTTP-POST o HTTP-Redirect 
                    pero al punto de entrada del protocolo de enlace de artefactos. 
		</para>
		<section>
			<title>Respuesta de Autenticación</title>
			<para>
				En el enlace de artefactos HTTP,  la respuesta de 
                            la autenticación SAML  es transmitida por referencia
                            utilizando un artefacto. Un enlace síncrono separado 
                            es utilizado para intercambiar la respuesta de la 
                            autenticación actual utilizando un web service de 
                            resolución de artefactos.
			</para>
			<para>
				El siguiente es un ejemplo de las respuestas de artefactos SAML v2.0.
				<programlisting language="XML"><![CDATA[HTTP/1.1 302 Object Moved
Date: 21 Jan 2004 07:00:49 GMT
Location: https://www.rp.com/SAML?SAMLart=AAQAADWNEw5VT47wcO4z
X%2FiEzMmFQvGknDfws2ZtqSGdkNSbsW1cmVR0bzU%
3D&RelayState=0043bfc1bc45110dae17004005b13a2b
Content-Type: text/html; charset=iso-8859-1]]></programlisting>
				El Proveedor de Servicios responderá con una 
Solicitud de Resolución de Artefactos a ser enviada al Web Service de resolución 
de artefactos SAML v2.0 mediante SOAP.
                                El siguiente es un ejemplo de tal solicitud:

				<programlisting language="XML"><![CDATA[POST /SAML/Artifact/Resolve HTTP/1.1
Host: eid-idp.be
Content-Type: text/xml
Content-Length: nnn
SOAPAction: http://www.oasis-open.org/committees/security
<SOAP-ENV:Envelope
    xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
    <SOAP-ENV:Body>
        <samlp:ArtifactResolve
            xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
            xmlns="urn:oasis:names:tc:SAML:2.0:assertion"
            ID="_6c3a4f8b9c2d" Version="2.0"
            IssueInstant="2004-01-21T19:00:49Z">
            <Issuer>https://www.rp.com/SAML</Issuer>
            <Artifact>
                AAQAADWNEw5VT47wcO4zX/iEzMmFQvGknDfws2ZtqSGdkNSbsW1cmVR0bzU=
            </Artifact>
        </samlp:ArtifactResolve>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></programlisting>
				El siguiente es un ejemplo de la respuesta del servicio de resolucion:
				<programlisting language="XML"><![CDATA[HTTP/1.1 200 OK
Date: 21 Jan 2004 07:00:49 GMT
Content-Type: text/xml
Content-Length: nnnn
<SOAP-ENV:Envelope
    xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
    <SOAP-ENV:Body>
        <samlp:ArtifactResponse
            xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
            xmlns="urn:oasis:names:tc:SAML:2.0:assertion"
            ID="_FQvGknDfws2Z" Version="2.0"
            InResponseTo="_6c3a4f8b9c2d"
            IssueInstant="2004-01-21T19:00:49Z">
            <Issuer>https://eid-idp.be/SAML</Issuer>
            <samlp:Status>
                <samlp:StatusCode
                    Value="urn:oasis:names:tc:SAML:2.0:status:Success"/>
            </samlp:Status>
            <saml2p:Response ...>
                ...
            </samlp:Response>
        </samlp:ArtifactResponse>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></programlisting>
			</para>
			<section>
				<title>Java SDK</title>
				<para>
					El SDK del Proveedor de Identidad provee un servlet
					(
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.artifact.AuthenticationResponseServlet
					</code>
					) el cual manejara respuestas de autenticación SAML. El servlet recibe los siguientes parámetros:
					<itemizedlist>
						<listitem>
							<para>
								<code>ResponseSessionAttribute</code>
								Atributo de sesión HTTP en el cual un objeto de respuesta de 
                                                                autenticación será enviado después de una autenticación exitosa. 
                                                                Este objeto contiene el identificador de usuario, 
                                                                hora de autenticación, mapa de los atributos retornados,
                                                                política de autenticación y estado del relay.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>
									ArtifactAuthenticationResponseService(Class)
								</code>
								ubicación JNDI requerida de la implementación de la interface 
								ArtifactAuthenticationResponseService.
								Esta es requerida para proveer la ubicación del servicio web de
                                                                resolución de artefactos del IDP , configuración del cliente del 
                                                                web service, validación de la cadena de certificados en la firma de la respuesta de la autenticación.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>RedirectPage</code>
								Página a direccionar después de una autenticación exitosa.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>ErrorPage</code>
								Página a direccionar si algo salió mal en el 
                                                                procesamiento de la respuesta de autenticación.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>ErrorMessageSessionAttribute</code>
								Atributo de sesión HTTP en el cual se dispondrá más 
                                                                información si algo salió mal en el procesamiento 
                                                                de la respuesta de autenticación.
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>
		</section>
	</section>
	<section>
		<title>SAML v2.0 Browser Redirect</title>
		<para>
			Se dispone de soporte para el enlace de re direccionamiento HTTP de solicitudes de autenticación entrantes esto se ha agregado para el soporte de librerías cómo 
			<code>SimpleSAMLphp</code>
			o
			<code>mod_mellon.</code>
			La respuesta de autenticación  SAML v2.0 será enviada utilizando el protocolo POST o el de enlace de Artefactos ,de acuerdo a lo que se está utilizando en el punto de entrada del protocolo del IdP.
		</para>
		<section>
			<title>Java SDK</title>
			<para>
				El
				<code>AuthenticationRequestServlet</code>
				como fue descrito en el SAML v2.0 Browser Post binding, puede ser utilizado para este mismo protocolo.
			</para>
		</section>
	</section>
	<section>
		<title>SAML v2.0 Metadata</title>
		<para>
			Para cada punto de entrada del protocolo SAML v2.0  del  IdP , se provee un documento de metadatos para publicar servicios SAML v2.0.Esto ha sido agregado para librerías 
			<code>SimpleSAMLphp</code>
			o
			<code>mod_mellon</code>.
		</para>
		<para>
			El siguiente es un ejemplo el documento de metadatos SAML v2.0:
			<programlisting language="XML"><![CDATA[<md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    entityID="https://eid-idp.be/eid-idp/protocol/saml2/post/auth">

    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        ...
    </ds:Signature>

    <md:IDPSSODescriptor WantAuthnRequestsSigned="false"
        protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">

        <md:KeyDescriptor>
            <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                <ds:X509Data>
                    <ds:X509Certificate>
                        ...
                    </ds:X509Certificate>
                </ds:X509Data>
            </ds:KeyInfo>
        </md:KeyDescriptor>

        <md:NameIDFormat>
            urn:oasis:names:tc:SAML:2.0:nameid-format:transient
        </md:NameIDFormat>

        <md:SingleSignOnService
            Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
            Location="https://eid-idp.be/eid-idp/protocol/saml2/post/auth"/>

    </md:IDPSSODescriptor>
</md:EntityDescriptor>]]></programlisting>
		</para>
	</section>
	<section>
		<title>OpenID v2.0</title>
		<para>
			Se ha agregado soporte para OpenID  para integración transparente en plataformas como Drupal. Un documento dinámico de identidad YADIS, se utiliza para iniciar una autenticación OpenID. El proveedor de identidad IdP utiliza selección OP.
		</para>
		<para>
			El proveedor de identidad soporta intercambio de atributos OpenID
			( OpenID AX ) como parte de la solicitud de autenticación .
			Por defecto se retornan el nombre completo y el primer nombre son retornados. El proveedor de servicios puede solicitar otros atributos explícitamente.
		</para>
		<para>
			El proveedor de identidad soporta la extensión  1.0 de la política de autenticación OpenID ( OpenID PAPE ) para comunicarse entre el proveedor de identidad y el proveedor de servicios intercambiar la política de autenticación.
		</para>
		<section>
			<title>OpenID Protocol</title>
			<para>
				EL URL OpenID retorna el siguiente archivo:
				<programlisting language="XML"><![CDATA[<HTML>
    <HEAD>
        <META http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <META content="https://localhost:48745/identity/xrds" http-equiv="X-XRDS-Location"/>
    </HEAD>

    <BODY>
        <P>OpenID Identity URL</P>
    </BODY>
</HTML>]]></programlisting>
			</para>
			<para>
				A continuación, el consumidor OpenID descargara el documento YADIS,
				que contiene:
				<programlisting language="XML"><![CDATA[<xrds:XRDS xmlns:xrds="xri://$xrds" xmlns="xri://$xrd*($v*2.0)">
    <XRD>
        <Service>
            <Type>http://specs.openid.net/auth/2.0/server</Type>
            <URI>https://localhost:48745/producer</URI>
        </Service>
        <Service>
            <Type>http://specs.openid.net/auth/2.0/signon</Type>
            <URI>https://localhost:48745/producer</URI>
        </Service>
    </XRD>
</xrds:XRDS>]]></programlisting>
				El primer elemento 
				<code>Service</code>
				específica donde contactar al proveedor de identidad para establecer una clave de asociación toda la comunicación se realiza sobre SSL de manera unilateral.
			</para>
			<para>
				La solicitud de asociación se envía utilizando HTTP POST por el consumidor OpenID hacia el IdP:
				<programlisting language="XML"><![CDATA[openid.ns:http://specs.openid.net/auth/2.0
openid.mode:associate
openid.session_type:DH-SHA256
openid.assoc_type:HMAC-SHA256
openid.dh_consumer_public:...]]></programlisting>
			</para>
			<para>
				El eID IdP reacciona a esta solicitud de asociación on el siguiente mensaje:
				<programlisting language="XML"><![CDATA[openid.ns:http://specs.openid.net/auth/2.0
openid.session_type:DH-SHA256
openid.assoc_type:HMAC-SHA256
openid.assoc_handle:1273064471124-0
openid.expires_in:1799
openid.dh_server_public:...
openid.enc_mac_key:...]]></programlisting>
			</para>
			<para>
				Luego de que la asociación es establecida entre el consumidor OpenID y el proveedor de identidad, el consumidor está listo para enviar la solicitud de autenticación utilizando una redirección del navegador con los siguientes argumentos:
				<programlisting language="XML"><![CDATA[openid.ns.ext1:http://openid.net/srv/ax/1.0
openid.ext1.type.name:http://schema.openid.net/namePerson/first
openid.ns:http://specs.openid.net/auth/2.0
openid.identity:http://specs.openid.net/auth/2.0/identifier_select
openid.claimed_id:http://specs.openid.net/auth/2.0/identifier_select
openid.mode:checkid_setup
openid.ext1.mode:fetch_request
openid.ext1.required:name
openid.realm:https://localhost:48745/consumer
openid.assoc_handle:1273064471124-0
openid.return_to:https://localhost:48745/consumer]]></programlisting>
				El consumidor  hace que el proveedor de identidad seleccione los identificadores los cuales se especifican utilizando los parámetros :
				<code>openid.identity</code>
				y
				<code>openid.claimed_id</code>
				. El ejemplo también muestra cómo se solicita un atributo como parte de la solicitud de autenticación.
			</para>
			<para>
				Después de manejar la solicitud de autenticación el proveedor 
                            de identidad direccionar a al usuario a través del navegador hacia 
                            el Applet para que el usuario pueda autenticarse después de esto una 
                            redirección de respuesta será enviada de vuelta al consumidor 
                            conteniendo los siguientes argumentos:
				<programlisting language="XML"><![CDATA[openid.op_endpoint:https://localhost:48745/producer
openid.signed:op_endpoint,claimed_id,identity,return_to,response_nonce,
    assoc_handle,ns.ext1,ns.ext2,ext1.mode,ext1.type.name,ext1.value.name,
    ext2.auth_policies
openid.ns.ext1:http://openid.net/srv/ax/1.0
openid.ext1.type.name:http://schema.openid.net/namePerson/first
openid.sig:eCG4ER1zAzuGOdDd+MuxOI1bjQImsfaPO+e/S5gACOk=
openid.ns.ext2:http://specs.openid.net/extensions/pape/1.0
openid.response_nonce:2010-05-05T13:01:11Z0
openid.claimed_id:https://localhost:48745/identity/idp/123456789
openid.assoc_handle:1273064471124-0
openid.ns:http://specs.openid.net/auth/2.0
openid.ext1.value.name:sample-first-name
openid.ext2.auth_policies:http://schemas.openid.net/pape/policies/2007/06/multi-factor-physical
openid.identity:https://localhost:48745/identity/idp/123456789
openid.ext1.mode:fetch_response
openid.mode:id_res
openid.return_to:https://localhost:48745/consumer]]></programlisting>
				Obsérvese que el atributo y la extensión están firmados por el proveedor de identidad con la clave que ha sido intercambiada durante la etapa de asociación.
			</para>
			<para>
				Finalmente el consumidor OpenID contactara al proveedor de identidad una vez más para validar si el identificador seleccionado es permitido por el proveedor de identidad esto es realizado a través del segundo elemento
				<code>Service</code>
				en el documento YADIS.
			</para>
		</section>
		<section>
			<title>Java SDK</title>
			<section>
				<title>Solicitud de Autenticación</title>
				<para>
					El proveedor de identidad provee un java SDK servlet el 
                                    cual generara y enviara la solicitud. Este servlet también
                                    es responsable de leer el documento YADIS y establecer la asociación. 
                                    El servlet recibe los siguientes parámetros:
					<itemizedlist>
						<listitem>
							<para>
								<code>SPDestination</code>
								La ubicación del servlet de destino del proveedor de servicio el cual manejara la respuesta de autenticación.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>UserIdentifier</code>
								La ubicación de la ruta del proveedor de identidad la quito pública la ubicación del documento YADIS.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>TrustServer</code>
								Parámetro booleano opcional especificando si todos los certificados SSL del servidor son confiables.
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					Este servlet será extendido para soportar la solicitud de atributos específicos. 
                                    El siguiente archivo 
					<code>web.xml</code>
                                        es un ejemplo de la configuración del servlet
					
				</para>
				<programlisting language="XML"><![CDATA[<servlet>
	<servlet-name>OpenIDAuthenticationRequestServlet</servlet-name>
	<servlet-class>
		be.fedict.eid.idp.sp.protocol.openid.AuthenticationRequestServlet
	</servlet-class>
	<init-param>
		<param-name>UserIdentifier</param-name>
		<param-value>https://eididp.host.be/eid-idp/endpoints/openid-identity</param-value>
	</init-param>
	<init-param>
		<param-name>SPDestination</param-name>
		<param-value>https://sp.host.be/eid-idp-sp/openid-landing</param-value>
	</init-param>
	<init-param>
		<param-name>TrustServer</param-name>
		<param-value>true</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>OpenIDAuthenticationRequestServlet</servlet-name>
	<url-pattern>/openid-request</url-pattern>
</servlet-mapping>]]></programlisting>
			</section>
			<section>
				<title>Respuesta de Autenticación</title>
				<para>
					El proveedor de identidad provee un java SDK servlet el cual manejará la respuesta de autenticación OpenID.
                                    El servlet recibe los siguientes parámetros:
					<itemizedlist>
						<listitem>
							<para>
								<code>ResponseSessionAttribute</code>
								Atributo de sesión HTTP en el cual un objeto 
								OpenIDAuthenticationResponse es retornado y será enviado después de una autenticación exitosa. 
                                                                Este objeto contiene el identificador de usuario,  la hora de autenticación y el
                                                                mapa de atributos retornados junto a las políticas de autenticación.
							</para>
						</listitem>
						<listitem>
							<para>
								<code>RedirectPage</code>
								Página a re direccionar luego de una autenticación exitosa.
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					Este servlet sera configurado luego para extender el soporte de 
					OpenID AX para solicitar atributos especificos.
					El siguiente es un ejemplo de la configuración del archivo
					<code>web.xml</code>
					para ese servlet.
				</para>
				<programlisting language="XML"><![CDATA[<servlet>
	<servlet-name>OpenIDAuthenticationResponseServlet</servlet-name>
	<servlet-class>
		be.fedict.eid.idp.sp.protocol.openid.AuthenticationResponseServlet
	</servlet-class>
	<init-param>
		<param-name>ResponseSessionAttribute</param-name>
		<param-value>Response</param-value>
	</init-param>
	<init-param>
		<param-name>RedirectPage</param-name>
		<param-value>/openid-result.jsp</param-value>
	</init-param>
</servlet>
<servlet-mapping>
	<servlet-name>OpenIDAuthenticationResponseServlet</servlet-name>
	<url-pattern>/openid-landing</url-pattern>
</servlet-mapping>]]></programlisting>
			</section>
		</section>
	</section>
	<section>
		<title>WS-Federation v1.1</title>
		<para>
			Se dispone de soporte para el modelo de solicitantes pasivos Web de WS-Federation. Este soporte provee integración transparente con aplicaciones ASP.net utilizando  Windows Identity Foundation.
		</para>
		<section>
			<title>Metadata</title>
			<para>
				EL IdP discovery para WS-Federation utiliza un documento de metadatos, como se decribe en 
                            OASIS SAML v2.0 Metadata.
				El siguiente es un ejemplo de dicho documento:
				<programlisting language="XML"><![CDATA[<md:EntityDescriptor
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    xmlns:auth="http://docs.oasis-open.org/wsfed/authorization/200706"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    xmlns:fed="http://docs.oasis-open.org/wsfed/federation/200706"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"
    xmlns:wsa="http://www.w3.org/2005/08/addressing"
    xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"

    ID="saml-metadata-d1ea2940-3032-4e7a-8093-c131ca7bab00"
    entityID="https://127.0.0.1:54705/eid-idp/protocol/ws-federation">

    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        ...
    </ds:Signature>

    <md:RoleDescriptor
        protocolSupportEnumeration="http://docs.oasis-open.org/wsfed/federation/200706"
        xsi:type="fed:SecurityTokenServiceType">

        <md:KeyDescriptor use="signing">
            <ds:KeyInfo>
                <ds:X509Data>
                    ...
                </ds:X509Data>
            </ds:KeyInfo>
        </md:KeyDescriptor>

        <fed:ClaimTypesOffered>
            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name">

                <auth:DisplayName>Name</auth:DisplayName>
                <auth:Description>The name of the Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname">

                <auth:DisplayName>FirstName</auth:DisplayName>
                <auth:Description>Preferred name or first name of a Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname">

                <auth:DisplayName>LastName</auth:DisplayName>
                <auth:Description>Surname or family name of a Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress">

                <auth:DisplayName>StreetAddress</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality">

                <auth:DisplayName>Locality</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode">

                <auth:DisplayName>PostalCode</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country">

                <auth:DisplayName>Country</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth">

                <auth:DisplayName>DateOfBirth</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender">

                <auth:DisplayName>Gender</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/privatepersonalidentifier">

                <auth:DisplayName>PPID</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

        </fed:ClaimTypesOffered>

        <fed:PassiveRequestorEndpoint>
            <wsa:EndpointReference>
                <wsa:Address>
                    https://127.0.0.1:54705/eid-idp/protocol/ws-federation
                </wsa:Address>
            </wsa:EndpointReference>
        </fed:PassiveRequestorEndpoint>

    </md:RoleDescriptor>
</md:EntityDescriptor>]]></programlisting>
				Son muy importantes las ubicaciones del endpoint del solicitante pasivo
                            WS-Federation y el listado de todos los tipos disponibles por el proveedor de identidad.
				Tambien contiene la identidad digital del IdP y una indicación de la clave utilizada para firmar tokens de autenticación  de respuesta.
				
			</para>
		</section>
		<section>
			<title>
				Solicitud de Autenticación
			</title>
			<para>
				Abajo se muestra un ejemplo de los parametros de la solicitud de autenticación en la cadena de solicitud enviado al IdP.
				<programlisting language="XML"><![CDATA[wa=wsignin1.0
wtrealm=http://localhost:49267/EidIdpTest/
wctx=rm=0
id=passive
ru=/EidIdpTest/Default.aspx
wct=2011-01-05T08:14:31]]></programlisting>
			</para>
		</section>
		<section>
			<title>
				Respuesta de Autenticación
			</title>
			<para>
				Abajo se tiene un ejemplo del mensaje de respuesta WS-Trust despues de una autenticación exitosa.
				Una aserción SAML v2.0 es entregada como un token por el IdP.
				<programlisting language="XML"><![CDATA[<trust:RequestSecurityTokenResponseCollection
    xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:wsa="http://www.w3.org/2005/08/addressing"
    xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">

    <trust:RequestSecurityTokenResponse Context="some-context-identifier">

        <trust:TokenType>urn:oasis:names:tc:SAML:2.0:assertion</trust:TokenType>

        <trust:RequestType>
            http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue
        </trust:RequestType>

        <trust:KeyType>
            http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer
        </trust:KeyType>

        <trust:RequestedSecurityToken>
            <saml:Assertion
                ID="saml-8eb46c40-c2d9-4c42-abc0-dcc9cbf425c1"
                IssueInstant="2010-05-05T14:51:03.324+02:00"
                Version="2.0">

                <saml:Issuer>CN=Test</saml:Issuer>

                <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                    ...
                </ds:Signature>

                <saml:Subject>
                    <saml:NameID>test-auth-identifier</saml:NameID>
                    <saml:SubjectConfirmation
                        Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"/>
                </saml:Subject>

                <saml:Conditions
                    NotBefore="2010-05-05T14:51:03.324+02:00"
                    NotOnOrAfter="2010-05-05T15:51:03.324+02:00">
                    <saml:AudienceRestriction>
                        <saml:Audience>http://return.to.here</saml:Audience>
                    </saml:AudienceRestriction>
                </saml:Conditions>

                <saml:AttributeStatement>

                    <saml:Attribute
                        Name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname">

                        <saml:AttributeValue xsi:type="xs:string">
                            test-first-name
                        </saml:AttributeValue>
                    </saml:Attribute>

                    ...
                </saml:AttributeStatement>
            </saml:Assertion>
        </trust:RequestedSecurityToken>
    </trust:RequestSecurityTokenResponse>
</trust:RequestSecurityTokenResponseCollection>]]></programlisting>
			</para>
		</section>
		<section>
			<title>Sign out</title>
			<para>
				Algunas implementaciones WS-Federation realizan un cierre de sesión automatico. Debido a este se tiene implementada la actión:
				<code>wsignout1.0</code>.
				
			</para>
			<para>
				Abajo se tiene un ejemplo de los parametros de solicitud de cierre de sesión WS-Federation sign-out en la 
                            cadena que se envia al IdP.
				<programlisting language="XML"><![CDATA[wa=wsignout1.0
wreply=http://localhost:49267/EidIdpTest/]]></programlisting>
			</para>
		</section>
		<section>
			<title>WS-Trust STS validation web service</title>
			<para>
				El IdP ofrece un web service de validación WS-Trust basado en STS.
				A través de este web service, los proveedores de servicio pueden validar las aserciones SAML 
				que han sido adquiridas mediante un perfil web WS-Federation pasivo.
			</para>
			<para>
				Esta caracteristica otorga a los proveedores de servicio mayor flexibilidad al 
                            elegir el modelo para la verificacion de aserciones SAML.
				Así de este modo, el modelo de confianza puede ser basado en:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						La huella del certificado de firma de la aserción SAML o la clave pública.
					</para>
				</listitem>
				<listitem>
					<para>
						Una validación PKI completa del certificado de firma de la aserción SAML.
					</para>
				</listitem>
				<listitem>
					<para>
						Modelo basado en SSL en el caso de que el servicio STS de validación WS-Trust 
                                            esté utilizado para validar aserciones SAML.
					</para>
				</listitem>
			</itemizedlist>
			<para>
				El Java SDK ha sido extendido con una clase
				<code>SecurityTokenServiceClient</code>
				para ejecutar validaciones de aserciones SAML basadas en STS.
			</para>
			<section>
				<title>Validation request</title>
				<para>
					Luego de una autencicación basada en WS-Federation, el proveedor de servicio puede utilizar el STS para validar las aserciones SAML que ha recibido.
                                    La solicitud del web service se ve a continuación:
				</para>
				<programlisting language="XML"><![CDATA[<soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
	<soap12:Header>
		<wsse:Security
			xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
			soap12:mustUnderstand="true">
			<saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
				ID="assertion-id"
				IssueInstant="2012-02-09T09:27:17.433Z"
				Version="2.0">
				... The SAML2 assertion received via WS-Federation web passive protocol...
			</saml2:Assertion>
		</wsse:Security>
	</soap12:Header>
	<soap12:Body>
		<trust:RequestSecurityToken 
			xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512"
			xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
			xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
			xmlns:wsa="http://www.w3.org/2005/08/addressing">
			<trust:RequestType>
				http://docs.oasis-open.org/ws-sx/ws-trust/200512/Validate
			</trust:RequestType>
      		<trust:TokenType>
      			http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Status
      		</trust:TokenType>
	      	<trust:ValidateTarget>
		        <wsse:SecurityTokenReference 
		        	xmlns:wsse11="http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd"
		        	wsse11:TokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0">
		          <wsse:KeyIdentifier 
		          	wsse:ValueType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID">
		          	assertion-id
		          </wsse:KeyIdentifier>
		        </wsse:SecurityTokenReference>
	      	</trust:ValidateTarget>
      		<wsp:AppliesTo>
        		<wsa:EndpointReference>
          			<wsa:Address>
          				https://relying.party/landing/page
          			</wsa:Address>
        		</wsa:EndpointReference>
      		</wsp:AppliesTo>
		</trust:RequestSecurityToken>
	</soap12:Body>
</soap12:Envelope>]]></programlisting>
				<para>
					Obsérvese que este web service esta utilizando SOAP 1.2.
                                    La aserción SAML es pasada utilizando la cabecera WS-Security SOAP 
                                    para asegurar que ciertas pilas de web service no rompan la firma XML de la aserción SAML durante el transporte desde el Proveedor
                                    de Servicios hasta el IdP.
				</para>
				<para>
					Via el elemento
					<code>&lt;wsp:AppliesTo&gt;</code>
					el proveedor de servicio puede indicar el valor esperado para el elemento
					<code>&lt;saml2:Audience&gt;</code>
					dentro de la aserción SAML,
				</para>
			</section>
			<section>
				<title>Validation response</title>
				<para>
					EL web service STS del IdP puede responder como se muestra:
				</para>
				<programlisting language="XML"><![CDATA[<soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
	<soap12:Header>
		<wsse:Security 
			xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" 
			soap12:mustUnderstand="true">
      		<wsu:Timestamp xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
        		<wsu:Created>2012-02-09T09:27:19.197Z</wsu:Created>
        		<wsu:Expires>2012-02-09T09:32:19.197Z</wsu:Expires>
      		</wsu:Timestamp>
    	</wsse:Security>
	</soap12:Header>
	<soap12:Body>
		<trust:RequestSecurityTokenResponseCollection 
			xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
      		<trust:RequestSecurityTokenResponse>
        		<trust:TokenType>
        			http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Status
        		</trust:TokenType>
        		<trust:Status>
          		<trust:Code>
          			http://docs.oasis-open.org/ws-sx/ws-trust/200512/status/valid
          		</trust:Code>
        		</trust:Status>
      		</trust:RequestSecurityTokenResponse>
    	</trust:RequestSecurityTokenResponseCollection>
	</soap12:Body>
</soap12:Envelope>]]></programlisting>
			</section>
		</section>
	</section>
	<section>
		<title>Integración con JBoss Seam</title>
		<para>
			Esta sección detalla la integración del IdP con el framework JBoss
			Seam.
		</para>
		<section>
			<title>SAML v2.0</title>
			<para>
				Es posible utilizar los servlets de autenticación SAML para solicitud/respuesta
				provistos por el Java SDK.
				A continuación se explica como lograrlo.
			</para>
			<section>
				<title>Solicitud de Autenticación</title>
				<para>
					Para enviar una solicitud de autenticación SAML v2.0  al IdP, se puede utilizar la clase 
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.AuthenticationRequestUtil
					</code>
					. Llamando el método 
					<code>sendRequest</code>
					se construirá una solicitud de autenticación SAML v2.0. 
				</para>
			</section>
			<section>
				<title>Respuesta de Autenticación</title>
				<para>
					Dependiendo del punto de entrada del protocolo al que la solicitud se ha enviado, 
                                    la respuesta SAML v2.0 sera retornada ya sea utilizando HTTP-POST o HTTP-Artifact
					binding. 
                                    En ambos casos es posible no utilizar el servlet, pero en su lugar utilizar directamente la clase:
					<code>AuthenticationResponseProcessor</code>
					.
				</para>
				<para>
					Para el enlace SAML v2.0 HTTP-POST, utilice 
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.post.AuthenticationResponseProcessor
					</code>
					. Instanciando este procesador de respuesta, se necesita un argumento opcional
					<code>AuthenticationResponseService</code>
				</para>
				<para>
					EL procesamiento de la respuesta SAML v2.0 HTTP-Artifact
					binding es 
					similar, con la excepción que una instancia de 
					<code>ArtifactAuthenticationResponseService</code>
					es requerida cuando se instancia la clase 
					<code>
						be.fedict.eid.idp.sp.protocol.saml2.artifact.AuthenticationResponseProcessor
					</code>
					. Este es debido a que es requerido por el procesador el conocer la ubicacion del web service
                                        de resolución de artefacos del IdP. 
                                        Este servicio también permite la configuración del proxy, etc.
					De la misma manera, una instancia de 
					same way as with HTTP-POST, an instance of
					<code>AuthenticationResponse</code>
					sera retornada en el caso exitoso.
				</para>
			</section>
		</section>
	</section>
	<section>
		<title>Codificación de caracteres</title>
		<para>
                    El IdP manejará toda la información condificada en UTF8. 
                    Es importante considerar que cuando se utiliza OpenID, el parseo de parámetros
                    dependiendo del entorno, debe ser procesado utiliando condificación UTF8.
lo cual romperá la firma de OpenID. En los conectores tomcat, se tiene que especificar explícitamente 
			<code>URIEncoding="UTF-8"</code>
			para solucionar esto.
		</para>
	</section>
	<section>
		<title>SAML v2.0 mod_mellon</title>
		<para>
			En el siguiente link se tienen una explicación de como configurar un Proveedor de Servicio
                    utiliando el módulo mod_mellon.
			<ulink url="http://code.google.com/p/modmellon/">mod_mellon</ulink>
		</para>
		<para>
			<code>mod_mellon</code>
			Es un modulo de autenticación para apache. Este autentica al usuario contra un IdP 
			SAML 2.0, y permite el acceso a sus directorios dependiendo de los atributos recibidos desde el IdP.
		</para>
		<para>
			Asegurese de tener instalada la librería Liblasso3 version 3.9.3 o superior.
			Se puede descargar de
			<ulink url="http://lasso.entrouvert.org/download/">Lasso</ulink>
		</para>
		
		<para>
			mod_mellon requiere que se especifique un archivo de metadatos SAML v2.0 para el 
                    proveedor de servicios. El siguiente es un ejemplo de tal archivo:
			<programlisting language="XML"><![CDATA[<EntityDescriptor
    entityID="TestSP"
    xmlns="urn:oasis:names:tc:SAML:2.0:metadata">
  <SPSSODescriptor
      AuthnRequestsSigned="false"
      WantAssertionsSigned="false"
      protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
    <NameIDFormat>
      urn:oasis:names:tc:SAML:2.0:nameid-format:transient
    </NameIDFormat>
    <AssertionConsumerService
        index="0"
        isDefault="true"
        Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
        Location="http://your-host/secret/endpoint/postResponse" />
  </SPSSODescriptor>
</EntityDescriptor>]]></programlisting>
		</para>
		<para>
			A parte de los metadatos, se tiee que proveer de la clave privada del proveedor de servicio, para la firma de 
                    solicitudes de autenticaciones SAML salientes.
		</para>
	</section>
	<appendix>
		<title>eID Identity Provider Developer's Guide License</title>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="cc.logo.large.png"
						scale="100" />
				</imageobject>
			</mediaobject>
			This document has been released under the Creative Commons license.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="share.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You are free to Share — to copy, distribute and transmit the work.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="by.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You must attribute the work in the manner specified by the author or
			licensor (but not in any way that suggests that they endorse you or
			your use of the work).
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nc.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not use this work for commercial purposes.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nd.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not alter, transform, or build upon this work.
		</para>
		<para>
			More information about the Creative Commons license conditions can
			be
			found at
			<ulink url="http://creativecommons.org/">Creative Commons
				organization
			</ulink>
			.
		</para>
	</appendix>
	<appendix>
		<title>eID Identity Provider License</title>
		<para>
			The eID Identity Provider source code has been released
			under the
			GNU LGPL version 3.0.
		</para>
		<para>
			<code>
				This is free software; you can redistribute it and/or modify it
				under the terms of the GNU Lesser General Public License version
				3.0
				as published by the Free Software Foundation.
			</code>
		</para>
		<para>
			<code>
				This software is distributed in the hope that it will be
				useful, but WITHOUT ANY WARRANTY; without even the implied
				warranty
				of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
				GNU
				Lesser General Public License for more details.
			</code>
		</para>
		<para>
			<code>
				You should have received a copy of the GNU Lesser General
				Public License along with this software; if not, see
				http://www.gnu.org/licenses/.
			</code>
		</para>
	</appendix>
	<appendix>
		<title>Revision history</title>
		<table>
			<title>Revision history</title>
			<tgroup cols="3">
				<colspec colwidth="1*" />
				<colspec colwidth="1*" />
				<colspec colwidth="2*" />
				<thead>
					<row>
						<entry>Date</entry>
						<entry>Author</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>28 Dec 2010</entry>
						<entry>Wim Vandenhaute</entry>
						<entry>Initial version.</entry>
					</row>
					<row>
						<entry>15 Feb 2011</entry>
						<entry>Wim Vandenhaute</entry>
						<entry>Add SAML Redirect/Artifact binding, OpenID UI
							documentation.
						</entry>
					</row>
					<row>
						<entry>9 Feb 2012</entry>
						<entry>Frank Cornelis</entry>
						<entry>WS-Trust STS validation service.</entry>
					</row>
					<row>
						<entry>23 Aug 2012</entry>
						<entry>Frank Cornelis</entry>
						<entry>Clock synchronization tip.</entry>
					</row>
					<row>
						<entry>17 Sep 2013</entry>
						<entry>Frank Cornelis</entry>
						<entry>Removed FedICT branding.</entry>
					</row>
                                        <row>
						<entry>7 Aug 2014</entry>
						<entry>Rolosa HyJ S.A.</entry>
						<entry>Spanish translation.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</appendix>
</article>