<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC 
	"-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article lang="es">
	<articleinfo>
		<title>Guía de Desarrollo eID Trust Service</title>
		<subtitle>
			Version &project.version;
		</subtitle>
		<copyright>
			<year>2008-2010</year>
			<holder>Fedict</holder>
		</copyright>
		<releaseinfo>28 Oct 2010</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Wim</firstname>
				<surname>Vandenhaute</surname>
			</author>
		</authorgroup>
		<abstract>
			<para>Este manual sirve de punto de entrada para 
                            integrar el eID Trust Service en su aplicación web.
			</para>
		</abstract>
	</articleinfo>
	<section>
		<title>Introducción</title>
		<para>
			El eID Trust Service provee un web service basado en el 
			<ulink url="http://www.w3.org/TR/xkms2/">estándar W3C XKMS v.2.0</ulink>
			for validation of a certificate chain against a certain trust domain.
			 para validación de una cadena de certificados contra un cierto dominio 
                        de confianza. Este web service también permite validación histórica 
                        de una cadena de certificados, donde se puede proveer de los datos 
                        necesarios de revocación utilizando o una lista de respuestas 
                        OCSP  y/o CRLs o utilizando el elemento
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values
			</ulink>
			.
			Además del web service, también permite la validación 
                        de atributos de los certificados y tokens de sellado de tiempo.
		</para>
		<para>
			Para más detalles técnicos sobre el web service XKMS2, 
                        refiérase a la guía de Arquitectura provista en el paquete SDK.
		</para>
	</section>
	<section>
		<title>Cliente del web service XKMS 2 </title>
		<para>
			Para acceder al web service XKMS v.2.0, el SDK provee 
                    un componente XKMS2Client . Para inicializar este componente, 
                    se toma un argumento de ubicación en forma de String, 
                    el cual espera ser la ruta completa del XKMS2 
                    web service, ej.
			<code>http://www.e-contract.be/eid-trust-service-ws/xkms2</code>
			.
		</para>
		<section>
			<title>Depuración</title>
			<para>
                            Durante el proceso de desarrollo, se puede requerir 
                            mayor información en el envío y la recepción de mensajes
                            SOAP. Se puede habilitar esta característica utilizando el método
				<code>setLogging(boolean)</code>.
			</para>
		</section>
		<section>
			<title>Proxy</title>
			<para>
				Si se está trabajando detrás de un proxy, 
                            se puede configurar esto en el XKMS2Client utilizando el método
				<code>setProxy(String proxyHost, int proxyPort)</code>.
			</para>
		</section>
		<section>
			<title>WS-Security</title>
			<para>
                            El Trust Service al que se esté conectando puede estar 
                            configurado para utilizar WS-Security para firmar los 
                            mensajes de salida. En este caso, el cliente XKMS2 
                            verificara automáticamente la firma del mensaje de 
                            entrada utilizando el certificado incrustado en el 
                            elemento WS-Security. Opcionalmente se puede agregar 
                            mayor verificación para este certificado especificando 
                            manualmente el certificado que se espera, 
                            utilizando el método
				<code>setServerCertificate(X509Certificate)</code>.
				Por defecto el tiempo (timestamp) actual del WS-Security 
                                será verificado que no tenga una diferencia mayor a 5 minutos. 
                                Se puede configurar este parámetro utilizando el método 
				<code>setMaxWSSecurityTimestampOffset(long)</code>
				(en segundos).
			</para>
		</section>
		<section>
			<title>Autenticación TLS Unilateral</title>
			<para>
				Cuando se accede al Trust Service a través de SSL, 
                            se puede especificar opcionalmente la Clave Publica 
                            a ser usada para la verificación del certificado
                            SSL utilizando el método 
				<code>setServicePublicKey(PublicKey)</code>
				.
			</para>
		</section>
	</section>
	<section>
		<title>Validación de cadena de certificados</title>
		<para>
                    En su mínima configuración, un cliente puede especificar 
                    una ruta de certificados para su validación. El Trust 
                    service realizara una validación-PKI en contra de el 
                    dominio de confianza configurado por
                    que la ruta de certificados contenga el certificado 
                    raíz como el último elemento de la lista.
		</para>
		<para>
			En el caso de que la validación no fuera exitosa, una 
			<code>ValidationFailedException</code>
			será lanzada,
			conteniendo la lista de
			<ulink url="http://www.w3.org/TR/xkms2/#XKMS_2_0_Section_5_1">XKMS2 reason URIs</ulink>
			que causaron que la validación-PKI  falle. Estas 
                        razones-URI pueden también ser obtenidas 
                        utilizando el método
			<code>getInvalidReasons()</code>.
		</para>
		<para>
			En el caso de que se requiera validar contra  un 
                    dominio de confianza especifico, el API del cliente XKMS2 
                    permite especificar esto. Opcionalmente se puede requerir 
                    que el Trust Service retorne los datos de revocación 
                    (respuestas OCSP y/o datos CRL). Estos datos de revocación 
                    pueden ser obtenidos después, utilizando el método el 
                    cual retorna un elemento
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values
			</ulink>
			.
		</para>
	</section>
	<section>
		<title>Validación Histórica</title>
		<para>
			Es posible realizar validación histórica en rutas de 
                    certificados. El cliente XKMS2 provee 3 formas de proveer 
                    los datos necesarios de revocación para el Trust Service, 
                    ya sea especificando la lista de 
			<code>OCSPResp</code>
			y
			<code>X509CRL</code>
			, o especificando la lista de respuestas OCSP codificadas 
                        y datos CRL, o alternativamente especificando 
                        explícitamente el elemento  
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values
			</ulink>.
		</para>
		<para>
			Validaciones históricas son útiles en el con
                    verificación de firmas digitales 
			ETSI XAdES v.1.3.2  enfocadas en las formas XAdES-X-L.
		</para>
	</section>
	<section>
		<title>Validación de atributos de los certificados</title>
		<para>
			Es posible validas los atributos de los certificados 
                    utilizando el web service XKMS2. Para esto se tendrá que 
                    proveer una ruta de certificados para validación-PKI de 
                    los atributos de estos certificados.
		</para>
		<para>
			Se puede especificar el atributo del certificado, utilizando el elemento
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES_The_SignerRole_element">
				XAdES CertifiedRolesListType
			</ulink>
			.
		</para>
	</section>
	<section>
		<title>Certificados TSA</title>
		<para>
			Es posible validar certificados TSA utilizando el 
                    web service XKMS2. El toquen de sellado de tiempo 
                    necesitara contener la ruta de certificados del 
                    certificado TSA para que el Trust Service pueda 
                    realizar la validación-PKI.
		</para>
		<para>
			Se puede especificar el token de sellado de tiempo 
                    utilizando la clase de BouncyCastle: 
			<code>TimeStampToken</code>.
		</para>
	</section>
	<section>
		<title>Cliente de Alta disponibilidad XKMS2</title>
		<para>
			El
			<code>HAXKMS2Client</code>
			es un componente de alta disponibilidad que provee las 
                        mismas características que el 
			<code>XKMS2Client</code>
			pero permite especificar un validador jTurst personalizado
			<code>TrustValidator</code>
			para ser utilizado en  caso  que la solicitud de 
                        validación que se realiza al web service XKMS 
                        falle inesperadamente debido a problemas de conectividad. 
                        En ese caso se utilizara el TrustValidator especificado.
		</para>
	</section>
	<appendix>
		<title>eID Trust Service Developer Guide License</title>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="cc.logo.large.png"
						scale="100" />
				</imageobject>
			</mediaobject>
			This document has been released under the Creative Commons license.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="share.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You are free to Share — to copy, distribute and transmit the work.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="by.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You must attribute the work in the manner specified by the author or
			licensor (but not in any way that suggests that they endorse you or
			your use of the work).
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nc.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not use this work for commercial purposes.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nd.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not alter, transform, or build upon this work.
		</para>
		<para>
			More information about the Creative Commons license conditions can be
			found at
			<ulink url="http://creativecommons.org/">Creative Commons organization</ulink>
			.
		</para>
	</appendix>
	<appendix>
		<title>eID Trust Service License</title>
		<para>The eID Trust Service source code has been released under the
			GNU LGPL version 3.0.
		</para>
		<para>
			<code>This is free software; you can redistribute it and/or modify it
				under the terms of the GNU Lesser General Public License version
				3.0
				as published by the Free Software Foundation.

				This software is
				distributed in the hope that it will be useful,
				but WITHOUT ANY
				WARRANTY; without even the implied warranty of
				MERCHANTABILITY or
				FITNESS FOR A PARTICULAR PURPOSE. See the GNU
				Lesser General Public
				License for more details.

				You should have received a copy of the GNU
				Lesser General Public
				License along with this software; if not, see
				http://www.gnu.org/licenses/.
			</code>
		</para>
	</appendix>
	<appendix>
		<title>Revision history</title>
		<table>
			<title>Revision history</title>
			<tgroup cols="3">
				<colspec colwidth="1*" />
				<colspec colwidth="1*" />
				<colspec colwidth="2*" />
				<thead>
					<row>
						<entry>Date</entry>
						<entry>Author</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>28 Oct 2010</entry>
						<entry>Wim Vandenhaute</entry>
						<entry>Initial version.</entry>
					</row>
					<row>
						<entry>13 May 2014</entry>
						<entry>Rolosa S.A.</entry>
						<entry>Spanish Translation</entry>
					</row>                                        
				</tbody>
                                
			</tgroup>
		</table>
	</appendix>
</article>
