NetBeans: Executing 'mvn -Dnetbeans.execution=true -Pmysql test'
NetBeans:      JAVA_HOME=/usr/lib/jvm/jdk1.6.0_45
Scanning for projects...
------------------------------------------------------------------------
Reactor Build Order:

FedICT eID Trust Service Project
FedICT eID Trust Service MBean Services
FedICT eID Trust Service XKMS2 Web Service Binding
FedICT eID Trust Service Entities
FedICT eID Trust Service Java Client
FedICT eID Trust Service SNMP
FedICT eID Trust Service Model
FedICT eID Trust Service XKMS2 Implementation
FedICT eID Trust Service WS Runtime
FedICT eID Trust Service OCSP Responder
FedICT eID Trust Service SQL DDL
FedICT eID Trust Service Portal Model
FedICT eID Trust Service Portal Webapp
FedICT eID Trust Service Admin Portal Model
FedICT eID Trust Service Admin Portal Webapp
FedICT eID Trust Service Startup Runtime
FedICT eID Trust Service EAR
FedICT eID Trust Service Tests
FedICT eID Trust Service CXF Integration Tests
FedICT eID Trust Service Administrator Guide
FedICT eID Trust Service MySQL Distribution

Using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder with a thread count of 1
                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Project 1.0.3-SNAPSHOT
------------------------------------------------------------------------
                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service MBean Services 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-service ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-service ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-service ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-service/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-service ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-service ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-service/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service XKMS2 Web Service Binding 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- jaxws-maven-plugin:2.2:wsimport (wsimport) @ eid-trust-service-xkms2-ws ---

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-xkms2-ws ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 6 resources
Copying 1 resource

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-xkms2-ws ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-xkms2-ws ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-xkms2-ws ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-xkms2-ws ---
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running XKMSServiceFactoryTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.191 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Entities 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-entity ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-entity ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-entity ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 1 resource

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-entity ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-entity ---
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running test.unit.be.fedict.trust.service.PersistenceTest
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303020ad
DEBUG [BasicTypeRegistry] Adding type registration true_false -> org.hibernate.type.TrueFalseType@bd86fd3
DEBUG [BasicTypeRegistry] Adding type registration yes_no -> org.hibernate.type.YesNoType@5c07f4ec
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration char -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration int -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration string -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration java.lang.String -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration url -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@351563ff
DEBUG [BasicTypeRegistry] Adding type registration calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17fe1feb
DEBUG [BasicTypeRegistry] Adding type registration locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration timezone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39385660
DEBUG [BasicTypeRegistry] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44a613f8
DEBUG [BasicTypeRegistry] Adding type registration binary -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration byte[] -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration [B -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration image -> org.hibernate.type.ImageType@682bc3f5
DEBUG [BasicTypeRegistry] Adding type registration characters -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration char[] -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration [C -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration text -> org.hibernate.type.TextType@62c09554
DEBUG [BasicTypeRegistry] Adding type registration blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cf7c31d
DEBUG [BasicTypeRegistry] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@bd10a5c
DEBUG [BasicTypeRegistry] Adding type registration clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ba42792
DEBUG [BasicTypeRegistry] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1264ab4d
DEBUG [BasicTypeRegistry] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@245e13ad
DEBUG [BasicTypeRegistry] Adding type registration serializable -> org.hibernate.type.SerializableType@151ca803
DEBUG [BasicTypeRegistry] Adding type registration object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5488e2dd
DEBUG [BasicTypeRegistry] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66e64686
DEBUG [BasicTypeRegistry] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18203c31
DEBUG [BasicTypeRegistry] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c4fc156
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@681e2ca7
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1505bd58
DEBUG [BasicTypeRegistry] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2bd1e730
DEBUG [BasicTypeRegistry] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61a116c9
INFO  [Version] Hibernate Commons Annotations 3.2.0.Final
INFO  [Environment] Hibernate 3.6.2.Final
INFO  [Environment] hibernate.properties not found
INFO  [Environment] Bytecode provider name : javassist
INFO  [Environment] using JDK 1.4 java.sql.Timestamp handling
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
INFO  [Version] Hibernate EntityManager 3.6.2.Final
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303020ad
DEBUG [BasicTypeRegistry] Adding type registration true_false -> org.hibernate.type.TrueFalseType@bd86fd3
DEBUG [BasicTypeRegistry] Adding type registration yes_no -> org.hibernate.type.YesNoType@5c07f4ec
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration char -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration int -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration string -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration java.lang.String -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration url -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@351563ff
DEBUG [BasicTypeRegistry] Adding type registration calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17fe1feb
DEBUG [BasicTypeRegistry] Adding type registration locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration timezone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39385660
DEBUG [BasicTypeRegistry] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44a613f8
DEBUG [BasicTypeRegistry] Adding type registration binary -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration byte[] -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration [B -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration image -> org.hibernate.type.ImageType@682bc3f5
DEBUG [BasicTypeRegistry] Adding type registration characters -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration char[] -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration [C -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration text -> org.hibernate.type.TextType@62c09554
DEBUG [BasicTypeRegistry] Adding type registration blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cf7c31d
DEBUG [BasicTypeRegistry] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@bd10a5c
DEBUG [BasicTypeRegistry] Adding type registration clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ba42792
DEBUG [BasicTypeRegistry] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1264ab4d
DEBUG [BasicTypeRegistry] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@245e13ad
DEBUG [BasicTypeRegistry] Adding type registration serializable -> org.hibernate.type.SerializableType@151ca803
DEBUG [BasicTypeRegistry] Adding type registration object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4dd36dfe
DEBUG [BasicTypeRegistry] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73da669c
DEBUG [BasicTypeRegistry] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@786c730
DEBUG [BasicTypeRegistry] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@217f242c
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@221fd5e2
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5812f9ee
DEBUG [BasicTypeRegistry] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45d6a56e
DEBUG [BasicTypeRegistry] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f06fc94
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG [DefaultIdentifierGeneratorFactory] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
DEBUG [Configuration] Processing hbm.xml files
DEBUG [Configuration] Process annotated classes
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.CertificateAuthorityEntity
INFO  [QueryBinder] Binding Named query: ts_ca.q.w.tp => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
INFO  [QueryBinder] Binding Named query: ts_ca.q.n.w.tp => SELECT name FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
INFO  [QueryBinder] Binding Named query: ts_ca.d.w.tp => DELETE FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
INFO  [QueryBinder] Binding Named query: ts_ca.q.all => FROM CertificateAuthorityEntity
INFO  [QueryBinder] Binding Named query: ts_ca.q.count.active => SELECT COUNT(*) FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
INFO  [QueryBinder] Binding Named query: ts_ca.q.active => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name CertificateAuthorityEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.CertificateAuthorityEntity on table ts_cert_authorities
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property name with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for name
DEBUG [PropertyBinder] Building property name
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=crlUrl, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property crlUrl with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for crlUrl
DEBUG [PropertyBinder] Building property crlUrl
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=encodedCertificate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property encodedCertificate with lazy=true
DEBUG [SimpleValueBinder] building SimpleValue for encodedCertificate
DEBUG [PropertyBinder] Building property encodedCertificate
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=nextUpdate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property nextUpdate with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for nextUpdate
DEBUG [PropertyBinder] Building property nextUpdate
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=status, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property status with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for status
DEBUG [PropertyBinder] Building property status
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=thisUpdate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property thisUpdate with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for thisUpdate
DEBUG [PropertyBinder] Building property thisUpdate
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_cert_authorities), mappingColumn=trustPoint, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] Building property trustPoint
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.RevokedCertificateEntity
INFO  [QueryBinder] Binding Named query: ts_rc.q.i.s => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
INFO  [QueryBinder] Binding Named query: ts_rc.q.c => SELECT MAX(crlNumber) FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
INFO  [QueryBinder] Binding Named query: ts_rc.d.i => DELETE FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
INFO  [QueryBinder] Binding Named query: ts_rc.q.i => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
INFO  [QueryBinder] Binding Named query: ts_rc.d.i.old.c => DELETE FROM RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
INFO  [QueryBinder] Binding Named query: ts_rc.q.count.all => SELECT COUNT(*) FROM RevokedCertificateEntity
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name RevokedCertificateEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.RevokedCertificateEntity on table ts_revoked_certs
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_revoked_certs), mappingColumn=pk, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_revoked_certs), mappingColumn=issuer, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property issuer with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for issuer
DEBUG [PropertyBinder] Building property issuer
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_revoked_certs), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property serialNumber with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for serialNumber
DEBUG [PropertyBinder] Building property serialNumber
DEBUG [PropertyBinder] Building property pk
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_revoked_certs), mappingColumn=crlNumber, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property crlNumber with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for crlNumber
DEBUG [PropertyBinder] Building property crlNumber
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_revoked_certs), mappingColumn=revocationDate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property revocationDate with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for revocationDate
DEBUG [PropertyBinder] Building property revocationDate
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.TrustDomainEntity
INFO  [QueryBinder] Binding Named query: ts_td.list.all => FROM TrustDomainEntity
INFO  [QueryBinder] Binding Named query: ts_td.get.default => SELECT td FROM TrustDomainEntity AS td WHERE td.defaultDomain = true
INFO  [QueryBinder] Binding Named query: ts_td.list.tp => SELECT td.trustPoints FROM TrustDomainEntity AS td WHERE td.name = :name
INFO  [QueryBinder] Binding Named query: ts_td.list.w.tp => SELECT td FROM TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name TrustDomainEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.TrustDomainEntity on table ts_trustdom
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property name with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for name
DEBUG [PropertyBinder] Building property name
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=certificateConstraints, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=certificateConstraints_KEY, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='certificateConstraints_KEY', referencedColumn='null', mappedBy='null'}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [CollectionBinder] Collection role: be.fedict.trust.service.entity.TrustDomainEntity.certificateConstraints
DEBUG [PropertyBinder] Building property certificateConstraints
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=defaultDomain, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property defaultDomain with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for defaultDomain
DEBUG [PropertyBinder] Building property defaultDomain
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=trustPoints_KEY, insertable=true, updatable=true, unique=false}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='trustPoints_KEY', referencedColumn='null', mappedBy='null'}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [CollectionBinder] Collection role: be.fedict.trust.service.entity.TrustDomainEntity.trustPoints
DEBUG [PropertyBinder] Building property trustPoints
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trustdom), mappingColumn=useCaching, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property useCaching with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for useCaching
DEBUG [PropertyBinder] Building property useCaching
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name CertificateConstraintEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity on table ts_certcons
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property id with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for id
DEBUG [PropertyBinder] Building property id
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=trustDomain, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] Building property trustDomain
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name PolicyConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=policy, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property policy with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for policy
DEBUG [PropertyBinder] Building property policy
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.DNConstraintEntity
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name DNConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=dn, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property dn with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for dn
DEBUG [PropertyBinder] Building property dn
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name EndEntityConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=issuerName, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property issuerName with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for issuerName
DEBUG [PropertyBinder] Building property issuerName
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=serialNumber, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property serialNumber with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for serialNumber
DEBUG [PropertyBinder] Building property serialNumber
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name KeyUsageConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=allowed, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property allowed with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for allowed
DEBUG [PropertyBinder] Building property allowed
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=keyUsage, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property keyUsage with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for keyUsage
DEBUG [PropertyBinder] Building property keyUsage
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name QCStatementsConstraintEntity
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_certcons), mappingColumn=qcComplianceFilter, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property qcComplianceFilter with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for qcComplianceFilter
DEBUG [PropertyBinder] Building property qcComplianceFilter
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.TrustPointEntity
INFO  [QueryBinder] Binding Named query: ts_tp.q.all => FROM TrustPointEntity
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name TrustPointEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.TrustPointEntity on table ts_trust_point
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trust_point), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property name with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for name
DEBUG [PropertyBinder] Building property name
DEBUG [Ejb3Column] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trust_point), mappingColumn=certificateAuthority, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] Building property certificateAuthority
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trust_point), mappingColumn=crlRefreshCronSchedule, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property crlRefreshCronSchedule with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for crlRefreshCronSchedule
DEBUG [PropertyBinder] Building property crlRefreshCronSchedule
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_trust_point), mappingColumn=fireDate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property fireDate with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for fireDate
DEBUG [PropertyBinder] Building property fireDate
INFO  [AnnotationBinder] Binding entity from annotated class: be.fedict.trust.service.entity.AuditEntity
INFO  [QueryBinder] Binding Named query: ts_audit.all => FROM AuditEntity ORDER BY id DESC
INFO  [QueryBinder] Binding Named query: ts_audit.rem.all => DELETE FROM AuditEntity
DEBUG [Ejb3Column] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG [AnnotationBinder] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG [EntityBinder] Import with entity name AuditEntity
INFO  [EntityBinder] Bind entity be.fedict.trust.service.entity.AuditEntity on table ts_audit
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_audit), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property id with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for id
DEBUG [PropertyBinder] Building property id
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_audit), mappingColumn=auditDate, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property auditDate with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for auditDate
DEBUG [PropertyBinder] Building property auditDate
DEBUG [Ejb3Column] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ts_audit), mappingColumn=message, insertable=true, updatable=true, unique=false}
DEBUG [PropertyBinder] binding property message with lazy=false
DEBUG [SimpleValueBinder] building SimpleValue for message
DEBUG [PropertyBinder] Building property message
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for name
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for crlUrl
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for encodedCertificate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for nextUpdate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for status
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for thisUpdate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for issuer
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for serialNumber
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for crlNumber
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for revocationDate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for name
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for defaultDomain
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for useCaching
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for id
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for policy
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for dn
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for issuerName
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for serialNumber
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for allowed
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for keyUsage
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for qcComplianceFilter
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for name
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for crlRefreshCronSchedule
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for fireDate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for id
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for auditDate
DEBUG [SimpleValueBinder] Setting SimpleValue typeName for message
DEBUG [Configuration] processing fk mappings (*ToOne and JoinedSubclass)
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing collection mappings
DEBUG [CollectionSecondPass] Second pass for collection: be.fedict.trust.service.entity.TrustDomainEntity.trustPoints
DEBUG [CollectionBinder] Binding as ManyToMany: be.fedict.trust.service.entity.TrustDomainEntity.trustPoints
DEBUG [CollectionSecondPass] Mapped collection key: ts_trustdom_name, element: trustPoints_name
DEBUG [CollectionSecondPass] Second pass for collection: be.fedict.trust.service.entity.TrustDomainEntity.certificateConstraints
DEBUG [CollectionBinder] Binding a OneToMany: be.fedict.trust.service.entity.TrustDomainEntity.certificateConstraints through an association table
DEBUG [CollectionSecondPass] Mapped collection key: ts_trustdom_name, element: certificateConstraints_id
DEBUG [Configuration] processing native query and ResultSetMapping mappings
DEBUG [Configuration] processing association property references
DEBUG [Configuration] processing foreign key constraints
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
INFO  [Configuration] Hibernate Validator not found: ignoring
DEBUG [NamingHelper] No JNDI name configured for binding Ejb3Configuration
DEBUG [Configuration] Preparing to build session factory with filters : {}
DEBUG [Configuration] Processing hbm.xml files
DEBUG [Configuration] Process annotated classes
DEBUG [Configuration] processing fk mappings (*ToOne and JoinedSubclass)
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing collection mappings
DEBUG [Configuration] processing native query and ResultSetMapping mappings
DEBUG [Configuration] processing association property references
DEBUG [Configuration] processing foreign key constraints
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [Configuration] Legacy Validator not present in classpath, ignoring event listener registration
DEBUG [HibernateSearchEventListenerRegister] Search not present in classpath, ignoring event listener registration.
INFO  [HibernateSearchEventListenerRegister] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
INFO  [DriverManagerConnectionProvider] Using Hibernate built-in connection pool (not for production use!)
INFO  [DriverManagerConnectionProvider] Hibernate connection pool size: 20
INFO  [DriverManagerConnectionProvider] autocommit mode: true
INFO  [DriverManagerConnectionProvider] using driver: org.hsqldb.jdbcDriver at URL: jdbc:hsqldb:mem:beta
INFO  [DriverManagerConnectionProvider] connection properties: {autocommit=true, release_mode=auto}
DEBUG [DriverManagerConnectionProvider] opening new JDBC connection
DEBUG [DriverManagerConnectionProvider] created connection to: jdbc:hsqldb:mem:beta, Isolation Level: 2
INFO  [SettingsFactory] Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
INFO  [SettingsFactory] Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
INFO  [Dialect] Using dialect: org.hibernate.dialect.HSQLDialect
INFO  [JdbcSupportLoader] Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
INFO  [TransactionFactoryFactory] Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory
INFO  [TransactionManagerLookupFactory] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
INFO  [SettingsFactory] Automatic flush during beforeCompletion(): disabled
INFO  [SettingsFactory] Automatic session close at end of transaction: disabled
INFO  [SettingsFactory] JDBC batch size: 15
INFO  [SettingsFactory] JDBC batch updates for versioned data: disabled
INFO  [SettingsFactory] Scrollable result sets: enabled
DEBUG [SettingsFactory] Wrap result sets: disabled
INFO  [SettingsFactory] JDBC3 getGeneratedKeys(): disabled
INFO  [SettingsFactory] Connection release mode: auto
INFO  [SettingsFactory] Default batch fetch size: 1
INFO  [SettingsFactory] Generate SQL with comments: disabled
INFO  [SettingsFactory] Order SQL updates by primary key: disabled
INFO  [SettingsFactory] Order SQL inserts for batching: disabled
INFO  [SettingsFactory] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
INFO  [ASTQueryTranslatorFactory] Using ASTQueryTranslatorFactory
INFO  [SettingsFactory] Query language substitutions: {}
INFO  [SettingsFactory] JPA-QL strict compliance: enabled
INFO  [SettingsFactory] Second-level cache: enabled
INFO  [SettingsFactory] Query cache: disabled
INFO  [SettingsFactory] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
INFO  [SettingsFactory] Optimize cache for minimal puts: disabled
INFO  [SettingsFactory] Structured second-level cache entries: disabled
INFO  [SettingsFactory] Statistics: disabled
INFO  [SettingsFactory] Deleted entity synthetic identifier rollback: disabled
INFO  [SettingsFactory] Default entity-mode: pojo
INFO  [SettingsFactory] Named query checking : enabled
INFO  [SettingsFactory] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
INFO  [SessionFactoryImpl] building session factory
DEBUG [SessionFactoryImpl] Statistics initialized [enabled=false]}
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [BasicTypeRegistry] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303020ad
DEBUG [BasicTypeRegistry] Adding type registration true_false -> org.hibernate.type.TrueFalseType@bd86fd3
DEBUG [BasicTypeRegistry] Adding type registration yes_no -> org.hibernate.type.YesNoType@5c07f4ec
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e530cf2
DEBUG [BasicTypeRegistry] Adding type registration character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration char -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35175422
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61c80b01
DEBUG [BasicTypeRegistry] Adding type registration integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration int -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3cd51
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d2452e8
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c9d92c
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62f47396
DEBUG [BasicTypeRegistry] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c96cf11
DEBUG [BasicTypeRegistry] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [BasicTypeRegistry] Adding type registration string -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration java.lang.String -> org.hibernate.type.StringType@398825b3
DEBUG [BasicTypeRegistry] Adding type registration url -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c29e357
DEBUG [BasicTypeRegistry] Adding type registration date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aaf0b3
DEBUG [BasicTypeRegistry] Adding type registration time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cac6a45
DEBUG [BasicTypeRegistry] Adding type registration timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c19e15c
DEBUG [BasicTypeRegistry] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@351563ff
DEBUG [BasicTypeRegistry] Adding type registration calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b6f0be8
DEBUG [BasicTypeRegistry] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17fe1feb
DEBUG [BasicTypeRegistry] Adding type registration locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16f8f7db
DEBUG [BasicTypeRegistry] Adding type registration currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e79ed7f
DEBUG [BasicTypeRegistry] Adding type registration timezone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75e845c2
DEBUG [BasicTypeRegistry] Adding type registration class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7786df0f
DEBUG [BasicTypeRegistry] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33d6f122
DEBUG [BasicTypeRegistry] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39385660
DEBUG [BasicTypeRegistry] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44a613f8
DEBUG [BasicTypeRegistry] Adding type registration binary -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration byte[] -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration [B -> org.hibernate.type.BinaryType@40589e56
DEBUG [BasicTypeRegistry] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3598cb3d
DEBUG [BasicTypeRegistry] Adding type registration image -> org.hibernate.type.ImageType@682bc3f5
DEBUG [BasicTypeRegistry] Adding type registration characters -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration char[] -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration [C -> org.hibernate.type.CharArrayType@779b04e2
DEBUG [BasicTypeRegistry] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@219ce060
DEBUG [BasicTypeRegistry] Adding type registration text -> org.hibernate.type.TextType@62c09554
DEBUG [BasicTypeRegistry] Adding type registration blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cf7c31d
DEBUG [BasicTypeRegistry] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@bd10a5c
DEBUG [BasicTypeRegistry] Adding type registration clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ba42792
DEBUG [BasicTypeRegistry] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1264ab4d
DEBUG [BasicTypeRegistry] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@245e13ad
DEBUG [BasicTypeRegistry] Adding type registration serializable -> org.hibernate.type.SerializableType@151ca803
DEBUG [BasicTypeRegistry] Adding type registration object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@106caf16
DEBUG [BasicTypeRegistry] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2fa6a1a7
DEBUG [BasicTypeRegistry] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64bef361
DEBUG [BasicTypeRegistry] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@345c98f3
DEBUG [BasicTypeRegistry] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b3d9460
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57d840cd
DEBUG [BasicTypeRegistry] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36867fc9
DEBUG [BasicTypeRegistry] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@382f8116
DEBUG [BasicTypeRegistry] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36c3e82b
DEBUG [BasicTypeRegistry] Adding type registration clob -> org.hibernate.type.ClobType@78878c4c
INFO  [BasicTypeRegistry] Type registration [clob] overrides previous : org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78878c4c
INFO  [BasicTypeRegistry] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@e49d67c
DEBUG [BasicTypeRegistry] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@628f9a32
INFO  [BasicTypeRegistry] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@245e13ad
DEBUG [BasicTypeRegistry] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@4e2f2295
INFO  [BasicTypeRegistry] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@bd10a5c
DEBUG [BasicTypeRegistry] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@315b0333
INFO  [BasicTypeRegistry] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@4cf7c31d
DEBUG [BasicTypeRegistry] Adding type registration blob -> org.hibernate.type.BlobType@7564debb
INFO  [BasicTypeRegistry] Type registration [blob] overrides previous : org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7564debb
INFO  [BasicTypeRegistry] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@7426dbec
DEBUG [BasicTypeRegistry] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@44c6f734
INFO  [BasicTypeRegistry] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@1264ab4d
DEBUG [BasicTypeRegistry] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b0c0f66
INFO  [BasicTypeRegistry] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@3ba42792
DEBUG [SessionFactoryImpl] Session factory constructed with filter configurations : {}
DEBUG [SessionFactoryImpl] instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/jdk1.6.0_45/jre/lib/amd64, java.vm.version=20.45-b01, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CA, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity, java.runtime.version=1.6.0_45-b06, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity, java.endorsed.dirs=/usr/lib/jvm/jdk1.6.0_45/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/surefire/surefirebooter7717878805254608383.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/lib/jvm/jdk1.6.0_45/jre/lib/amd64/server:/usr/lib/jvm/jdk1.6.0_45/jre/lib/amd64:/usr/lib/jvm/jdk1.6.0_45/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/test-classes:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes:/home/jubarran/.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar:/home/jubarran/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/jubarran/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/jubarran/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/jubarran/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/jubarran/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-entitymanager/3.6.2.Final/hibernate-entitymanager-3.6.2.Final.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-core/3.6.2.Final/hibernate-core-3.6.2.Final.jar:/home/jubarran/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/jubarran/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/jubarran/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/jubarran/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/jubarran/.m2/repository/cglib/cglib/2.2/cglib-2.2.jar:/home/jubarran/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/jubarran/.m2/repository/javassist/javassist/3.12.0.GA/javassist-3.12.0.GA.jar:/home/jubarran/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jubarran/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/jubarran/.m2/repository/org/slf4j/slf4j-log4j12/1.5.8/slf4j-log4j12-1.5.8.jar:, java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory, os.version=3.5.0-54-generic, user.home=/home/jubarran, user.timezone=, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=UTF-8, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, user.name=jubarran, java.class.path=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/test-classes:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes:/home/jubarran/.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar:/home/jubarran/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/jubarran/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/jubarran/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/jubarran/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/jubarran/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-entitymanager/3.6.2.Final/hibernate-entitymanager-3.6.2.Final.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-core/3.6.2.Final/hibernate-core-3.6.2.Final.jar:/home/jubarran/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/jubarran/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/jubarran/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/jubarran/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/jubarran/.m2/repository/cglib/cglib/2.2/cglib-2.2.jar:/home/jubarran/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/jubarran/.m2/repository/javassist/javassist/3.12.0.GA/javassist-3.12.0.GA.jar:/home/jubarran/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jubarran/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/jubarran/.m2/repository/org/slf4j/slf4j-log4j12/1.5.8/slf4j-log4j12-1.5.8.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, java.vm.specification.version=1.0, sun.arch.data.model=64, java.home=/usr/lib/jvm/jdk1.6.0_45/jre, sun.java.command=/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/surefire/surefirebooter7717878805254608383.jar /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/surefire/surefire3462245522810466260tmp /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/surefire/surefire8946625420800475909tmp, netbeans.execution=true, hibernate.dialect=org.hibernate.dialect.HSQLDialect, hibernate.connection.url=jdbc:hsqldb:mem:beta, java.specification.vendor=Sun Microsystems Inc., user.language=en, java.vm.info=mixed mode, java.version=1.6.0_45, hibernate.transaction.flush_before_completion=false, java.ext.dirs=/usr/lib/jvm/jdk1.6.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/jdk1.6.0_45/jre/lib/resources.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/rt.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/jce.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.6.0_45/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/jdk1.6.0_45/jre/classes, java.vendor=Sun Microsystems Inc., localRepository=/home/jubarran/.m2/repository, file.separator=/, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=gnome, sun.cpu.isalist=}
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select keyusageco_.id, keyusageco_.trustDomain_name as trustDo10_3_, keyusageco_.allowed as allowed3_, keyusageco_.keyUsage as keyUsage3_ from ts_certcons keyusageco_ where keyusageco_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, allowed, keyUsage, DTYPE, id) values (?, ?, ?, 'KeyUsageConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=?, allowed=?, keyUsage=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, allowed, keyUsage, DTYPE) values (null, ?, ?, ?, 'KeyUsageConstraintEntity')
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select policycons_.id, policycons_.trustDomain_name as trustDo10_3_, policycons_.policy as policy3_ from ts_certcons policycons_ where policycons_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, policy, DTYPE, id) values (?, ?, 'PolicyConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=?, policy=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, policy, DTYPE) values (null, ?, ?, 'PolicyConstraintEntity')
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.RevokedCertificateEntity
DEBUG [AbstractEntityPersister]  Version select: select issuer, serialNumber from ts_revoked_certs where issuer =? and serialNumber =?
DEBUG [AbstractEntityPersister]  Snapshot select: select revokedcer_.issuer, revokedcer_.serialNumber, revokedcer_.crlNumber as crlNumber1_, revokedcer_.revocationDate as revocati4_1_ from ts_revoked_certs revokedcer_ where revokedcer_.issuer=? and revokedcer_.serialNumber=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_revoked_certs (crlNumber, revocationDate, issuer, serialNumber) values (?, ?, ?, ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_revoked_certs set crlNumber=?, revocationDate=? where issuer=? and serialNumber=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_revoked_certs where issuer=? and serialNumber=?
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select endentityc_.id, endentityc_.trustDomain_name as trustDo10_3_, endentityc_.issuerName as issuerName3_, endentityc_.serialNumber as serialNu6_3_ from ts_certcons endentityc_ where endentityc_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, issuerName, serialNumber, DTYPE, id) values (?, ?, ?, 'EndEntityConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=?, issuerName=?, serialNumber=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, issuerName, serialNumber, DTYPE) values (null, ?, ?, ?, 'EndEntityConstraintEntity')
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select certificat_.id, certificat_.trustDomain_name as trustDo10_3_ from ts_certcons certificat_ where certificat_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, DTYPE, id) values (?, 'CertificateConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, DTYPE) values (null, ?, 'CertificateConstraintEntity')
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [AbstractEntityPersister]  Version select: select name from ts_trust_point where name =?
DEBUG [AbstractEntityPersister]  Snapshot select: select trustpoint_.name, trustpoint_.certificateAuthority_name as certific4_4_, trustpoint_.crlRefreshCronSchedule as crlRefre2_4_, trustpoint_.fireDate as fireDate4_ from ts_trust_point trustpoint_ where trustpoint_.name=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_trust_point (certificateAuthority_name, crlRefreshCronSchedule, fireDate, name) values (?, ?, ?, ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_trust_point set certificateAuthority_name=?, crlRefreshCronSchedule=?, fireDate=? where name=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_trust_point where name=?
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.DNConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select dnconstrai_.id, dnconstrai_.trustDomain_name as trustDo10_3_, dnconstrai_.dn as dn3_ from ts_certcons dnconstrai_ where dnconstrai_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, dn, DTYPE, id) values (?, ?, 'DNConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=?, dn=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, dn, DTYPE) values (null, ?, ?, 'DNConstraintEntity')
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.AuditEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_audit where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select auditentit_.id, auditentit_.auditDate as auditDate5_, auditentit_.message as message5_ from ts_audit auditentit_ where auditentit_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_audit (auditDate, message, id) values (?, ?, ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_audit set auditDate=?, message=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_audit where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_audit (id, auditDate, message) values (null, ?, ?)
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [AbstractEntityPersister]  Version select: select name from ts_trustdom where name =?
DEBUG [AbstractEntityPersister]  Snapshot select: select trustdomai_.name, trustdomai_.defaultDomain as defaultD2_2_, trustdomai_.useCaching as useCaching2_ from ts_trustdom trustdomai_ where trustdomai_.name=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_trustdom (defaultDomain, useCaching, name) values (?, ?, ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_trustdom set defaultDomain=?, useCaching=? where name=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_trustdom where name=?
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [AbstractEntityPersister]  Version select: select name from ts_cert_authorities where name =?
DEBUG [AbstractEntityPersister]  Snapshot select: select certificat_.name, certificat_.crlUrl as crlUrl0_, certificat_.encodedCertificate as encodedC3_0_, certificat_.nextUpdate as nextUpdate0_, certificat_.status as status0_, certificat_.thisUpdate as thisUpdate0_, certificat_.trustPoint_name as trustPoint7_0_ from ts_cert_authorities certificat_ where certificat_.name=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_cert_authorities (crlUrl, encodedCertificate, nextUpdate, status, thisUpdate, trustPoint_name, name) values (?, ?, ?, ?, ?, ?, ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_cert_authorities set crlUrl=?, encodedCertificate=?, nextUpdate=?, status=?, thisUpdate=?, trustPoint_name=? where name=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_cert_authorities where name=?
DEBUG [AbstractEntityPersister] Static SQL for entity: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
DEBUG [AbstractEntityPersister]  Version select: select id from ts_certcons where id =?
DEBUG [AbstractEntityPersister]  Snapshot select: select qcstatemen_.id, qcstatemen_.trustDomain_name as trustDo10_3_, qcstatemen_.qcComplianceFilter as qcCompli9_3_ from ts_certcons qcstatemen_ where qcstatemen_.id=?
DEBUG [AbstractEntityPersister]  Insert 0: insert into ts_certcons (trustDomain_name, qcComplianceFilter, DTYPE, id) values (?, ?, 'QCStatementsConstraintEntity', ?)
DEBUG [AbstractEntityPersister]  Update 0: update ts_certcons set trustDomain_name=?, qcComplianceFilter=? where id=?
DEBUG [AbstractEntityPersister]  Delete 0: delete from ts_certcons where id=?
DEBUG [AbstractEntityPersister]  Identity insert: insert into ts_certcons (id, trustDomain_name, qcComplianceFilter, DTYPE) values (null, ?, ?, 'QCStatementsConstraintEntity')
DEBUG [AbstractCollectionPersister] Static SQL for collection: be.fedict.trust.service.entity.TrustDomainEntity.certificateConstraints
DEBUG [AbstractCollectionPersister]  Row insert: insert into ts_trustdom_ts_certcons (ts_trustdom_name, certificateConstraints_id) values (?, ?)
DEBUG [AbstractCollectionPersister]  Row update: update ts_trustdom_ts_certcons set certificateConstraints_id=? where ts_trustdom_name=? and certificateConstraints_id=?
DEBUG [AbstractCollectionPersister]  Row delete: delete from ts_trustdom_ts_certcons where ts_trustdom_name=? and certificateConstraints_id=?
DEBUG [AbstractCollectionPersister]  One-shot delete: delete from ts_trustdom_ts_certcons where ts_trustdom_name=?
DEBUG [AbstractCollectionPersister] Static SQL for collection: be.fedict.trust.service.entity.TrustDomainEntity.trustPoints
DEBUG [AbstractCollectionPersister]  Row insert: insert into ts_trustdom_ts_trust_point (ts_trustdom_name, trustPoints_name) values (?, ?)
DEBUG [AbstractCollectionPersister]  Row update: update ts_trustdom_ts_trust_point set trustPoints_name=? where ts_trustdom_name=? and trustPoints_name=?
DEBUG [AbstractCollectionPersister]  Row delete: delete from ts_trustdom_ts_trust_point where ts_trustdom_name=? and trustPoints_name=?
DEBUG [AbstractCollectionPersister]  One-shot delete: delete from ts_trustdom_ts_trust_point where ts_trustdom_name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [NONE]: select policycons0_.id as id3_2_, policycons0_.trustDomain_name as trustDo10_3_2_, policycons0_.policy as policy3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons policycons0_ left outer join ts_trustdom trustdomai1_ on policycons0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [READ]: select policycons0_.id as id3_2_, policycons0_.trustDomain_name as trustDo10_3_2_, policycons0_.policy as policy3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons policycons0_ left outer join ts_trustdom trustdomai1_ on policycons0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [UPGRADE]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [UPGRADE_NOWAIT]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [FORCE]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [PESSIMISTIC_READ]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [PESSIMISTIC_WRITE]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [OPTIMISTIC]: select policycons0_.id as id3_2_, policycons0_.trustDomain_name as trustDo10_3_2_, policycons0_.policy as policy3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons policycons0_ left outer join ts_trustdom trustdomai1_ on policycons0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select policycons0_.id as id3_2_, policycons0_.trustDomain_name as trustDo10_3_2_, policycons0_.policy as policy3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons policycons0_ left outer join ts_trustdom trustdomai1_ on policycons0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.PolicyConstraintEntity: select policycons0_.id as id3_0_, policycons0_.trustDomain_name as trustDo10_3_0_, policycons0_.policy as policy3_0_ from ts_certcons policycons0_ where policycons0_.id=? and policycons0_.DTYPE='PolicyConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [NONE]: select keyusageco0_.id as id3_2_, keyusageco0_.trustDomain_name as trustDo10_3_2_, keyusageco0_.allowed as allowed3_2_, keyusageco0_.keyUsage as keyUsage3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons keyusageco0_ left outer join ts_trustdom trustdomai1_ on keyusageco0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [READ]: select keyusageco0_.id as id3_2_, keyusageco0_.trustDomain_name as trustDo10_3_2_, keyusageco0_.allowed as allowed3_2_, keyusageco0_.keyUsage as keyUsage3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons keyusageco0_ left outer join ts_trustdom trustdomai1_ on keyusageco0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [UPGRADE]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [UPGRADE_NOWAIT]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [FORCE]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [PESSIMISTIC_READ]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [PESSIMISTIC_WRITE]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [OPTIMISTIC]: select keyusageco0_.id as id3_2_, keyusageco0_.trustDomain_name as trustDo10_3_2_, keyusageco0_.allowed as allowed3_2_, keyusageco0_.keyUsage as keyUsage3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons keyusageco0_ left outer join ts_trustdom trustdomai1_ on keyusageco0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select keyusageco0_.id as id3_2_, keyusageco0_.trustDomain_name as trustDo10_3_2_, keyusageco0_.allowed as allowed3_2_, keyusageco0_.keyUsage as keyUsage3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons keyusageco0_ left outer join ts_trustdom trustdomai1_ on keyusageco0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity: select keyusageco0_.id as id3_0_, keyusageco0_.trustDomain_name as trustDo10_3_0_, keyusageco0_.allowed as allowed3_0_, keyusageco0_.keyUsage as keyUsage3_0_ from ts_certcons keyusageco0_ where keyusageco0_.id=? and keyusageco0_.DTYPE='KeyUsageConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [NONE]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [READ]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [UPGRADE]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [UPGRADE_NOWAIT]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [FORCE]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [PESSIMISTIC_READ]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [PESSIMISTIC_WRITE]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [PESSIMISTIC_FORCE_INCREMENT]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [OPTIMISTIC]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.RevokedCertificateEntity [OPTIMISTIC_FORCE_INCREMENT]: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.RevokedCertificateEntity: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.RevokedCertificateEntity: select revokedcer0_.issuer as issuer1_0_, revokedcer0_.serialNumber as serialNu2_1_0_, revokedcer0_.crlNumber as crlNumber1_0_, revokedcer0_.revocationDate as revocati4_1_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [NONE]: select certificat0_.id as id3_2_, certificat0_.trustDomain_name as trustDo10_3_2_, certificat0_.policy as policy3_2_, certificat0_.dn as dn3_2_, certificat0_.issuerName as issuerName3_2_, certificat0_.serialNumber as serialNu6_3_2_, certificat0_.allowed as allowed3_2_, certificat0_.keyUsage as keyUsage3_2_, certificat0_.qcComplianceFilter as qcCompli9_3_2_, certificat0_.DTYPE as DTYPE3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons certificat0_ left outer join ts_trustdom trustdomai1_ on certificat0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [READ]: select certificat0_.id as id3_2_, certificat0_.trustDomain_name as trustDo10_3_2_, certificat0_.policy as policy3_2_, certificat0_.dn as dn3_2_, certificat0_.issuerName as issuerName3_2_, certificat0_.serialNumber as serialNu6_3_2_, certificat0_.allowed as allowed3_2_, certificat0_.keyUsage as keyUsage3_2_, certificat0_.qcComplianceFilter as qcCompli9_3_2_, certificat0_.DTYPE as DTYPE3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons certificat0_ left outer join ts_trustdom trustdomai1_ on certificat0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [UPGRADE]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [UPGRADE_NOWAIT]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [FORCE]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [PESSIMISTIC_READ]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [PESSIMISTIC_WRITE]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [OPTIMISTIC]: select certificat0_.id as id3_2_, certificat0_.trustDomain_name as trustDo10_3_2_, certificat0_.policy as policy3_2_, certificat0_.dn as dn3_2_, certificat0_.issuerName as issuerName3_2_, certificat0_.serialNumber as serialNu6_3_2_, certificat0_.allowed as allowed3_2_, certificat0_.keyUsage as keyUsage3_2_, certificat0_.qcComplianceFilter as qcCompli9_3_2_, certificat0_.DTYPE as DTYPE3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons certificat0_ left outer join ts_trustdom trustdomai1_ on certificat0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select certificat0_.id as id3_2_, certificat0_.trustDomain_name as trustDo10_3_2_, certificat0_.policy as policy3_2_, certificat0_.dn as dn3_2_, certificat0_.issuerName as issuerName3_2_, certificat0_.serialNumber as serialNu6_3_2_, certificat0_.allowed as allowed3_2_, certificat0_.keyUsage as keyUsage3_2_, certificat0_.qcComplianceFilter as qcCompli9_3_2_, certificat0_.DTYPE as DTYPE3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons certificat0_ left outer join ts_trustdom trustdomai1_ on certificat0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where certificat0_.id=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity: select certificat0_.id as id3_0_, certificat0_.trustDomain_name as trustDo10_3_0_, certificat0_.policy as policy3_0_, certificat0_.dn as dn3_0_, certificat0_.issuerName as issuerName3_0_, certificat0_.serialNumber as serialNu6_3_0_, certificat0_.allowed as allowed3_0_, certificat0_.keyUsage as keyUsage3_0_, certificat0_.qcComplianceFilter as qcCompli9_3_0_, certificat0_.DTYPE as DTYPE3_0_ from ts_certcons certificat0_ where certificat0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [NONE]: select endentityc0_.id as id3_2_, endentityc0_.trustDomain_name as trustDo10_3_2_, endentityc0_.issuerName as issuerName3_2_, endentityc0_.serialNumber as serialNu6_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons endentityc0_ left outer join ts_trustdom trustdomai1_ on endentityc0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [READ]: select endentityc0_.id as id3_2_, endentityc0_.trustDomain_name as trustDo10_3_2_, endentityc0_.issuerName as issuerName3_2_, endentityc0_.serialNumber as serialNu6_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons endentityc0_ left outer join ts_trustdom trustdomai1_ on endentityc0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [UPGRADE]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [UPGRADE_NOWAIT]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [FORCE]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [PESSIMISTIC_READ]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [PESSIMISTIC_WRITE]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [OPTIMISTIC]: select endentityc0_.id as id3_2_, endentityc0_.trustDomain_name as trustDo10_3_2_, endentityc0_.issuerName as issuerName3_2_, endentityc0_.serialNumber as serialNu6_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons endentityc0_ left outer join ts_trustdom trustdomai1_ on endentityc0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select endentityc0_.id as id3_2_, endentityc0_.trustDomain_name as trustDo10_3_2_, endentityc0_.issuerName as issuerName3_2_, endentityc0_.serialNumber as serialNu6_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons endentityc0_ left outer join ts_trustdom trustdomai1_ on endentityc0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity: select endentityc0_.id as id3_0_, endentityc0_.trustDomain_name as trustDo10_3_0_, endentityc0_.issuerName as issuerName3_0_, endentityc0_.serialNumber as serialNu6_3_0_ from ts_certcons endentityc0_ where endentityc0_.id=? and endentityc0_.DTYPE='EndEntityConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [NONE]: select trustpoint0_.name as name4_2_, trustpoint0_.certificateAuthority_name as certific4_4_2_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_2_, trustpoint0_.fireDate as fireDate4_2_, certificat1_.name as name0_0_, certificat1_.crlUrl as crlUrl0_0_, certificat1_.encodedCertificate as encodedC3_0_0_, certificat1_.nextUpdate as nextUpdate0_0_, certificat1_.status as status0_0_, certificat1_.thisUpdate as thisUpdate0_0_, certificat1_.trustPoint_name as trustPoint7_0_0_, trustpoint2_.name as name4_1_, trustpoint2_.certificateAuthority_name as certific4_4_1_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_1_, trustpoint2_.fireDate as fireDate4_1_ from ts_trust_point trustpoint0_ inner join ts_cert_authorities certificat1_ on trustpoint0_.certificateAuthority_name=certificat1_.name left outer join ts_trust_point trustpoint2_ on certificat1_.trustPoint_name=trustpoint2_.name where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [READ]: select trustpoint0_.name as name4_2_, trustpoint0_.certificateAuthority_name as certific4_4_2_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_2_, trustpoint0_.fireDate as fireDate4_2_, certificat1_.name as name0_0_, certificat1_.crlUrl as crlUrl0_0_, certificat1_.encodedCertificate as encodedC3_0_0_, certificat1_.nextUpdate as nextUpdate0_0_, certificat1_.status as status0_0_, certificat1_.thisUpdate as thisUpdate0_0_, certificat1_.trustPoint_name as trustPoint7_0_0_, trustpoint2_.name as name4_1_, trustpoint2_.certificateAuthority_name as certific4_4_1_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_1_, trustpoint2_.fireDate as fireDate4_1_ from ts_trust_point trustpoint0_ inner join ts_cert_authorities certificat1_ on trustpoint0_.certificateAuthority_name=certificat1_.name left outer join ts_trust_point trustpoint2_ on certificat1_.trustPoint_name=trustpoint2_.name where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [UPGRADE]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [UPGRADE_NOWAIT]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [FORCE]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [PESSIMISTIC_READ]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [PESSIMISTIC_WRITE]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [PESSIMISTIC_FORCE_INCREMENT]: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [OPTIMISTIC]: select trustpoint0_.name as name4_2_, trustpoint0_.certificateAuthority_name as certific4_4_2_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_2_, trustpoint0_.fireDate as fireDate4_2_, certificat1_.name as name0_0_, certificat1_.crlUrl as crlUrl0_0_, certificat1_.encodedCertificate as encodedC3_0_0_, certificat1_.nextUpdate as nextUpdate0_0_, certificat1_.status as status0_0_, certificat1_.thisUpdate as thisUpdate0_0_, certificat1_.trustPoint_name as trustPoint7_0_0_, trustpoint2_.name as name4_1_, trustpoint2_.certificateAuthority_name as certific4_4_1_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_1_, trustpoint2_.fireDate as fireDate4_1_ from ts_trust_point trustpoint0_ inner join ts_cert_authorities certificat1_ on trustpoint0_.certificateAuthority_name=certificat1_.name left outer join ts_trust_point trustpoint2_ on certificat1_.trustPoint_name=trustpoint2_.name where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustPointEntity [OPTIMISTIC_FORCE_INCREMENT]: select trustpoint0_.name as name4_2_, trustpoint0_.certificateAuthority_name as certific4_4_2_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_2_, trustpoint0_.fireDate as fireDate4_2_, certificat1_.name as name0_0_, certificat1_.crlUrl as crlUrl0_0_, certificat1_.encodedCertificate as encodedC3_0_0_, certificat1_.nextUpdate as nextUpdate0_0_, certificat1_.status as status0_0_, certificat1_.thisUpdate as thisUpdate0_0_, certificat1_.trustPoint_name as trustPoint7_0_0_, trustpoint2_.name as name4_1_, trustpoint2_.certificateAuthority_name as certific4_4_1_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_1_, trustpoint2_.fireDate as fireDate4_1_ from ts_trust_point trustpoint0_ inner join ts_cert_authorities certificat1_ on trustpoint0_.certificateAuthority_name=certificat1_.name left outer join ts_trust_point trustpoint2_ on certificat1_.trustPoint_name=trustpoint2_.name where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.TrustPointEntity: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.TrustPointEntity: select trustpoint0_.name as name4_0_, trustpoint0_.certificateAuthority_name as certific4_4_0_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint0_.fireDate as fireDate4_0_ from ts_trust_point trustpoint0_ where trustpoint0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [NONE]: select dnconstrai0_.id as id3_2_, dnconstrai0_.trustDomain_name as trustDo10_3_2_, dnconstrai0_.dn as dn3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons dnconstrai0_ left outer join ts_trustdom trustdomai1_ on dnconstrai0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [READ]: select dnconstrai0_.id as id3_2_, dnconstrai0_.trustDomain_name as trustDo10_3_2_, dnconstrai0_.dn as dn3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons dnconstrai0_ left outer join ts_trustdom trustdomai1_ on dnconstrai0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [UPGRADE]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [UPGRADE_NOWAIT]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [FORCE]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [PESSIMISTIC_READ]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [PESSIMISTIC_WRITE]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [OPTIMISTIC]: select dnconstrai0_.id as id3_2_, dnconstrai0_.trustDomain_name as trustDo10_3_2_, dnconstrai0_.dn as dn3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons dnconstrai0_ left outer join ts_trustdom trustdomai1_ on dnconstrai0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.DNConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select dnconstrai0_.id as id3_2_, dnconstrai0_.trustDomain_name as trustDo10_3_2_, dnconstrai0_.dn as dn3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons dnconstrai0_ left outer join ts_trustdom trustdomai1_ on dnconstrai0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.DNConstraintEntity: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.DNConstraintEntity: select dnconstrai0_.id as id3_0_, dnconstrai0_.trustDomain_name as trustDo10_3_0_, dnconstrai0_.dn as dn3_0_ from ts_certcons dnconstrai0_ where dnconstrai0_.id=? and dnconstrai0_.DTYPE='DNConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [NONE]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [READ]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [UPGRADE]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [UPGRADE_NOWAIT]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [FORCE]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [PESSIMISTIC_READ]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [PESSIMISTIC_WRITE]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [PESSIMISTIC_FORCE_INCREMENT]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [OPTIMISTIC]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.AuditEntity [OPTIMISTIC_FORCE_INCREMENT]: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.AuditEntity: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.AuditEntity: select auditentit0_.id as id5_0_, auditentit0_.auditDate as auditDate5_0_, auditentit0_.message as message5_0_ from ts_audit auditentit0_ where auditentit0_.id=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [NONE]: select certificat0_.name as name0_2_, certificat0_.crlUrl as crlUrl0_2_, certificat0_.encodedCertificate as encodedC3_0_2_, certificat0_.nextUpdate as nextUpdate0_2_, certificat0_.status as status0_2_, certificat0_.thisUpdate as thisUpdate0_2_, certificat0_.trustPoint_name as trustPoint7_0_2_, trustpoint1_.name as name4_0_, trustpoint1_.certificateAuthority_name as certific4_4_0_, trustpoint1_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint1_.fireDate as fireDate4_0_, certificat2_.name as name0_1_, certificat2_.crlUrl as crlUrl0_1_, certificat2_.encodedCertificate as encodedC3_0_1_, certificat2_.nextUpdate as nextUpdate0_1_, certificat2_.status as status0_1_, certificat2_.thisUpdate as thisUpdate0_1_, certificat2_.trustPoint_name as trustPoint7_0_1_ from ts_cert_authorities certificat0_ left outer join ts_trust_point trustpoint1_ on certificat0_.trustPoint_name=trustpoint1_.name left outer join ts_cert_authorities certificat2_ on trustpoint1_.certificateAuthority_name=certificat2_.name where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [READ]: select certificat0_.name as name0_2_, certificat0_.crlUrl as crlUrl0_2_, certificat0_.encodedCertificate as encodedC3_0_2_, certificat0_.nextUpdate as nextUpdate0_2_, certificat0_.status as status0_2_, certificat0_.thisUpdate as thisUpdate0_2_, certificat0_.trustPoint_name as trustPoint7_0_2_, trustpoint1_.name as name4_0_, trustpoint1_.certificateAuthority_name as certific4_4_0_, trustpoint1_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint1_.fireDate as fireDate4_0_, certificat2_.name as name0_1_, certificat2_.crlUrl as crlUrl0_1_, certificat2_.encodedCertificate as encodedC3_0_1_, certificat2_.nextUpdate as nextUpdate0_1_, certificat2_.status as status0_1_, certificat2_.thisUpdate as thisUpdate0_1_, certificat2_.trustPoint_name as trustPoint7_0_1_ from ts_cert_authorities certificat0_ left outer join ts_trust_point trustpoint1_ on certificat0_.trustPoint_name=trustpoint1_.name left outer join ts_cert_authorities certificat2_ on trustpoint1_.certificateAuthority_name=certificat2_.name where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [UPGRADE]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [UPGRADE_NOWAIT]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [FORCE]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [PESSIMISTIC_READ]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [PESSIMISTIC_WRITE]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [PESSIMISTIC_FORCE_INCREMENT]: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [OPTIMISTIC]: select certificat0_.name as name0_2_, certificat0_.crlUrl as crlUrl0_2_, certificat0_.encodedCertificate as encodedC3_0_2_, certificat0_.nextUpdate as nextUpdate0_2_, certificat0_.status as status0_2_, certificat0_.thisUpdate as thisUpdate0_2_, certificat0_.trustPoint_name as trustPoint7_0_2_, trustpoint1_.name as name4_0_, trustpoint1_.certificateAuthority_name as certific4_4_0_, trustpoint1_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint1_.fireDate as fireDate4_0_, certificat2_.name as name0_1_, certificat2_.crlUrl as crlUrl0_1_, certificat2_.encodedCertificate as encodedC3_0_1_, certificat2_.nextUpdate as nextUpdate0_1_, certificat2_.status as status0_1_, certificat2_.thisUpdate as thisUpdate0_1_, certificat2_.trustPoint_name as trustPoint7_0_1_ from ts_cert_authorities certificat0_ left outer join ts_trust_point trustpoint1_ on certificat0_.trustPoint_name=trustpoint1_.name left outer join ts_cert_authorities certificat2_ on trustpoint1_.certificateAuthority_name=certificat2_.name where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.CertificateAuthorityEntity [OPTIMISTIC_FORCE_INCREMENT]: select certificat0_.name as name0_2_, certificat0_.crlUrl as crlUrl0_2_, certificat0_.encodedCertificate as encodedC3_0_2_, certificat0_.nextUpdate as nextUpdate0_2_, certificat0_.status as status0_2_, certificat0_.thisUpdate as thisUpdate0_2_, certificat0_.trustPoint_name as trustPoint7_0_2_, trustpoint1_.name as name4_0_, trustpoint1_.certificateAuthority_name as certific4_4_0_, trustpoint1_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint1_.fireDate as fireDate4_0_, certificat2_.name as name0_1_, certificat2_.crlUrl as crlUrl0_1_, certificat2_.encodedCertificate as encodedC3_0_1_, certificat2_.nextUpdate as nextUpdate0_1_, certificat2_.status as status0_1_, certificat2_.thisUpdate as thisUpdate0_1_, certificat2_.trustPoint_name as trustPoint7_0_1_ from ts_cert_authorities certificat0_ left outer join ts_trust_point trustpoint1_ on certificat0_.trustPoint_name=trustpoint1_.name left outer join ts_cert_authorities certificat2_ on trustpoint1_.certificateAuthority_name=certificat2_.name where certificat0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.CertificateAuthorityEntity: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.CertificateAuthorityEntity: select certificat0_.name as name0_0_, certificat0_.crlUrl as crlUrl0_0_, certificat0_.encodedCertificate as encodedC3_0_0_, certificat0_.nextUpdate as nextUpdate0_0_, certificat0_.status as status0_0_, certificat0_.thisUpdate as thisUpdate0_0_, certificat0_.trustPoint_name as trustPoint7_0_0_ from ts_cert_authorities certificat0_ where certificat0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [NONE]: select trustdomai0_.name as name2_2_, trustdomai0_.defaultDomain as defaultD2_2_2_, trustdomai0_.useCaching as useCaching2_2_, certificat1_.ts_trustdom_name as ts1_2_4_, certificat2_.id as certific2_4_, certificat2_.id as id3_0_, certificat2_.trustDomain_name as trustDo10_3_0_, certificat2_.policy as policy3_0_, certificat2_.dn as dn3_0_, certificat2_.issuerName as issuerName3_0_, certificat2_.serialNumber as serialNu6_3_0_, certificat2_.allowed as allowed3_0_, certificat2_.keyUsage as keyUsage3_0_, certificat2_.qcComplianceFilter as qcCompli9_3_0_, certificat2_.DTYPE as DTYPE3_0_, trustdomai3_.name as name2_1_, trustdomai3_.defaultDomain as defaultD2_2_1_, trustdomai3_.useCaching as useCaching2_1_ from ts_trustdom trustdomai0_ left outer join ts_trustdom_ts_certcons certificat1_ on trustdomai0_.name=certificat1_.ts_trustdom_name left outer join ts_certcons certificat2_ on certificat1_.certificateConstraints_id=certificat2_.id left outer join ts_trustdom trustdomai3_ on certificat2_.trustDomain_name=trustdomai3_.name where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [READ]: select trustdomai0_.name as name2_2_, trustdomai0_.defaultDomain as defaultD2_2_2_, trustdomai0_.useCaching as useCaching2_2_, certificat1_.ts_trustdom_name as ts1_2_4_, certificat2_.id as certific2_4_, certificat2_.id as id3_0_, certificat2_.trustDomain_name as trustDo10_3_0_, certificat2_.policy as policy3_0_, certificat2_.dn as dn3_0_, certificat2_.issuerName as issuerName3_0_, certificat2_.serialNumber as serialNu6_3_0_, certificat2_.allowed as allowed3_0_, certificat2_.keyUsage as keyUsage3_0_, certificat2_.qcComplianceFilter as qcCompli9_3_0_, certificat2_.DTYPE as DTYPE3_0_, trustdomai3_.name as name2_1_, trustdomai3_.defaultDomain as defaultD2_2_1_, trustdomai3_.useCaching as useCaching2_1_ from ts_trustdom trustdomai0_ left outer join ts_trustdom_ts_certcons certificat1_ on trustdomai0_.name=certificat1_.ts_trustdom_name left outer join ts_certcons certificat2_ on certificat1_.certificateConstraints_id=certificat2_.id left outer join ts_trustdom trustdomai3_ on certificat2_.trustDomain_name=trustdomai3_.name where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [UPGRADE]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [UPGRADE_NOWAIT]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [FORCE]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [PESSIMISTIC_READ]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [PESSIMISTIC_WRITE]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [PESSIMISTIC_FORCE_INCREMENT]: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [OPTIMISTIC]: select trustdomai0_.name as name2_2_, trustdomai0_.defaultDomain as defaultD2_2_2_, trustdomai0_.useCaching as useCaching2_2_, certificat1_.ts_trustdom_name as ts1_2_4_, certificat2_.id as certific2_4_, certificat2_.id as id3_0_, certificat2_.trustDomain_name as trustDo10_3_0_, certificat2_.policy as policy3_0_, certificat2_.dn as dn3_0_, certificat2_.issuerName as issuerName3_0_, certificat2_.serialNumber as serialNu6_3_0_, certificat2_.allowed as allowed3_0_, certificat2_.keyUsage as keyUsage3_0_, certificat2_.qcComplianceFilter as qcCompli9_3_0_, certificat2_.DTYPE as DTYPE3_0_, trustdomai3_.name as name2_1_, trustdomai3_.defaultDomain as defaultD2_2_1_, trustdomai3_.useCaching as useCaching2_1_ from ts_trustdom trustdomai0_ left outer join ts_trustdom_ts_certcons certificat1_ on trustdomai0_.name=certificat1_.ts_trustdom_name left outer join ts_certcons certificat2_ on certificat1_.certificateConstraints_id=certificat2_.id left outer join ts_trustdom trustdomai3_ on certificat2_.trustDomain_name=trustdomai3_.name where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.TrustDomainEntity [OPTIMISTIC_FORCE_INCREMENT]: select trustdomai0_.name as name2_2_, trustdomai0_.defaultDomain as defaultD2_2_2_, trustdomai0_.useCaching as useCaching2_2_, certificat1_.ts_trustdom_name as ts1_2_4_, certificat2_.id as certific2_4_, certificat2_.id as id3_0_, certificat2_.trustDomain_name as trustDo10_3_0_, certificat2_.policy as policy3_0_, certificat2_.dn as dn3_0_, certificat2_.issuerName as issuerName3_0_, certificat2_.serialNumber as serialNu6_3_0_, certificat2_.allowed as allowed3_0_, certificat2_.keyUsage as keyUsage3_0_, certificat2_.qcComplianceFilter as qcCompli9_3_0_, certificat2_.DTYPE as DTYPE3_0_, trustdomai3_.name as name2_1_, trustdomai3_.defaultDomain as defaultD2_2_1_, trustdomai3_.useCaching as useCaching2_1_ from ts_trustdom trustdomai0_ left outer join ts_trustdom_ts_certcons certificat1_ on trustdomai0_.name=certificat1_.ts_trustdom_name left outer join ts_certcons certificat2_ on certificat1_.certificateConstraints_id=certificat2_.id left outer join ts_trustdom trustdomai3_ on certificat2_.trustDomain_name=trustdomai3_.name where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.TrustDomainEntity: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.TrustDomainEntity: select trustdomai0_.name as name2_0_, trustdomai0_.defaultDomain as defaultD2_2_0_, trustdomai0_.useCaching as useCaching2_0_ from ts_trustdom trustdomai0_ where trustdomai0_.name=?
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [NONE]: select qcstatemen0_.id as id3_2_, qcstatemen0_.trustDomain_name as trustDo10_3_2_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons qcstatemen0_ left outer join ts_trustdom trustdomai1_ on qcstatemen0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [READ]: select qcstatemen0_.id as id3_2_, qcstatemen0_.trustDomain_name as trustDo10_3_2_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons qcstatemen0_ left outer join ts_trustdom trustdomai1_ on qcstatemen0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [UPGRADE]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [UPGRADE_NOWAIT]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [FORCE]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [PESSIMISTIC_READ]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [PESSIMISTIC_WRITE]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [PESSIMISTIC_FORCE_INCREMENT]: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [OPTIMISTIC]: select qcstatemen0_.id as id3_2_, qcstatemen0_.trustDomain_name as trustDo10_3_2_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons qcstatemen0_ left outer join ts_trustdom trustdomai1_ on qcstatemen0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity [OPTIMISTIC_FORCE_INCREMENT]: select qcstatemen0_.id as id3_2_, qcstatemen0_.trustDomain_name as trustDo10_3_2_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_2_, trustdomai1_.name as name2_0_, trustdomai1_.defaultDomain as defaultD2_2_0_, trustdomai1_.useCaching as useCaching2_0_, certificat2_.ts_trustdom_name as ts1_2_4_, certificat3_.id as certific2_4_, certificat3_.id as id3_1_, certificat3_.trustDomain_name as trustDo10_3_1_, certificat3_.policy as policy3_1_, certificat3_.dn as dn3_1_, certificat3_.issuerName as issuerName3_1_, certificat3_.serialNumber as serialNu6_3_1_, certificat3_.allowed as allowed3_1_, certificat3_.keyUsage as keyUsage3_1_, certificat3_.qcComplianceFilter as qcCompli9_3_1_, certificat3_.DTYPE as DTYPE3_1_ from ts_certcons qcstatemen0_ left outer join ts_trustdom trustdomai1_ on qcstatemen0_.trustDomain_name=trustdomai1_.name left outer join ts_trustdom_ts_certcons certificat2_ on trustdomai1_.name=certificat2_.ts_trustdom_name left outer join ts_certcons certificat3_ on certificat2_.certificateConstraints_id=certificat3_.id where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_MERGE on entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [EntityLoader] Static select for action ACTION_REFRESH on entity be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity: select qcstatemen0_.id as id3_0_, qcstatemen0_.trustDomain_name as trustDo10_3_0_, qcstatemen0_.qcComplianceFilter as qcCompli9_3_0_ from ts_certcons qcstatemen0_ where qcstatemen0_.id=? and qcstatemen0_.DTYPE='QCStatementsConstraintEntity'
DEBUG [BasicCollectionLoader] Static select for collection be.fedict.trust.service.entity.TrustDomainEntity.certificateConstraints: select certificat0_.ts_trustdom_name as ts1_2_2_, certificat0_.certificateConstraints_id as certific2_2_, certificat1_.id as id3_0_, certificat1_.trustDomain_name as trustDo10_3_0_, certificat1_.policy as policy3_0_, certificat1_.dn as dn3_0_, certificat1_.issuerName as issuerName3_0_, certificat1_.serialNumber as serialNu6_3_0_, certificat1_.allowed as allowed3_0_, certificat1_.keyUsage as keyUsage3_0_, certificat1_.qcComplianceFilter as qcCompli9_3_0_, certificat1_.DTYPE as DTYPE3_0_, trustdomai2_.name as name2_1_, trustdomai2_.defaultDomain as defaultD2_2_1_, trustdomai2_.useCaching as useCaching2_1_ from ts_trustdom_ts_certcons certificat0_ inner join ts_certcons certificat1_ on certificat0_.certificateConstraints_id=certificat1_.id left outer join ts_trustdom trustdomai2_ on certificat1_.trustDomain_name=trustdomai2_.name where certificat0_.ts_trustdom_name=?
DEBUG [BasicCollectionLoader] Static select for collection be.fedict.trust.service.entity.TrustDomainEntity.trustPoints: select trustpoint0_.ts_trustdom_name as ts1_2_3_, trustpoint0_.trustPoints_name as trustPoi2_3_, trustpoint1_.name as name4_0_, trustpoint1_.certificateAuthority_name as certific4_4_0_, trustpoint1_.crlRefreshCronSchedule as crlRefre2_4_0_, trustpoint1_.fireDate as fireDate4_0_, certificat2_.name as name0_1_, certificat2_.crlUrl as crlUrl0_1_, certificat2_.encodedCertificate as encodedC3_0_1_, certificat2_.nextUpdate as nextUpdate0_1_, certificat2_.status as status0_1_, certificat2_.thisUpdate as thisUpdate0_1_, certificat2_.trustPoint_name as trustPoint7_0_1_, trustpoint3_.name as name4_2_, trustpoint3_.certificateAuthority_name as certific4_4_2_, trustpoint3_.crlRefreshCronSchedule as crlRefre2_4_2_, trustpoint3_.fireDate as fireDate4_2_ from ts_trustdom_ts_trust_point trustpoint0_ inner join ts_trust_point trustpoint1_ on trustpoint0_.trustPoints_name=trustpoint1_.name inner join ts_cert_authorities certificat2_ on trustpoint1_.certificateAuthority_name=certificat2_.name left outer join ts_trust_point trustpoint3_ on certificat2_.trustPoint_name=trustpoint3_.name where trustpoint0_.ts_trustdom_name=?
DEBUG [SessionFactoryObjectFactory] initializing class SessionFactoryObjectFactory
DEBUG [SessionFactoryObjectFactory] registered: 03b8ff47-0a8c-498c-bb10-2b06f2e3435e (unnamed)
INFO  [SessionFactoryObjectFactory] Not binding factory to JNDI, no JNDI name configured
DEBUG [SessionFactoryImpl] instantiated session factory
DEBUG [Configuration] Processing hbm.xml files
DEBUG [Configuration] Process annotated classes
DEBUG [Configuration] processing fk mappings (*ToOne and JoinedSubclass)
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing collection mappings
DEBUG [Configuration] processing native query and ResultSetMapping mappings
DEBUG [Configuration] processing association property references
DEBUG [Configuration] processing foreign key constraints
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [Configuration] Processing hbm.xml files
DEBUG [Configuration] Process annotated classes
DEBUG [Configuration] processing fk mappings (*ToOne and JoinedSubclass)
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing extends queue
DEBUG [Configuration] processing collection mappings
DEBUG [Configuration] processing native query and ResultSetMapping mappings
DEBUG [Configuration] processing association property references
DEBUG [Configuration] processing foreign key constraints
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [Configuration] resolving reference to class: be.fedict.trust.service.entity.TrustPointEntity
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
DEBUG [DefaultIdentifierGeneratorFactory] Setting dialect [org.hibernate.dialect.HSQLDialect]
INFO  [SchemaExport] Running hbm2ddl schema export
DEBUG [SchemaExport] import file not found: /import.sql
INFO  [SchemaExport] exporting generated schema to database
DEBUG [SchemaExport] alter table ts_cert_authorities drop constraint FKCADE27465C3D84DB
DEBUG [SchemaExport] Unsuccessful: alter table ts_cert_authorities drop constraint FKCADE27465C3D84DB
DEBUG [SchemaExport] Table not found: TS_CERT_AUTHORITIES in statement [alter table ts_cert_authorities]
DEBUG [SchemaExport] alter table ts_certcons drop constraint FKE078915B788353F
DEBUG [SchemaExport] Unsuccessful: alter table ts_certcons drop constraint FKE078915B788353F
DEBUG [SchemaExport] Table not found: TS_CERTCONS in statement [alter table ts_certcons]
DEBUG [SchemaExport] alter table ts_trust_point drop constraint FKA6D87B29E01E20DB
DEBUG [SchemaExport] Unsuccessful: alter table ts_trust_point drop constraint FKA6D87B29E01E20DB
DEBUG [SchemaExport] Table not found: TS_TRUST_POINT in statement [alter table ts_trust_point]
DEBUG [SchemaExport] alter table ts_trustdom_ts_certcons drop constraint FKD354200544E84EC
DEBUG [SchemaExport] Unsuccessful: alter table ts_trustdom_ts_certcons drop constraint FKD354200544E84EC
DEBUG [SchemaExport] Table not found: TS_TRUSTDOM_TS_CERTCONS in statement [alter table ts_trustdom_ts_certcons]
DEBUG [SchemaExport] alter table ts_trustdom_ts_certcons drop constraint FKD354200BCFCC571
DEBUG [SchemaExport] Unsuccessful: alter table ts_trustdom_ts_certcons drop constraint FKD354200BCFCC571
DEBUG [SchemaExport] Table not found: TS_TRUSTDOM_TS_CERTCONS in statement [alter table ts_trustdom_ts_certcons]
DEBUG [SchemaExport] alter table ts_trustdom_ts_trust_point drop constraint FK109A965EBCFCC571
DEBUG [SchemaExport] Unsuccessful: alter table ts_trustdom_ts_trust_point drop constraint FK109A965EBCFCC571
DEBUG [SchemaExport] Table not found: TS_TRUSTDOM_TS_TRUST_POINT in statement [alter table ts_trustdom_ts_trust_point]
DEBUG [SchemaExport] alter table ts_trustdom_ts_trust_point drop constraint FK109A965E3083C3B8
DEBUG [SchemaExport] Unsuccessful: alter table ts_trustdom_ts_trust_point drop constraint FK109A965E3083C3B8
DEBUG [SchemaExport] Table not found: TS_TRUSTDOM_TS_TRUST_POINT in statement [alter table ts_trustdom_ts_trust_point]
DEBUG [SchemaExport] drop table ts_audit if exists
DEBUG [SchemaExport] drop table ts_cert_authorities if exists
DEBUG [SchemaExport] drop table ts_certcons if exists
DEBUG [SchemaExport] drop table ts_revoked_certs if exists
DEBUG [SchemaExport] drop table ts_trust_point if exists
DEBUG [SchemaExport] drop table ts_trustdom if exists
DEBUG [SchemaExport] drop table ts_trustdom_ts_certcons if exists
DEBUG [SchemaExport] drop table ts_trustdom_ts_trust_point if exists
DEBUG [SchemaExport] create table ts_audit (id bigint generated by default as identity (start with 1), auditDate timestamp, message varchar(255), primary key (id))
DEBUG [SchemaExport] create table ts_cert_authorities (name varchar(255) not null, crlUrl varchar(255), encodedCertificate longvarbinary, nextUpdate timestamp, status varchar(255), thisUpdate timestamp, trustPoint_name varchar(255), primary key (name))
DEBUG [SchemaExport] create table ts_certcons (DTYPE varchar(31) not null, id bigint generated by default as identity (start with 1), policy varchar(255), dn varchar(255), issuerName varchar(255), serialNumber numeric, allowed bit, keyUsage integer, qcComplianceFilter bit, trustDomain_name varchar(255), primary key (id))
DEBUG [SchemaExport] create table ts_revoked_certs (issuer varchar(255) not null, serialNumber varchar(255) not null, crlNumber numeric, revocationDate timestamp, primary key (issuer, serialNumber))
DEBUG [SchemaExport] create table ts_trust_point (name varchar(255) not null, crlRefreshCronSchedule varchar(255), fireDate timestamp, certificateAuthority_name varchar(255) not null, primary key (name), unique (certificateAuthority_name))
DEBUG [SchemaExport] create table ts_trustdom (name varchar(255) not null, defaultDomain bit not null, useCaching bit not null, primary key (name))
DEBUG [SchemaExport] create table ts_trustdom_ts_certcons (ts_trustdom_name varchar(255) not null, certificateConstraints_id bigint not null, unique (certificateConstraints_id))
DEBUG [SchemaExport] create table ts_trustdom_ts_trust_point (ts_trustdom_name varchar(255) not null, trustPoints_name varchar(255) not null)
DEBUG [SchemaExport] alter table ts_cert_authorities add constraint FKCADE27465C3D84DB foreign key (trustPoint_name) references ts_trust_point
DEBUG [SchemaExport] alter table ts_certcons add constraint FKE078915B788353F foreign key (trustDomain_name) references ts_trustdom
DEBUG [SchemaExport] alter table ts_trust_point add constraint FKA6D87B29E01E20DB foreign key (certificateAuthority_name) references ts_cert_authorities
DEBUG [SchemaExport] alter table ts_trustdom_ts_certcons add constraint FKD354200544E84EC foreign key (certificateConstraints_id) references ts_certcons
DEBUG [SchemaExport] alter table ts_trustdom_ts_certcons add constraint FKD354200BCFCC571 foreign key (ts_trustdom_name) references ts_trustdom
DEBUG [SchemaExport] alter table ts_trustdom_ts_trust_point add constraint FK109A965EBCFCC571 foreign key (ts_trustdom_name) references ts_trustdom
DEBUG [SchemaExport] alter table ts_trustdom_ts_trust_point add constraint FK109A965E3083C3B8 foreign key (trustPoints_name) references ts_trust_point
INFO  [SchemaExport] schema export complete
DEBUG [SessionFactoryImpl] Checking 19 named HQL queries
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.q.i.s
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'be'
    |           |  |  |  |  \-[IDENT] Node: 'fedict'
    |           |  |  |  \-[IDENT] Node: 'trust'
    |           |  |  \-[IDENT] Node: 'service'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'RevokedCertificateEntity'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'pk'
          |  |  \-[IDENT] Node: 'issuer'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'issuer'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'pk'
             |  \-[IDENT] Node: 'serialNumber'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'serialNumber'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : pk -> org.hibernate.type.ComponentType@773c550f
DEBUG [DotNode] Unresolved property path is now 'pk.issuer'
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk -> revokedcer0_.issuer
DEBUG [DotNode] getDataType() : pk.issuer -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk.issuer -> revokedcer0_.issuer
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : pk -> org.hibernate.type.ComponentType@773c550f
DEBUG [DotNode] Unresolved property path is now 'pk.serialNumber'
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk -> revokedcer0_.serialNumber
DEBUG [DotNode] getDataType() : pk.serialNumber -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk.serialNumber -> revokedcer0_.serialNumber
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_revoked_certs revokedcer0_ ) ( WHERE ( AND ( = ( revokedcer0_.issuer ( revokedcer0_.issuer {synthetic-alias} pk ) issuer ) ? ) ( = ( revokedcer0_.serialNumber ( revokedcer0_.serialNumber {synthetic-alias} pk ) serialNumber ) ? ) ) ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_revoked_certs revokedcer0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_revoked_certs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'revokedcer0_.issuer as issuer1_, revokedcer0_.serialNumber as serialNu2_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'revokedcer0_.crlNumber as crlNumber1_, revokedcer0_.revocationDate as revocati4_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs revokedcer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=ALL,propertyPath=pk.issuer,path={synthetic-alias}.pk.issuer,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=2,propertyPath=pk.issuer,path={synthetic-alias}.pk,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
          |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.StringType@398825b3}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'revokedcer0_.serialNumber' {propertyName=serialNumber,dereferenceType=ALL,propertyPath=pk.serialNumber,path={synthetic-alias}.pk.serialNumber,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
             |  +-[DOT] DotNode: 'revokedcer0_.serialNumber' {propertyName=serialNumber,dereferenceType=2,propertyPath=pk.serialNumber,path={synthetic-alias}.pk,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
             |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
             |  \-[IDENT] IdentNode: 'serialNumber' {originalText=serialNumber}
             \-[NAMED_PARAM] ParameterNode: '?' {name=serialNumber, expectedType=org.hibernate.type.StringType@398825b3}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
DEBUG [QueryTranslatorImpl] SQL: select revokedcer0_.issuer as issuer1_, revokedcer0_.serialNumber as serialNu2_1_, revokedcer0_.crlNumber as crlNumber1_, revokedcer0_.revocationDate as revocati4_1_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.q.n.w.tp
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT name FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CertificateAuthorityEntity'
    |  |     \-[ALIAS] Node: 'ca'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'name'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'trustPoint'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'trustPoint'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (ca) -> certificat0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : name -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.name -> certificat0_.name
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [DotNode] getDataType() : trustPoint -> org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)
DEBUG [DotNode] dereferenceShortcut() : property trustPoint in be.fedict.trust.service.entity.CertificateAuthorityEntity does not require a join.
DEBUG [DotNode] terminal propertyPath = [trustPoint]
DEBUG [FromReferenceNode] Resolved :  ca.trustPoint -> certificat0_.trustPoint_name
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} ( certificat0_.name {synthetic-alias} name ) ) ( FromClause{level=1} ts_cert_authorities certificat0_ ) ( WHERE ( = ( certificat0_.trustPoint_name certificat0_.name trustPoint ) ? ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_cert_authorities certificat0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_cert_authorities)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'certificat0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities certificat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'certificat0_.trustPoint_name' {propertyName=trustPoint,dereferenceType=0,propertyPath=trustPoint,path=ca.trustPoint,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'certificat0_.name' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
          |  \-[IDENT] IdentNode: 'trustPoint' {originalText=trustPoint}
          \-[NAMED_PARAM] ParameterNode: '?' {name=trustPoint, expectedType=org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT name FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
DEBUG [QueryTranslatorImpl] SQL: select certificat0_.name as col_0_0_ from ts_cert_authorities certificat0_ where certificat0_.trustPoint_name=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.d.w.tp
DEBUG [QueryTranslatorImpl] parse() - HQL: DELETE FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
DEBUG [AST] --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |     |  |  |  |  \-[IDENT] Node: 'trust'
    |     |  |  |  \-[IDENT] Node: 'service'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'CertificateAuthorityEntity'
    |     \-[ALIAS] Node: 'ca'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'trustPoint'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'trustPoint'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] delete << begin [level=1, statement=delete]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (ca) -> certificat0_
DEBUG [FromReferenceNode] Resolved :  ca -> name
DEBUG [DotNode] getDataType() : trustPoint -> org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)
DEBUG [DotNode] dereferenceShortcut() : property trustPoint in be.fedict.trust.service.entity.CertificateAuthorityEntity does not require a join.
DEBUG [DotNode] terminal propertyPath = [trustPoint]
DEBUG [FromReferenceNode] Resolved :  ca.trustPoint -> trustPoint_name
DEBUG [HqlSqlBaseWalker] delete : finishing up [level=1, statement=delete]
DEBUG [HqlSqlBaseWalker] delete >> end [level=1, statement=delete]
DEBUG [AST] --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (ts_cert_authorities)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'trustPoint_name' {propertyName=trustPoint,dereferenceType=0,propertyPath=trustPoint,path=ca.trustPoint,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'name' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
          |  \-[IDENT] IdentNode: 'trustPoint' {originalText=trustPoint}
          \-[NAMED_PARAM] ParameterNode: '?' {name=trustPoint, expectedType=org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_td.list.w.tp
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT td FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'TrustDomainEntity'
    |  |     \-[ALIAS] Node: 'td'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'td'
    \-[WHERE] Node: 'WHERE'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'trustPoint'
          \-[IN_LIST] Node: 'inList'
             \-[QUERY] Node: 'QUERY'
                \-[SELECT_FROM] Node: 'SELECT_FROM'
                   \-[FROM] Node: 'from'
                      \-[RANGE] Node: 'RANGE'
                         \-[DOT] Node: '.'
                            +-[IDENT] Node: 'td'
                            \-[IDENT] Node: 'trustPoints'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustDomainEntity (td) -> trustdomai0_
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [HqlSqlBaseWalker] select << begin [level=2, statement=select]
DEBUG [FromElementFactory] createFromElementInSubselect() : path = td.trustPoints
DEBUG [PathHelper] parsePath() : td.trustPoints -> [  ( . td trustPoints ) ]
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [DotNode] getDataType() : trustPoints -> org.hibernate.type.BagType(be.fedict.trust.service.entity.TrustDomainEntity.trustPoints)
DEBUG [FromElementFactory] createManyToMany() : path = td.trustPoints role = be.fedict.trust.service.entity.TrustDomainEntity.trustPoints associatedEntityName = be.fedict.trust.service.entity.TrustPointEntity
DEBUG [FromElement] FromClause{level=2} :  be.fedict.trust.service.entity.TrustPointEntity (no alias) -> trustpoint2_
DEBUG [FromClause] addJoinByPathMap() : td.trustPoints -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trust_point,tableAlias=trustpoint2_,origin=ts_trustdom trustdomai0_,columns={trustdomai0_.name ,className=be.fedict.trust.service.entity.TrustPointEntity}}
DEBUG [DotNode] dereferenceCollection() : Created new FROM element for td.trustPoints : ts_trustdom_ts_trust_point trustpoint2_
DEBUG [FromReferenceNode] Resolved :  td.trustPoints -> .
DEBUG [FromElementFactory] createFromElementInSubselect() : td.trustPoints -> ts_trustdom_ts_trust_point trustpoint2_
DEBUG [HqlSqlBaseWalker] select : finishing up [level=2, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=2} ts_trustdom_ts_trust_point trustpoint2_ ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_trustdom_ts_trust_point trustpoint1_, ts_trust_point trustpoint2_]
DEBUG [SyntheticAndFactory] Using unprocessed WHERE-fragment [trustdomai0_.name=trustpoint1_.ts_trustdom_name and trustpoint1_.trustPoints_name=trustpoint2_.name]
DEBUG [SyntheticAndFactory] Using processed WHERE-fragment [trustdomai0_.name=trustpoint1_.ts_trustdom_name and trustpoint1_.trustPoints_name=trustpoint2_.name]
DEBUG [QueryNode] getWhereClause() : Creating a new WHERE clause...
DEBUG [HqlSqlBaseWalker] select >> end [level=2, statement=select]
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} trustdomai0_.name ) ( FromClause{level=1} ts_trustdom trustdomai0_ ) ( WHERE ( in ? ( inList ( SELECT ( {derived select clause} trustpoint2_.name ) ( FromClause{level=2} ts_trustdom_ts_trust_point trustpoint1_, ts_trust_point trustpoint2_ ) ( WHERE ( {theta joins} trustdomai0_.name=trustpoint1_.ts_trustdom_name and trustpoint1_.trustPoints_name=trustpoint2_.name ) ) ) ) ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_trustdom trustdomai0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trust_point,ts_trustdom,ts_trustdom_ts_trust_point)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'trustdomai0_.name as name2_' {alias=td, className=be.fedict.trust.service.entity.TrustDomainEntity, tableAlias=trustdomai0_}
    |  \-[SQL_TOKEN] SqlFragment: 'trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[td], fromElementByTableAlias=[trustdomai0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_trustdom trustdomai0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=td,role=null,tableName=ts_trustdom,tableAlias=trustdomai0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustDomainEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=trustPoint, expectedType=null}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trust_point,ts_trustdom,ts_trustdom_ts_trust_point)
                +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
                |  \-[SELECT_EXPR] SelectExpressionImpl: 'trustpoint2_.name' {ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=be.fedict.trust.service.entity.TrustDomainEntity.trustPoints,tableName=ts_trust_point,tableAlias=trustpoint2_,origin=ts_trustdom trustdomai0_,columns={trustdomai0_.name ,className=be.fedict.trust.service.entity.TrustPointEntity}}}
                +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trustpoint2_], fromElementsByPath=[td.trustPoints], collectionJoinFromElementsByPath=[], impliedElements=[]}
                |  \-[FROM_FRAGMENT] ImpliedFromElement: 'ts_trustdom_ts_trust_point trustpoint1_, ts_trust_point trustpoint2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=be.fedict.trust.service.entity.TrustDomainEntity.trustPoints,tableName=ts_trust_point,tableAlias=trustpoint2_,origin=ts_trustdom trustdomai0_,columns={trustdomai0_.name ,className=be.fedict.trust.service.entity.TrustPointEntity}}
                \-[WHERE] SqlNode: 'WHERE'
                   \-[THETA_JOINS] SqlNode: '{theta joins}'
                      \-[SQL_TOKEN] SqlFragment: 'trustdomai0_.name=trustpoint1_.ts_trustdom_name and trustpoint1_.trustPoints_name=trustpoint2_.name'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT td FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
DEBUG [QueryTranslatorImpl] SQL: select trustdomai0_.name as name2_, trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_ from ts_trustdom trustdomai0_ where ? in (select trustpoint2_.name from ts_trustdom_ts_trust_point trustpoint1_, ts_trust_point trustpoint2_ where trustdomai0_.name=trustpoint1_.ts_trustdom_name and trustpoint1_.trustPoints_name=trustpoint2_.name)
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.q.c
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT MAX(crlNumber) FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[DOT] Node: '.'
    |  |        |  |  |  |  +-[IDENT] Node: 'be'
    |  |        |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |        |  |  |  \-[IDENT] Node: 'trust'
    |  |        |  |  \-[IDENT] Node: 'service'
    |  |        |  \-[IDENT] Node: 'entity'
    |  |        \-[IDENT] Node: 'RevokedCertificateEntity'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[AGGREGATE] Node: 'MAX'
    |        \-[IDENT] Node: 'crlNumber'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'pk'
          |  \-[IDENT] Node: 'issuer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'issuer'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : crlNumber -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.crlNumber -> revokedcer0_.crlNumber
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : pk -> org.hibernate.type.ComponentType@773c550f
DEBUG [DotNode] Unresolved property path is now 'pk.issuer'
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk -> revokedcer0_.issuer
DEBUG [DotNode] getDataType() : pk.issuer -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk.issuer -> revokedcer0_.issuer
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} ( MAX ( revokedcer0_.crlNumber {synthetic-alias} crlNumber ) ) ) ( FromClause{level=1} ts_revoked_certs revokedcer0_ ) ( WHERE ( = ( revokedcer0_.issuer ( revokedcer0_.issuer {synthetic-alias} pk ) issuer ) ? ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_revoked_certs revokedcer0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_revoked_certs)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'MAX'
    |  |  \-[DOT] DotNode: 'revokedcer0_.crlNumber' {propertyName=crlNumber,dereferenceType=ALL,propertyPath=crlNumber,path={synthetic-alias}.crlNumber,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
    |  |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |     \-[IDENT] IdentNode: 'crlNumber' {originalText=crlNumber}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs revokedcer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=ALL,propertyPath=pk.issuer,path={synthetic-alias}.pk.issuer,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=2,propertyPath=pk.issuer,path={synthetic-alias}.pk,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
          |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.StringType@398825b3}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT MAX(crlNumber) FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer
DEBUG [QueryTranslatorImpl] SQL: select max(revokedcer0_.crlNumber) as col_0_0_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_td.get.default
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT td FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE td.defaultDomain = true
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'TrustDomainEntity'
    |  |     \-[ALIAS] Node: 'td'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'td'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'td'
          |  \-[IDENT] Node: 'defaultDomain'
          \-[TRUE] Node: 'true'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustDomainEntity (td) -> trustdomai0_
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [DotNode] getDataType() : defaultDomain -> org.hibernate.type.BooleanType@6a8c436b
DEBUG [FromReferenceNode] Resolved :  td.defaultDomain -> trustdomai0_.defaultDomain
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} trustdomai0_.name ) ( FromClause{level=1} ts_trustdom trustdomai0_ ) ( WHERE ( = ( trustdomai0_.defaultDomain trustdomai0_.name defaultDomain ) true ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_trustdom trustdomai0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trustdom)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'trustdomai0_.name as name2_' {alias=td, className=be.fedict.trust.service.entity.TrustDomainEntity, tableAlias=trustdomai0_}
    |  \-[SQL_TOKEN] SqlFragment: 'trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[td], fromElementByTableAlias=[trustdomai0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_trustdom trustdomai0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=td,role=null,tableName=ts_trustdom,tableAlias=trustdomai0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustDomainEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'trustdomai0_.defaultDomain' {propertyName=defaultDomain,dereferenceType=ALL,propertyPath=defaultDomain,path=td.defaultDomain,tableAlias=trustdomai0_,className=be.fedict.trust.service.entity.TrustDomainEntity,classAlias=td}
          |  +-[ALIAS_REF] IdentNode: 'trustdomai0_.name' {alias=td, className=be.fedict.trust.service.entity.TrustDomainEntity, tableAlias=trustdomai0_}
          |  \-[IDENT] IdentNode: 'defaultDomain' {originalText=defaultDomain}
          \-[TRUE] BooleanLiteralNode: 'true'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT td FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE td.defaultDomain = true
DEBUG [QueryTranslatorImpl] SQL: select trustdomai0_.name as name2_, trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_ from ts_trustdom trustdomai0_ where trustdomai0_.defaultDomain=true
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_tp.q.all
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.TrustPointEntity
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'be'
                |  |  |  |  \-[IDENT] Node: 'fedict'
                |  |  |  \-[IDENT] Node: 'trust'
                |  |  \-[IDENT] Node: 'service'
                |  \-[IDENT] Node: 'entity'
                \-[IDENT] Node: 'TrustPointEntity'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustPointEntity (no alias) -> trustpoint0_
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_trust_point trustpoint0_ ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_trust_point trustpoint0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trust_point)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'trustpoint0_.name as name4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trust_point,tableAlias=trustpoint0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustPointEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'trustpoint0_.certificateAuthority_name as certific4_4_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_, trustpoint0_.fireDate as fireDate4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trustpoint0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ts_trust_point trustpoint0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trust_point,tableAlias=trustpoint0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustPointEntity}}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.TrustPointEntity
DEBUG [QueryTranslatorImpl] SQL: select trustpoint0_.name as name4_, trustpoint0_.certificateAuthority_name as certific4_4_, trustpoint0_.crlRefreshCronSchedule as crlRefre2_4_, trustpoint0_.fireDate as fireDate4_ from ts_trust_point trustpoint0_
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_audit.rem.all
DEBUG [QueryTranslatorImpl] parse() - HQL: DELETE FROM be.fedict.trust.service.entity.AuditEntity
DEBUG [AST] --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[IDENT] Node: 'be'
             |  |  |  |  \-[IDENT] Node: 'fedict'
             |  |  |  \-[IDENT] Node: 'trust'
             |  |  \-[IDENT] Node: 'service'
             |  \-[IDENT] Node: 'entity'
             \-[IDENT] Node: 'AuditEntity'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] delete << begin [level=1, statement=delete]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.AuditEntity (no alias) -> auditentit0_
DEBUG [HqlSqlBaseWalker] delete : finishing up [level=1, statement=delete]
DEBUG [HqlSqlBaseWalker] delete >> end [level=1, statement=delete]
DEBUG [AST] --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (ts_audit)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[auditentit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ts_audit' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_audit,tableAlias=auditentit0_,origin=null,columns={,className=be.fedict.trust.service.entity.AuditEntity}}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.q.i
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'be'
    |           |  |  |  |  \-[IDENT] Node: 'fedict'
    |           |  |  |  \-[IDENT] Node: 'trust'
    |           |  |  \-[IDENT] Node: 'service'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'RevokedCertificateEntity'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'pk'
          |  \-[IDENT] Node: 'issuer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'issuer'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : pk -> org.hibernate.type.ComponentType@773c550f
DEBUG [DotNode] Unresolved property path is now 'pk.issuer'
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk -> revokedcer0_.issuer
DEBUG [DotNode] getDataType() : pk.issuer -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk.issuer -> revokedcer0_.issuer
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_revoked_certs revokedcer0_ ) ( WHERE ( = ( revokedcer0_.issuer ( revokedcer0_.issuer {synthetic-alias} pk ) issuer ) ? ) ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_revoked_certs revokedcer0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_revoked_certs)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'revokedcer0_.issuer as issuer1_, revokedcer0_.serialNumber as serialNu2_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'revokedcer0_.crlNumber as crlNumber1_, revokedcer0_.revocationDate as revocati4_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs revokedcer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=ALL,propertyPath=pk.issuer,path={synthetic-alias}.pk.issuer,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  +-[DOT] DotNode: 'revokedcer0_.issuer' {propertyName=issuer,dereferenceType=2,propertyPath=pk.issuer,path={synthetic-alias}.pk,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
          |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.StringType@398825b3}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer
DEBUG [QueryTranslatorImpl] SQL: select revokedcer0_.issuer as issuer1_, revokedcer0_.serialNumber as serialNu2_1_, revokedcer0_.crlNumber as crlNumber1_, revokedcer0_.revocationDate as revocati4_1_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_td.list.tp
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT td.trustPoints FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE td.name = :name
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'TrustDomainEntity'
    |  |     \-[ALIAS] Node: 'td'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'td'
    |        \-[IDENT] Node: 'trustPoints'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'td'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustDomainEntity (td) -> trustdomai0_
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [DotNode] getDataType() : trustPoints -> org.hibernate.type.BagType(be.fedict.trust.service.entity.TrustDomainEntity.trustPoints)
DEBUG [FromElementFactory] createManyToMany() : path = td.trustPoints role = be.fedict.trust.service.entity.TrustDomainEntity.trustPoints associatedEntityName = be.fedict.trust.service.entity.TrustPointEntity
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustPointEntity (no alias) -> trustpoint2_
DEBUG [FromClause] addJoinByPathMap() : td.trustPoints -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trust_point,tableAlias=trustpoint2_,origin=ts_trustdom trustdomai0_,columns={trustdomai0_.name ,className=be.fedict.trust.service.entity.TrustPointEntity}}
DEBUG [DotNode] dereferenceCollection() : Created new FROM element for td.trustPoints : ts_trustdom_ts_trust_point trustpoint2_
DEBUG [FromReferenceNode] Resolved :  td.trustPoints -> .
DEBUG [FromReferenceNode] Resolved :  td -> trustdomai0_.name
DEBUG [DotNode] getDataType() : name -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  td.name -> trustdomai0_.name
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} ( . trustdomai0_.name trustPoints ) ) ( FromClause{level=1} ( ts_trustdom trustdomai0_ ts_trustdom_ts_trust_point trustpoint2_ ) ) ( WHERE ( = ( trustdomai0_.name trustdomai0_.name name ) ? ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_trustdom trustdomai0_]
DEBUG [JoinProcessor] Using FROM fragment [inner join ts_trustdom_ts_trust_point trustpoint1_ on trustdomai0_.name=trustpoint1_.ts_trustdom_name inner join ts_trust_point trustpoint2_ on trustpoint1_.trustPoints_name=trustpoint2_.name]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trust_point,ts_trustdom,ts_trustdom_ts_trust_point)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'trustpoint2_.name as name4_' {propertyName=trustPoints,dereferenceType=NULL_TREE_LOOKAHEAD,propertyPath=trustPoints,path=td.trustPoints,tableAlias=trustpoint2_,className=be.fedict.trust.service.entity.TrustPointEntity,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'trustdomai0_.name' {alias=td, className=be.fedict.trust.service.entity.TrustDomainEntity, tableAlias=trustdomai0_}
    |  |  \-[IDENT] IdentNode: 'trustPoints' {originalText=trustPoints}
    |  \-[SQL_TOKEN] SqlFragment: 'trustpoint2_.certificateAuthority_name as certific4_4_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_, trustpoint2_.fireDate as fireDate4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[td], fromElementByTableAlias=[trustpoint2_, trustdomai0_], fromElementsByPath=[td.trustPoints], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_trustdom trustdomai0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=td,role=null,tableName=ts_trustdom,tableAlias=trustdomai0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustDomainEntity}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join ts_trustdom_ts_trust_point trustpoint1_ on trustdomai0_.name=trustpoint1_.ts_trustdom_name inner join ts_trust_point trustpoint2_ on trustpoint1_.trustPoints_name=trustpoint2_.name' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=be.fedict.trust.service.entity.TrustDomainEntity.trustPoints,tableName=ts_trust_point,tableAlias=trustpoint2_,origin=ts_trustdom trustdomai0_,columns={trustdomai0_.name ,className=be.fedict.trust.service.entity.TrustPointEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'trustdomai0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=td.name,tableAlias=trustdomai0_,className=be.fedict.trust.service.entity.TrustDomainEntity,classAlias=td}
          |  +-[ALIAS_REF] IdentNode: 'trustdomai0_.name' {alias=td, className=be.fedict.trust.service.entity.TrustDomainEntity, tableAlias=trustdomai0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@398825b3}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT td.trustPoints FROM be.fedict.trust.service.entity.TrustDomainEntity AS td WHERE td.name = :name
DEBUG [QueryTranslatorImpl] SQL: select trustpoint2_.name as name4_, trustpoint2_.certificateAuthority_name as certific4_4_, trustpoint2_.crlRefreshCronSchedule as crlRefre2_4_, trustpoint2_.fireDate as fireDate4_ from ts_trustdom trustdomai0_ inner join ts_trustdom_ts_trust_point trustpoint1_ on trustdomai0_.name=trustpoint1_.ts_trustdom_name inner join ts_trust_point trustpoint2_ on trustpoint1_.trustPoints_name=trustpoint2_.name where trustdomai0_.name=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_audit.all
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.AuditEntity ORDER BY id DESC
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'be'
    |           |  |  |  |  \-[IDENT] Node: 'fedict'
    |           |  |  |  \-[IDENT] Node: 'trust'
    |           |  |  \-[IDENT] Node: 'service'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'AuditEntity'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'DESC'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.AuditEntity (no alias) -> auditentit0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : id -> org.hibernate.type.LongType@7d2452e8
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.id -> auditentit0_.id
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_audit auditentit0_ ) ( ORDER ( auditentit0_.id {synthetic-alias} id ) DESC ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_audit auditentit0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_audit)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'auditentit0_.id as id5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_audit,tableAlias=auditentit0_,origin=null,columns={,className=be.fedict.trust.service.entity.AuditEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'auditentit0_.auditDate as auditDate5_, auditentit0_.message as message5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[auditentit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_audit auditentit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_audit,tableAlias=auditentit0_,origin=null,columns={,className=be.fedict.trust.service.entity.AuditEntity}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'auditentit0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=auditentit0_,className=be.fedict.trust.service.entity.AuditEntity,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'DESC'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.AuditEntity ORDER BY id DESC
DEBUG [QueryTranslatorImpl] SQL: select auditentit0_.id as id5_, auditentit0_.auditDate as auditDate5_, auditentit0_.message as message5_ from ts_audit auditentit0_ order by auditentit0_.id DESC
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.q.count.active
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT COUNT(*) FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CertificateAuthorityEntity'
    |  |     \-[ALIAS] Node: 'ca'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[COUNT] Node: 'COUNT'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'status'
          \-[QUOTED_STRING] Node: ''ACTIVE''

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (ca) -> certificat0_
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [DotNode] getDataType() : status -> org.hibernate.type.CustomType@46da3772
DEBUG [FromReferenceNode] Resolved :  ca.status -> certificat0_.status
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} ( COUNT * ) ) ( FromClause{level=1} ts_cert_authorities certificat0_ ) ( WHERE ( = ( certificat0_.status certificat0_.name status ) 'ACTIVE' ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_cert_authorities certificat0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_cert_authorities)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'COUNT'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities certificat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'certificat0_.status' {propertyName=status,dereferenceType=ALL,propertyPath=status,path=ca.status,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'certificat0_.name' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[QUOTED_STRING] LiteralNode: ''ACTIVE''

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT COUNT(*) FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
DEBUG [QueryTranslatorImpl] SQL: select count(*) as col_0_0_ from ts_cert_authorities certificat0_ where certificat0_.status='ACTIVE'
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.q.w.tp
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT ca FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CertificateAuthorityEntity'
    |  |     \-[ALIAS] Node: 'ca'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ca'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'trustPoint'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'trustPoint'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (ca) -> certificat0_
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [DotNode] getDataType() : trustPoint -> org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)
DEBUG [DotNode] dereferenceShortcut() : property trustPoint in be.fedict.trust.service.entity.CertificateAuthorityEntity does not require a join.
DEBUG [DotNode] terminal propertyPath = [trustPoint]
DEBUG [FromReferenceNode] Resolved :  ca.trustPoint -> certificat0_.trustPoint_name
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} certificat0_.name ) ( FromClause{level=1} ts_cert_authorities certificat0_ ) ( WHERE ( = ( certificat0_.trustPoint_name certificat0_.name trustPoint ) ? ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_cert_authorities certificat0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_cert_authorities)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'certificat0_.name as name0_' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities certificat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'certificat0_.trustPoint_name' {propertyName=trustPoint,dereferenceType=0,propertyPath=trustPoint,path=ca.trustPoint,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'certificat0_.name' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
          |  \-[IDENT] IdentNode: 'trustPoint' {originalText=trustPoint}
          \-[NAMED_PARAM] ParameterNode: '?' {name=trustPoint, expectedType=org.hibernate.type.ManyToOneType(be.fedict.trust.service.entity.TrustPointEntity)}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT ca FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
DEBUG [QueryTranslatorImpl] SQL: select certificat0_.name as name0_, certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_ from ts_cert_authorities certificat0_ where certificat0_.trustPoint_name=?
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_td.list.all
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'be'
                |  |  |  |  \-[IDENT] Node: 'fedict'
                |  |  |  \-[IDENT] Node: 'trust'
                |  |  \-[IDENT] Node: 'service'
                |  \-[IDENT] Node: 'entity'
                \-[IDENT] Node: 'TrustDomainEntity'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.TrustDomainEntity (no alias) -> trustdomai0_
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_trustdom trustdomai0_ ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_trustdom trustdomai0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_trustdom)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'trustdomai0_.name as name2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trustdom,tableAlias=trustdomai0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustDomainEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trustdomai0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ts_trustdom trustdomai0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_trustdom,tableAlias=trustdomai0_,origin=null,columns={,className=be.fedict.trust.service.entity.TrustDomainEntity}}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.TrustDomainEntity
DEBUG [QueryTranslatorImpl] SQL: select trustdomai0_.name as name2_, trustdomai0_.defaultDomain as defaultD2_2_, trustdomai0_.useCaching as useCaching2_ from ts_trustdom trustdomai0_
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.q.active
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT ca FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'be'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'fedict'
    |  |     |  |  |  |  \-[IDENT] Node: 'trust'
    |  |     |  |  |  \-[IDENT] Node: 'service'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CertificateAuthorityEntity'
    |  |     \-[ALIAS] Node: 'ca'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ca'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'status'
          \-[QUOTED_STRING] Node: ''ACTIVE''

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (ca) -> certificat0_
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [FromReferenceNode] Resolved :  ca -> certificat0_.name
DEBUG [DotNode] getDataType() : status -> org.hibernate.type.CustomType@46da3772
DEBUG [FromReferenceNode] Resolved :  ca.status -> certificat0_.status
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} certificat0_.name ) ( FromClause{level=1} ts_cert_authorities certificat0_ ) ( WHERE ( = ( certificat0_.status certificat0_.name status ) 'ACTIVE' ) ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_cert_authorities certificat0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_cert_authorities)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'certificat0_.name as name0_' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities certificat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'certificat0_.status' {propertyName=status,dereferenceType=ALL,propertyPath=status,path=ca.status,tableAlias=certificat0_,className=be.fedict.trust.service.entity.CertificateAuthorityEntity,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'certificat0_.name' {alias=ca, className=be.fedict.trust.service.entity.CertificateAuthorityEntity, tableAlias=certificat0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[QUOTED_STRING] LiteralNode: ''ACTIVE''

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT ca FROM be.fedict.trust.service.entity.CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
DEBUG [QueryTranslatorImpl] SQL: select certificat0_.name as name0_, certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_ from ts_cert_authorities certificat0_ where certificat0_.status='ACTIVE'
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_ca.q.all
DEBUG [QueryTranslatorImpl] parse() - HQL: FROM be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'be'
                |  |  |  |  \-[IDENT] Node: 'fedict'
                |  |  |  \-[IDENT] Node: 'trust'
                |  |  \-[IDENT] Node: 'service'
                |  \-[IDENT] Node: 'entity'
                \-[IDENT] Node: 'CertificateAuthorityEntity'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.CertificateAuthorityEntity (no alias) -> certificat0_
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( FromClause{level=1} ts_cert_authorities certificat0_ ) )
DEBUG [HqlSqlWalker] Derived SELECT clause created.
DEBUG [JoinProcessor] Using FROM fragment [ts_cert_authorities certificat0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_cert_authorities)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'certificat0_.name as name0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[certificat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ts_cert_authorities certificat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_cert_authorities,tableAlias=certificat0_,origin=null,columns={,className=be.fedict.trust.service.entity.CertificateAuthorityEntity}}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: FROM be.fedict.trust.service.entity.CertificateAuthorityEntity
DEBUG [QueryTranslatorImpl] SQL: select certificat0_.name as name0_, certificat0_.crlUrl as crlUrl0_, certificat0_.encodedCertificate as encodedC3_0_, certificat0_.nextUpdate as nextUpdate0_, certificat0_.status as status0_, certificat0_.thisUpdate as thisUpdate0_, certificat0_.trustPoint_name as trustPoint7_0_ from ts_cert_authorities certificat0_
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.d.i.old.c
DEBUG [QueryTranslatorImpl] parse() - HQL: DELETE FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
DEBUG [AST] --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'be'
    |        |  |  |  |  \-[IDENT] Node: 'fedict'
    |        |  |  |  \-[IDENT] Node: 'trust'
    |        |  |  \-[IDENT] Node: 'service'
    |        |  \-[IDENT] Node: 'entity'
    |        \-[IDENT] Node: 'RevokedCertificateEntity'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[LT] Node: '<'
          |  +-[IDENT] Node: 'crlNumber'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'crlNumber'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'issuer'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'issuer'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] delete << begin [level=1, statement=delete]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : crlNumber -> org.hibernate.type.BigIntegerType@37eb2c1b
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.crlNumber -> crlNumber
DEBUG [HqlSqlBaseWalker] delete : finishing up [level=1, statement=delete]
DEBUG [HqlSqlBaseWalker] delete >> end [level=1, statement=delete]
DEBUG [AST] --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (ts_revoked_certs)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[LT] BinaryLogicOperatorNode: '<'
          |  +-[DOT] DotNode: 'crlNumber' {propertyName=crlNumber,dereferenceType=ALL,propertyPath=crlNumber,path={synthetic-alias}.crlNumber,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'crlNumber' {originalText=crlNumber}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=crlNumber, expectedType=org.hibernate.type.BigIntegerType@37eb2c1b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[IDENT] IdentNode: 'issuer' {originalText=issuer}
             \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=null}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.q.count.all
DEBUG [QueryTranslatorImpl] parse() - HQL: SELECT COUNT(*) FROM be.fedict.trust.service.entity.RevokedCertificateEntity
DEBUG [AST] --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[DOT] Node: '.'
       |        |  |  |  |  +-[IDENT] Node: 'be'
       |        |  |  |  |  \-[IDENT] Node: 'fedict'
       |        |  |  |  \-[IDENT] Node: 'trust'
       |        |  |  \-[IDENT] Node: 'service'
       |        |  \-[IDENT] Node: 'entity'
       |        \-[IDENT] Node: 'RevokedCertificateEntity'
       \-[SELECT] Node: 'SELECT'
          \-[COUNT] Node: 'COUNT'
             \-[ROW_STAR] Node: '*'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] select << begin [level=1, statement=select]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [HqlSqlBaseWalker] select : finishing up [level=1, statement=select]
DEBUG [HqlSqlWalker] processQuery() :  ( SELECT ( {select clause} ( COUNT * ) ) ( FromClause{level=1} ts_revoked_certs revokedcer0_ ) )
DEBUG [JoinProcessor] Using FROM fragment [ts_revoked_certs revokedcer0_]
DEBUG [HqlSqlBaseWalker] select >> end [level=1, statement=select]
DEBUG [AST] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ts_revoked_certs)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'COUNT'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs revokedcer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [QueryTranslatorImpl] HQL: SELECT COUNT(*) FROM be.fedict.trust.service.entity.RevokedCertificateEntity
DEBUG [QueryTranslatorImpl] SQL: select count(*) as col_0_0_ from ts_revoked_certs revokedcer0_
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking named query: ts_rc.d.i
DEBUG [QueryTranslatorImpl] parse() - HQL: DELETE FROM be.fedict.trust.service.entity.RevokedCertificateEntity WHERE pk.issuer = :issuer
DEBUG [AST] --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'be'
    |        |  |  |  |  \-[IDENT] Node: 'fedict'
    |        |  |  |  \-[IDENT] Node: 'trust'
    |        |  |  \-[IDENT] Node: 'service'
    |        |  \-[IDENT] Node: 'entity'
    |        \-[IDENT] Node: 'RevokedCertificateEntity'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'pk'
          |  \-[IDENT] Node: 'issuer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'issuer'

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [HqlSqlBaseWalker] delete << begin [level=1, statement=delete]
DEBUG [FromElement] FromClause{level=1} :  be.fedict.trust.service.entity.RevokedCertificateEntity (no alias) -> revokedcer0_
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias} -> {synthetic-alias}
DEBUG [DotNode] getDataType() : pk -> org.hibernate.type.ComponentType@773c550f
DEBUG [DotNode] Unresolved property path is now 'pk.issuer'
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk -> issuer
DEBUG [DotNode] getDataType() : pk.issuer -> org.hibernate.type.StringType@398825b3
DEBUG [FromReferenceNode] Resolved :  {synthetic-alias}.pk.issuer -> issuer
DEBUG [HqlSqlBaseWalker] delete : finishing up [level=1, statement=delete]
DEBUG [HqlSqlBaseWalker] delete >> end [level=1, statement=delete]
DEBUG [AST] --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (ts_revoked_certs)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[revokedcer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ts_revoked_certs' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ts_revoked_certs,tableAlias=revokedcer0_,origin=null,columns={,className=be.fedict.trust.service.entity.RevokedCertificateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'issuer' {propertyName=issuer,dereferenceType=ALL,propertyPath=pk.issuer,path={synthetic-alias}.pk.issuer,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  +-[DOT] DotNode: 'issuer' {propertyName=issuer,dereferenceType=2,propertyPath=pk.issuer,path={synthetic-alias}.pk,tableAlias=revokedcer0_,className=be.fedict.trust.service.entity.RevokedCertificateEntity,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'pk' {originalText=pk}
          |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.StringType@398825b3}

DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [ErrorCounter] throwQueryException() : no errors
DEBUG [SessionFactoryImpl] Checking 0 named SQL queries
DEBUG [SessionImpl] opened session at timestamp: 14093490203
DEBUG [JDBCTransaction] begin
DEBUG [ConnectionManager] opening JDBC connection
DEBUG [JDBCTransaction] current autocommit status: true
DEBUG [JDBCTransaction] disabling autocommit
DEBUG [AbstractSaveEventListener] generated identifier: component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}, using strategy: org.hibernate.id.CompositeNestedGeneratedValueGenerator
DEBUG [JDBCTransaction] commit
DEBUG [AbstractFlushingEventListener] processing flush-time cascades
DEBUG [AbstractFlushingEventListener] dirty checking collections
DEBUG [AbstractFlushingEventListener] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
DEBUG [AbstractFlushingEventListener] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG [Printer] listing entities:
DEBUG [Printer] be.fedict.trust.service.entity.RevokedCertificateEntity{crlNumber=123465789, revocationDate=Fri Aug 29 17:50:20 EDT 2014, pk=component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}}
DEBUG [AbstractBatcher] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG [SQL] insert into ts_revoked_certs (crlNumber, revocationDate, issuer, serialNumber) values (?, ?, ?, ?)
DEBUG [AbstractBatcher] Executing batch size: 1
DEBUG [AbstractBatcher] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG [JDBCTransaction] re-enabling autocommit
DEBUG [JDBCTransaction] committed JDBC Connection
DEBUG [ConnectionManager] aggressively releasing JDBC connection
DEBUG [ConnectionManager] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG [JDBCTransaction] begin
DEBUG [ConnectionManager] opening JDBC connection
DEBUG [JDBCTransaction] current autocommit status: true
DEBUG [JDBCTransaction] disabling autocommit
DEBUG [AbstractBatcher] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG [SQL] select top ? revokedcer0_.issuer as issuer1_, revokedcer0_.serialNumber as serialNu2_1_, revokedcer0_.crlNumber as crlNumber1_, revokedcer0_.revocationDate as revocati4_1_ from ts_revoked_certs revokedcer0_ where revokedcer0_.issuer=? and revokedcer0_.serialNumber=?
DEBUG [AbstractBatcher] about to open ResultSet (open ResultSets: 0, globally: 0)
DEBUG [Loader] result row: EntityKey[be.fedict.trust.service.entity.RevokedCertificateEntity#component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}]
DEBUG [AbstractBatcher] about to close ResultSet (open ResultSets: 1, globally: 1)
DEBUG [AbstractBatcher] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG [TwoPhaseLoad] resolving associations for [be.fedict.trust.service.entity.RevokedCertificateEntity#component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}]
DEBUG [TwoPhaseLoad] done materializing entity [be.fedict.trust.service.entity.RevokedCertificateEntity#component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}]
DEBUG [StatefulPersistenceContext] initializing non-lazy collections
DEBUG [JDBCTransaction] commit
DEBUG [AbstractFlushingEventListener] processing flush-time cascades
DEBUG [AbstractFlushingEventListener] dirty checking collections
DEBUG [AbstractFlushingEventListener] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG [AbstractFlushingEventListener] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG [Printer] listing entities:
DEBUG [Printer] be.fedict.trust.service.entity.RevokedCertificateEntity{crlNumber=123465789, revocationDate=2014-08-29 17:50:20.343, pk=component[issuer,serialNumber]{issuer=CN=Test CA, serialNumber=21267647932558966653497436382356969621}}
DEBUG [JDBCTransaction] re-enabling autocommit
DEBUG [JDBCTransaction] committed JDBC Connection
DEBUG [ConnectionManager] aggressively releasing JDBC connection
DEBUG [ConnectionManager] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG [JDBCTransaction] begin
DEBUG [ConnectionManager] opening JDBC connection
DEBUG [JDBCTransaction] current autocommit status: true
DEBUG [JDBCTransaction] disabling autocommit
DEBUG [AbstractBatcher] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG [SQL] delete from ts_revoked_certs where crlNumber<? and issuer=?
DEBUG [AbstractBatcher] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG [JDBCTransaction] commit
DEBUG [JDBCTransaction] re-enabling autocommit
DEBUG [JDBCTransaction] committed JDBC Connection
DEBUG [ConnectionManager] aggressively releasing JDBC connection
DEBUG [ConnectionManager] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG [JDBCTransaction] begin
DEBUG [ConnectionManager] opening JDBC connection
DEBUG [JDBCTransaction] current autocommit status: true
DEBUG [JDBCTransaction] disabling autocommit
DEBUG [AbstractBatcher] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG [SQL] delete from ts_revoked_certs where crlNumber<? and issuer=?
DEBUG [AbstractBatcher] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG [PersistenceTest] entity manager open: true
DEBUG [PersistenceTest] entity transaction active: true
DEBUG [JDBCTransaction] commit
DEBUG [JDBCTransaction] re-enabling autocommit
DEBUG [JDBCTransaction] committed JDBC Connection
DEBUG [ConnectionManager] aggressively releasing JDBC connection
DEBUG [ConnectionManager] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.2 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Java Client 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-client ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-client/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-client ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-client ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-client/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-client ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-client ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-client/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service SNMP 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-snmp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 0 resource

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-snmp ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-snmp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-snmp/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-snmp ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-snmp ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-snmp/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Model 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 6 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-model ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-model/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-model ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-model ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-model/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service XKMS2 Implementation 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-xkms2-ws-impl ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 1 resource

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-xkms2-ws-impl ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-xkms2-ws-impl ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 1 resource

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-xkms2-ws-impl ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-xkms2-ws-impl ---
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws-impl/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running test.unit.be.fedict.trust.xkms2.XKMSPortImplTest
DEBUG [XKMSPortImplTest] http context attributes: {}
29-Aug-2014 5:50:22 PM com.sun.xml.ws.server.MonitorBase createRoot
INFO: Metro monitoring rootname successfully set to: null
DEBUG [HttpClient] Java version: 1.6.0_45
DEBUG [HttpClient] Java vendor: Sun Microsystems Inc.
DEBUG [HttpClient] Java class path: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws-impl/target/test-classes:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws-impl/target/classes:/home/jubarran/.m2/repository/com/sun/xml/ws/jaxws-rt/2.2.1/jaxws-rt-2.2.1.jar:/home/jubarran/.m2/repository/javax/xml/ws/jaxws-api/2.2.1/jaxws-api-2.2.1.jar:/home/jubarran/.m2/repository/javax/xml/bind/jaxb-api/2.2.1/jaxb-api-2.2.1.jar:/home/jubarran/.m2/repository/javax/xml/soap/saaj-api/1.3.1/saaj-api-1.3.1.jar:/home/jubarran/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/jubarran/.m2/repository/javax/jws/jsr181-api/1.0-MR1/jsr181-api-1.0-MR1.jar:/home/jubarran/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.1/jaxb-impl-2.2.1.jar:/home/jubarran/.m2/repository/com/sun/xml/messaging/saaj/saaj-impl/1.3.4/saaj-impl-1.3.4.jar:/home/jubarran/.m2/repository/com/sun/xml/stream/buffer/streambuffer/1.1/streambuffer-1.1.jar:/home/jubarran/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/jubarran/.m2/repository/org/codehaus/woodstox/wstx-asl/3.2.1/wstx-asl-3.2.1.jar:/home/jubarran/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/jubarran/.m2/repository/org/jvnet/staxex/stax-ex/1.2/stax-ex-1.2.jar:/home/jubarran/.m2/repository/javax/xml/stream/stax-api/1.0/stax-api-1.0.jar:/home/jubarran/.m2/repository/com/sun/org/apache/xml/internal/resolver/20050927/resolver-20050927.jar:/home/jubarran/.m2/repository/org/jvnet/mimepull/1.4/mimepull-1.4.jar:/home/jubarran/.m2/repository/com/sun/xml/ws/policy/2.2.1/policy-2.2.1.jar:/home/jubarran/.m2/repository/com/sun/xml/txw2/txw2/20090102/txw2-20090102.jar:/home/jubarran/.m2/repository/com/sun/istack/istack-commons-runtime/2.2/istack-commons-runtime-2.2.jar:/home/jubarran/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/jubarran/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-xkms2-ws/target/classes:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-model/target/classes:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes:/home/jubarran/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-client/target/classes:/home/jubarran/.m2/repository/org/bouncycastle/bcprov-jdk16/1.45/bcprov-jdk16-1.45.jar:/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-snmp/target/classes:/home/jubarran/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/jubarran/.m2/repository/be/fedict/jtrust/1.1.2/jtrust-1.1.2.jar:/home/jubarran/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/jubarran/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/jubarran/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/jubarran/.m2/repository/org/bouncycastle/bctsp-jdk16/1.45/bctsp-jdk16-1.45.jar:/home/jubarran/.m2/repository/org/bouncycastle/bcmail-jdk16/1.45/bcmail-jdk16-1.45.jar:/home/jubarran/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/jubarran/.m2/repository/org/jboss/spec/javax/ejb/jboss-ejb-api_3.1_spec/1.0.0.Beta2/jboss-ejb-api_3.1_spec-1.0.0.Beta2.jar:/home/jubarran/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.0.Beta1/jboss-transaction-api_1.1_spec-1.0.0.Beta1.jar:/home/jubarran/.m2/repository/org/jboss/ws/native/jbossws-native-jaxrpc/3.2.2.GA/jbossws-native-jaxrpc-3.2.2.GA.jar:/home/jubarran/.m2/repository/org/jboss/ws/native/jbossws-native-saaj/3.2.2.GA/jbossws-native-saaj-3.2.2.GA.jar:/home/jubarran/.m2/repository/org/jboss/ejb3/jboss-ejb3-ext-api/1.1.1/jboss-ejb3-ext-api-1.1.1.jar:/home/jubarran/.m2/repository/org/jboss/metadata/jboss-metadata/1.0.0.CR16/jboss-metadata-1.0.0.CR16.jar:/home/jubarran/.m2/repository/org/jboss/logging/jboss-logging-spi/2.0.5.GA/jboss-logging-spi-2.0.5.GA.jar:/home/jubarran/.m2/repository/org/jboss/jboss-common-core/2.2.8.GA/jboss-common-core-2.2.8.GA.jar:/home/jubarran/.m2/repository/org/jboss/javaee/jboss-jms-api/1.1.0.GA/jboss-jms-api-1.1.0.GA.jar:/home/jubarran/.m2/repository/org/hibernate/ejb3-persistence/1.0.2.GA/ejb3-persistence-1.0.2.GA.jar:/home/jubarran/.m2/repository/org/jboss/javaee/jboss-transaction-api/1.0.1.GA/jboss-transaction-api-1.0.1.GA.jar:/home/jubarran/.m2/repository/org/jboss/ws/jbossws-spi/1.0.6.GA/jbossws-spi-1.0.6.GA.jar:/home/jubarran/.m2/repository/org/apache/ant/ant/1.7.0/ant-1.7.0.jar:/home/jubarran/.m2/repository/org/apache/ant/ant-launcher/1.7.0/ant-launcher-1.7.0.jar:/home/jubarran/.m2/repository/gnu-getopt/getopt/1.0.13/getopt-1.0.13.jar:/home/jubarran/.m2/repository/jboss/jbossws/jboss-jaxws/3.0.1-native-2.0.4.GA/jboss-jaxws-3.0.1-native-2.0.4.GA.jar:/home/jubarran/.m2/repository/org/jboss/jbossxb/2.0.0.GA/jbossxb-2.0.0.GA.jar:/home/jubarran/.m2/repository/org/jboss/jboss-reflect/2.0.0.GA/jboss-reflect-2.0.0.GA.jar:/home/jubarran/.m2/repository/apache-xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar:/home/jubarran/.m2/repository/wutka-dtdparser/dtdparser121/1.2.1/dtdparser121-1.2.1.jar:/home/jubarran/.m2/repository/org/jboss/jboss-vfs/2.0.0.CR1/jboss-vfs-2.0.0.CR1.jar:/home/jubarran/.m2/repository/org/jboss/jboss-mdr/2.0.0.GA/jboss-mdr-2.0.0.GA.jar:/home/jubarran/.m2/repository/sun-jaxb/jaxb-api/2.1.4/jaxb-api-2.1.4.jar:/home/jubarran/.m2/repository/apache-xerces/xml-apis/2.9.1/xml-apis-2.9.1.jar:/home/jubarran/.m2/repository/javax/security/jacc/1.1/jacc-1.1.jar:/home/jubarran/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-core/3.6.2.Final/hibernate-core-3.6.2.Final.jar:/home/jubarran/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/jubarran/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/jubarran/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/jubarran/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/jubarran/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/jubarran/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jubarran/.m2/repository/javax/jms/jms/1.1/jms-1.1.jar:/home/jubarran/.m2/repository/joda-time/joda-time/1.6.2/joda-time-1.6.2.jar:/home/jubarran/.m2/repository/org/apache/ws/security/wss4j/1.6.7/wss4j-1.6.7.jar:/home/jubarran/.m2/repository/org/apache/santuario/xmlsec/1.5.2/xmlsec-1.5.2.jar:/home/jubarran/.m2/repository/org/opensaml/opensaml/2.4.1/opensaml-2.4.1.jar:/home/jubarran/.m2/repository/org/opensaml/openws/1.4.1/openws-1.4.1.jar:/home/jubarran/.m2/repository/org/opensaml/xmltooling/1.3.1/xmltooling-1.3.1.jar:/home/jubarran/.m2/repository/org/apache/commons/ssl/not-yet-commons-ssl/0.3.9/not-yet-commons-ssl-0.3.9.jar:/home/jubarran/.m2/repository/org/apache/xerces/xml-apis/2.10.0/xml-apis-2.10.0.jar:/home/jubarran/.m2/repository/org/apache/xerces/xercesImpl/2.10.0/xercesImpl-2.10.0.jar:/home/jubarran/.m2/repository/org/apache/xerces/resolver/2.10.0/resolver-2.10.0.jar:/home/jubarran/.m2/repository/org/apache/xerces/serializer/2.10.0/serializer-2.10.0.jar:/home/jubarran/.m2/repository/org/apache/xalan/xalan/2.7.1-1.jbossorg/xalan-2.7.1-1.jbossorg.jar:/home/jubarran/.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar:/home/jubarran/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/jubarran/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/jubarran/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/jubarran/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/jubarran/.m2/repository/org/easymock/easymock/3.0/easymock-3.0.jar:/home/jubarran/.m2/repository/cglib/cglib-nodep/2.2/cglib-nodep-2.2.jar:/home/jubarran/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar:
DEBUG [HttpClient] Operating system name: Linux
DEBUG [HttpClient] Operating system architecture: amd64
DEBUG [HttpClient] Operating system version: 3.5.0-54-generic
DEBUG [HttpClient] SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
DEBUG [HttpClient] SunRsaSign 1.5: Sun RSA signature provider
DEBUG [HttpClient] SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
DEBUG [HttpClient] SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
DEBUG [HttpClient] SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
DEBUG [HttpClient] SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
DEBUG [HttpClient] XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
DEBUG [HttpClient] SunPCSC 1.6: Sun PC/SC provider
DEBUG [DefaultHttpParams] Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
DEBUG [DefaultHttpParams] Set parameter http.protocol.version = HTTP/1.1
DEBUG [DefaultHttpParams] Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
DEBUG [DefaultHttpParams] Set parameter http.protocol.cookie-policy = default
DEBUG [DefaultHttpParams] Set parameter http.protocol.element-charset = US-ASCII
DEBUG [DefaultHttpParams] Set parameter http.protocol.content-charset = ISO-8859-1
DEBUG [DefaultHttpParams] Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@4eb3c24f
DEBUG [DefaultHttpParams] Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
DEBUG [HttpConnection] Open connection to localhost:48159
DEBUG [header] >> "GET /xkms2?wsdl HTTP/1.1[\r][\n]"
DEBUG [HttpMethodBase] Adding Host request header
DEBUG [header] >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
DEBUG [header] >> "Host: localhost:48159[\r][\n]"
DEBUG [header] >> "[\r][\n]"
DEBUG [header] << "HTTP/1.1 200 OK[\r][\n]"
DEBUG [header] << "HTTP/1.1 200 OK[\r][\n]"
DEBUG [header] << "Transfer-encoding: chunked[\r][\n]"
DEBUG [header] << "Content-type: text/xml;charset=utf-8[\r][\n]"
DEBUG [header] << "[\r][\n]"
DEBUG [HttpConnection] Input data available
DEBUG [XKMSPortImplTest] status code: 200
WARN  [HttpMethodBase] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
DEBUG [HttpMethodBase] Buffering response body
DEBUG [content] << "5"
DEBUG [content] << "9"
DEBUG [content] << "a"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://xkms2.trust.fedict.be/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://xkms2.trust.fedict.be/" name="XKMSPortImplService">[\n]"
DEBUG [content] << "<import namespace="http://www.w3.org/2002/03/xkms#wsdl" location="http://localhost:48159?wsdl=1" />[\n]"
DEBUG [content] << "<binding xmlns:ns1="http://www.w3.org/2002/03/xkms#wsdl" name="XKMSPortImplPortBinding" type="ns1:XKMSPortType">[\n]"
DEBUG [content] << "<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />[\n]"
DEBUG [content] << "<operation name="Validate">[\n]"
DEBUG [content] << "<soap:operation soapAction="validate" />[\n]"
DEBUG [content] << "<input>[\n]"
DEBUG [content] << "<soap:body use="literal" />[\n]"
DEBUG [content] << "</input>[\n]"
DEBUG [content] << "<output>[\n]"
DEBUG [content] << "<soap:body use="literal" />[\n]"
DEBUG [content] << "</output>[\n]"
DEBUG [content] << "</operation>[\n]"
DEBUG [content] << "</binding>[\n]"
DEBUG [content] << "<service name="XKMSPortImplService">[\n]"
DEBUG [content] << "<port name="XKMSPortImplPort" binding="tns:XKMSPortImplPortBinding">[\n]"
DEBUG [content] << "<soap:address location="http://localhost:48159" />[\n]"
DEBUG [content] << "</port>[\n]"
DEBUG [content] << "</service>[\n]"
DEBUG [content] << "</definitions>"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "0"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [header] << "[\r][\n]"
DEBUG [HttpMethodBase] Resorting to protocol version default close connection policy
DEBUG [HttpMethodBase] Should NOT close connection, using HTTP/1.1
DEBUG [HttpConnection] Releasing connection back to connection manager.
DEBUG [XKMSPortImplTest] runtime WSDL: <?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://xkms2.trust.fedict.be/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://xkms2.trust.fedict.be/" name="XKMSPortImplService">
<import namespace="http://www.w3.org/2002/03/xkms#wsdl" location="http://localhost:48159?wsdl=1" />
<binding xmlns:ns1="http://www.w3.org/2002/03/xkms#wsdl" name="XKMSPortImplPortBinding" type="ns1:XKMSPortType">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
<operation name="Validate">
<soap:operation soapAction="validate" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
</operation>
</binding>
<service name="XKMSPortImplService">
<port name="XKMSPortImplPort" binding="tns:XKMSPortImplPortBinding">
<soap:address location="http://localhost:48159" />
</port>
</service>
</definitions>
DEBUG [header] >> "GET /xkms2?wsdl=1 HTTP/1.1[\r][\n]"
DEBUG [HttpMethodBase] Adding Host request header
DEBUG [header] >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
DEBUG [header] >> "Host: localhost:48159[\r][\n]"
DEBUG [header] >> "[\r][\n]"
DEBUG [header] << "HTTP/1.1 200 OK[\r][\n]"
DEBUG [header] << "HTTP/1.1 200 OK[\r][\n]"
DEBUG [header] << "Transfer-encoding: chunked[\r][\n]"
DEBUG [header] << "Content-type: text/xml;charset=utf-8[\r][\n]"
DEBUG [header] << "[\r][\n]"
DEBUG [HttpConnection] Input data available
DEBUG [XKMSPortImplTest] status code: 200
WARN  [HttpMethodBase] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
DEBUG [HttpMethodBase] Buffering response body
DEBUG [content] << "6"
DEBUG [content] << "f"
DEBUG [content] << "d"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><definitions xmlns:tns="http://www.w3.org/2002/03/xkms#wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://www.w3.org/2002/03/xkms#wsdl">[\n]"
DEBUG [content] << "<types>[\n]"
DEBUG [content] << "<xsd:schema>[\n]"
DEBUG [content] << "<xsd:import namespace="urn:be:fedict:trust:xkms:extensions" schemaLocation="http://localhost:48159?xsd=1" />[\n]"
DEBUG [content] << "</xsd:schema>[\n]"
DEBUG [content] << "<xsd:schema>[\n]"
DEBUG [content] << "<xsd:import namespace="http://www.w3.org/2002/03/xkms#" schemaLocation="http://localhost:48159?xsd=2" />[\n]"
DEBUG [content] << "</xsd:schema>[\n]"
DEBUG [content] << "<xsd:schema>[\n]"
DEBUG [content] << "<xsd:import namespace="http://www.w3.org/2001/04/xmlenc#" schemaLocation="http://localhost:48159?xsd=3" />[\n]"
DEBUG [content] << "</xsd:schema>[\n]"
DEBUG [content] << "<xsd:schema>[\n]"
DEBUG [content] << "<xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://localhost:48159?xsd=4" />[\n]"
DEBUG [content] << "</xsd:schema>[\n]"
DEBUG [content] << "<xsd:schema>[\n]"
DEBUG [content] << "<xsd:import namespace="http://uri.etsi.org/01903/v1.3.2#" schemaLocation="http://localhost:48159?xsd=5" />[\n]"
DEBUG [content] << "</xsd:schema>[\n]"
DEBUG [content] << "</types>[\n]"
DEBUG [content] << "<message name="Validate">[\n]"
DEBUG [content] << "<part xmlns:ns1="http://www.w3.org/2002/03/xkms#" name="body" element="ns1:ValidateRequest" />[\n]"
DEBUG [content] << "</message>[\n]"
DEBUG [content] << "<message name="ValidateResponse">[\n]"
DEBUG [content] << "<part xmlns:ns2="http://www.w3.org/2002/03/xkms#" name="body" element="ns2:ValidateResult" />[\n]"
DEBUG [content] << "</message>[\n]"
DEBUG [content] << "<portType name="XKMSPortType">[\n]"
DEBUG [content] << "<operation name="Validate">[\n]"
DEBUG [content] << "<input xmlns:ns3="http://www.w3.org/2007/05/addressing/metadata" ns3:Action="validate" message="tns:Validate" />[\n]"
DEBUG [content] << "<output xmlns:ns4="http://www.w3.org/2007/05/addressing/metadata" ns4:Action="http://www.w3.org/2002/03/xkms#wsdl/XKMSPortType/ValidateResponse" message="tns:ValidateResponse" />[\n]"
DEBUG [content] << "</operation>[\n]"
DEBUG [content] << "</portType>[\n]"
DEBUG [content] << "</definitions>"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "0"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [content] << "[\r]"
DEBUG [content] << "[\n]"
DEBUG [header] << "[\r][\n]"
DEBUG [HttpMethodBase] Resorting to protocol version default close connection policy
DEBUG [HttpMethodBase] Should NOT close connection, using HTTP/1.1
DEBUG [HttpConnection] Releasing connection back to connection manager.
DEBUG [XKMSPortImplTest] runtime WSDL: <?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.1-b01-. --><definitions xmlns:tns="http://www.w3.org/2002/03/xkms#wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://www.w3.org/2002/03/xkms#wsdl">
<types>
<xsd:schema>
<xsd:import namespace="urn:be:fedict:trust:xkms:extensions" schemaLocation="http://localhost:48159?xsd=1" />
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://www.w3.org/2002/03/xkms#" schemaLocation="http://localhost:48159?xsd=2" />
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://www.w3.org/2001/04/xmlenc#" schemaLocation="http://localhost:48159?xsd=3" />
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://localhost:48159?xsd=4" />
</xsd:schema>
<xsd:schema>
<xsd:import namespace="http://uri.etsi.org/01903/v1.3.2#" schemaLocation="http://localhost:48159?xsd=5" />
</xsd:schema>
</types>
<message name="Validate">
<part xmlns:ns1="http://www.w3.org/2002/03/xkms#" name="body" element="ns1:ValidateRequest" />
</message>
<message name="ValidateResponse">
<part xmlns:ns2="http://www.w3.org/2002/03/xkms#" name="body" element="ns2:ValidateResult" />
</message>
<portType name="XKMSPortType">
<operation name="Validate">
<input xmlns:ns3="http://www.w3.org/2007/05/addressing/metadata" ns3:Action="validate" message="tns:Validate" />
<output xmlns:ns4="http://www.w3.org/2007/05/addressing/metadata" ns4:Action="http://www.w3.org/2002/03/xkms#wsdl/XKMSPortType/ValidateResponse" message="tns:ValidateResponse" />
</operation>
</portType>
</definitions>
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.697 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service WS Runtime 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-ws ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ws/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-ws ---
No sources to compile

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-ws ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ws/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-ws ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-ws ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ws/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service OCSP Responder 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-ocsp-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ocsp-webapp/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-ocsp-webapp ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-ocsp-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ocsp-webapp/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-ocsp-webapp ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-ocsp-webapp ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-ocsp-webapp/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service SQL DDL 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (filter) @ eid-trust-service-sql-ddl ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 6 resources

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-sql-ddl ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 6 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-sql-ddl ---
No sources to compile

--- eid-applet-sql-ddl-plugin:1.1.2-SNAPSHOT:generate-sql-ddl (mysql) @ eid-trust-service-sql-ddl ---
SQL DDL script generator
Output SQL DDL script file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/mysql-trust-service-ddl.sql
artifact: be.fedict.eid-trust-service:eid-trust-service-entity
artifact version: 1.0.3-SNAPSHOT
artifact file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes
hibernate dialect: org.hibernate.dialect.MySQLDialect
# JPA entity classes: 19
Hibernate Commons Annotations 3.2.0.Final
Hibernate 3.6.2.Final
hibernate.properties not found
Bytecode provider name : javassist
using JDK 1.4 java.sql.Timestamp handling
Using dialect: org.hibernate.dialect.MySQLDialect
dialect: org.hibernate.dialect.MySQLDialect
JPA entity: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.ClockDriftConfigEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.LocalizationKeyEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.LocalizationTextEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.CertificateAuthorityEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.AdministratorEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.RevokedCertificateEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.WSSecurityConfigEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.TrustPointEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.DNConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.NetworkConfigEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.AuditEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.TrustDomainEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.VirtualTrustDomainEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
JPA entity: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
entity class loader: java.net.URLClassLoader@f6b7e0e
Using dialect: org.hibernate.dialect.MySQLDialect
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
Bind entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity on table ts_certcons
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.ClockDriftConfigEntity
Bind entity be.fedict.trust.service.entity.ClockDriftConfigEntity on table ts_clock_drift
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationKeyEntity
Bind entity be.fedict.trust.service.entity.LocalizationKeyEntity on table ts_locali_key
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationTextEntity
Bind entity be.fedict.trust.service.entity.LocalizationTextEntity on table ts_locali_text
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.CertificateAuthorityEntity
Binding Named query: ts_ca.q.w.tp => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.n.w.tp => SELECT name FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.d.w.tp => DELETE FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.all => FROM CertificateAuthorityEntity
Binding Named query: ts_ca.q.count.active => SELECT COUNT(*) FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Binding Named query: ts_ca.q.active => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Bind entity be.fedict.trust.service.entity.CertificateAuthorityEntity on table ts_cert_authorities
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.AdministratorEntity
Binding Named query: ts_admin.all => FROM AdministratorEntity
Bind entity be.fedict.trust.service.entity.AdministratorEntity on table ts_admin
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.RevokedCertificateEntity
Binding Named query: ts_rc.q.i.s => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
Binding Named query: ts_rc.q.c => SELECT MAX(crlNumber) FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i => DELETE FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.q.i => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i.old.c => DELETE FROM RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
Binding Named query: ts_rc.q.count.all => SELECT COUNT(*) FROM RevokedCertificateEntity
Bind entity be.fedict.trust.service.entity.RevokedCertificateEntity on table ts_revoked_certs
Binding entity from annotated class: be.fedict.trust.service.entity.WSSecurityConfigEntity
Bind entity be.fedict.trust.service.entity.WSSecurityConfigEntity on table ts_wssec_config
Binding entity from annotated class: be.fedict.trust.service.entity.TrustPointEntity
Binding Named query: ts_tp.q.all => FROM TrustPointEntity
Bind entity be.fedict.trust.service.entity.TrustPointEntity on table ts_trust_point
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.DNConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.NetworkConfigEntity
Bind entity be.fedict.trust.service.entity.NetworkConfigEntity on table ts_network_config
Binding entity from annotated class: be.fedict.trust.service.entity.AuditEntity
Binding Named query: ts_audit.all => FROM AuditEntity ORDER BY id DESC
Binding Named query: ts_audit.rem.all => DELETE FROM AuditEntity
Bind entity be.fedict.trust.service.entity.AuditEntity on table ts_audit
Binding entity from annotated class: be.fedict.trust.service.entity.TrustDomainEntity
Binding Named query: ts_td.list.all => FROM TrustDomainEntity
Binding Named query: ts_td.get.default => SELECT td FROM TrustDomainEntity AS td WHERE td.defaultDomain = true
Binding Named query: ts_td.list.tp => SELECT td.trustPoints FROM TrustDomainEntity AS td WHERE td.name = :name
Binding Named query: ts_td.list.w.tp => SELECT td FROM TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
Bind entity be.fedict.trust.service.entity.TrustDomainEntity on table ts_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.all => FROM VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.td => SELECT vtd.trustDomains FROM VirtualTrustDomainEntity AS vtd WHERE vtd.name = :name
Bind entity be.fedict.trust.service.entity.VirtualTrustDomainEntity on table ts_v_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
Hibernate Validator not found: ignoring
SQL DDL script: 
    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bit not null,
        primary key (id)
    );

    create table ts_audit (
        id bigint not null auto_increment,
        auditDate datetime,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate longblob,
        nextUpdate datetime,
        status varchar(255),
        thisUpdate datetime,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id bigint not null auto_increment,
        policy varchar(255),
        issuerName varchar(255),
        serialNumber decimal(38,0),
        allowed bit,
        keyUsage integer,
        dn varchar(255),
        qcComplianceFilter bit,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bit not null,
        fireDate datetime,
        maxClockOffset integer not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout integer not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id bigint not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id bigint not null auto_increment,
        language varchar(255),
        text longtext,
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bit not null,
        proxyHost varchar(255),
        proxyPort integer not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber decimal(38,0),
        revocationDate datetime,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate datetime,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bit not null,
        useCaching bit not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id bigint not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bit not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add index FKCADE27465C3D84DB (trustPoint_name), 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point (name);

    alter table ts_certcons 
        add index FKE078915B788353F (trustDomain_name), 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom (name);

    alter table ts_locali_key_ts_locali_text 
        add index FKA8512C4FCB4D740B (texts_id), 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text (id);

    alter table ts_locali_key_ts_locali_text 
        add index FKA8512C4F1AF171A4 (ts_locali_key_keyName), 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key (keyName);

    alter table ts_locali_text 
        add index FKD122E0AED037C850 (keyName_keyName), 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key (keyName);

    alter table ts_trust_point 
        add index FKA6D87B29E01E20DB (certificateAuthority_name), 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities (name);

    alter table ts_trustdom_ts_certcons 
        add index FKD354200544E84EC (certificateConstraints_id), 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons (id);

    alter table ts_trustdom_ts_certcons 
        add index FKD354200BCFCC571 (ts_trustdom_name), 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom (name);

    alter table ts_trustdom_ts_trust_point 
        add index FK109A965EBCFCC571 (ts_trustdom_name), 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom (name);

    alter table ts_trustdom_ts_trust_point 
        add index FK109A965E3083C3B8 (trustPoints_name), 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point (name);

    alter table ts_v_trustdom_ts_trustdom 
        add index FK4007F2BE400BAF9 (ts_v_trustdom_name), 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom (name);

    alter table ts_v_trustdom_ts_trustdom 
        add index FK4007F2BE18B8D064 (trustDomains_name), 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom (name);

Running hbm2ddl schema export
writing generated schema to file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/mysql-trust-service-ddl.sql

    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bit not null,
        primary key (id)
    );

    create table ts_audit (
        id bigint not null auto_increment,
        auditDate datetime,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate longblob,
        nextUpdate datetime,
        status varchar(255),
        thisUpdate datetime,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id bigint not null auto_increment,
        policy varchar(255),
        issuerName varchar(255),
        serialNumber decimal(38,0),
        allowed bit,
        keyUsage integer,
        dn varchar(255),
        qcComplianceFilter bit,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bit not null,
        fireDate datetime,
        maxClockOffset integer not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout integer not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id bigint not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id bigint not null auto_increment,
        language varchar(255),
        text longtext,
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bit not null,
        proxyHost varchar(255),
        proxyPort integer not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber decimal(38,0),
        revocationDate datetime,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate datetime,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bit not null,
        useCaching bit not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id bigint not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bit not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add index FKCADE27465C3D84DB (trustPoint_name), 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point (name);

    alter table ts_certcons 
        add index FKE078915B788353F (trustDomain_name), 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom (name);

    alter table ts_locali_key_ts_locali_text 
        add index FKA8512C4FCB4D740B (texts_id), 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text (id);

    alter table ts_locali_key_ts_locali_text 
        add index FKA8512C4F1AF171A4 (ts_locali_key_keyName), 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key (keyName);

    alter table ts_locali_text 
        add index FKD122E0AED037C850 (keyName_keyName), 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key (keyName);

    alter table ts_trust_point 
        add index FKA6D87B29E01E20DB (certificateAuthority_name), 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities (name);

    alter table ts_trustdom_ts_certcons 
        add index FKD354200544E84EC (certificateConstraints_id), 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons (id);

    alter table ts_trustdom_ts_certcons 
        add index FKD354200BCFCC571 (ts_trustdom_name), 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom (name);

    alter table ts_trustdom_ts_trust_point 
        add index FK109A965EBCFCC571 (ts_trustdom_name), 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom (name);

    alter table ts_trustdom_ts_trust_point 
        add index FK109A965E3083C3B8 (trustPoints_name), 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point (name);

    alter table ts_v_trustdom_ts_trustdom 
        add index FK4007F2BE400BAF9 (ts_v_trustdom_name), 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom (name);

    alter table ts_v_trustdom_ts_trustdom 
        add index FK4007F2BE18B8D064 (trustDomains_name), 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom (name);
schema export complete

--- eid-applet-sql-ddl-plugin:1.1.2-SNAPSHOT:generate-sql-ddl (hsql) @ eid-trust-service-sql-ddl ---
SQL DDL script generator
Output SQL DDL script file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/hsql-trust-service-ddl.sql
artifact: be.fedict.eid-trust-service:eid-trust-service-entity
artifact version: 1.0.3-SNAPSHOT
artifact file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes
hibernate dialect: org.hibernate.dialect.HSQLDialect
# JPA entity classes: 19
Using dialect: org.hibernate.dialect.HSQLDialect
dialect: org.hibernate.dialect.HSQLDialect
JPA entity: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.ClockDriftConfigEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.LocalizationKeyEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.LocalizationTextEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.CertificateAuthorityEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.AdministratorEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.RevokedCertificateEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.WSSecurityConfigEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.TrustPointEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.DNConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.NetworkConfigEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.AuditEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.TrustDomainEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.VirtualTrustDomainEntity
entity class loader: java.net.URLClassLoader@2c6fd560
JPA entity: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
entity class loader: java.net.URLClassLoader@2c6fd560
Using dialect: org.hibernate.dialect.HSQLDialect
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
Bind entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity on table ts_certcons
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.ClockDriftConfigEntity
Bind entity be.fedict.trust.service.entity.ClockDriftConfigEntity on table ts_clock_drift
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationKeyEntity
Bind entity be.fedict.trust.service.entity.LocalizationKeyEntity on table ts_locali_key
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationTextEntity
Bind entity be.fedict.trust.service.entity.LocalizationTextEntity on table ts_locali_text
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.CertificateAuthorityEntity
Binding Named query: ts_ca.q.w.tp => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.n.w.tp => SELECT name FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.d.w.tp => DELETE FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.all => FROM CertificateAuthorityEntity
Binding Named query: ts_ca.q.count.active => SELECT COUNT(*) FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Binding Named query: ts_ca.q.active => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Bind entity be.fedict.trust.service.entity.CertificateAuthorityEntity on table ts_cert_authorities
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.AdministratorEntity
Binding Named query: ts_admin.all => FROM AdministratorEntity
Bind entity be.fedict.trust.service.entity.AdministratorEntity on table ts_admin
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.RevokedCertificateEntity
Binding Named query: ts_rc.q.i.s => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
Binding Named query: ts_rc.q.c => SELECT MAX(crlNumber) FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i => DELETE FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.q.i => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i.old.c => DELETE FROM RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
Binding Named query: ts_rc.q.count.all => SELECT COUNT(*) FROM RevokedCertificateEntity
Bind entity be.fedict.trust.service.entity.RevokedCertificateEntity on table ts_revoked_certs
Binding entity from annotated class: be.fedict.trust.service.entity.WSSecurityConfigEntity
Bind entity be.fedict.trust.service.entity.WSSecurityConfigEntity on table ts_wssec_config
Binding entity from annotated class: be.fedict.trust.service.entity.TrustPointEntity
Binding Named query: ts_tp.q.all => FROM TrustPointEntity
Bind entity be.fedict.trust.service.entity.TrustPointEntity on table ts_trust_point
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.DNConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.NetworkConfigEntity
Bind entity be.fedict.trust.service.entity.NetworkConfigEntity on table ts_network_config
Binding entity from annotated class: be.fedict.trust.service.entity.AuditEntity
Binding Named query: ts_audit.all => FROM AuditEntity ORDER BY id DESC
Binding Named query: ts_audit.rem.all => DELETE FROM AuditEntity
Bind entity be.fedict.trust.service.entity.AuditEntity on table ts_audit
Binding entity from annotated class: be.fedict.trust.service.entity.TrustDomainEntity
Binding Named query: ts_td.list.all => FROM TrustDomainEntity
Binding Named query: ts_td.get.default => SELECT td FROM TrustDomainEntity AS td WHERE td.defaultDomain = true
Binding Named query: ts_td.list.tp => SELECT td.trustPoints FROM TrustDomainEntity AS td WHERE td.name = :name
Binding Named query: ts_td.list.w.tp => SELECT td FROM TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
Bind entity be.fedict.trust.service.entity.TrustDomainEntity on table ts_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.all => FROM VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.td => SELECT vtd.trustDomains FROM VirtualTrustDomainEntity AS vtd WHERE vtd.name = :name
Bind entity be.fedict.trust.service.entity.VirtualTrustDomainEntity on table ts_v_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
Hibernate Validator not found: ignoring
SQL DDL script: 
    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bit not null,
        primary key (id)
    );

    create table ts_audit (
        id bigint generated by default as identity (start with 1),
        auditDate timestamp,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate longvarbinary,
        nextUpdate timestamp,
        status varchar(255),
        thisUpdate timestamp,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id bigint generated by default as identity (start with 1),
        policy varchar(255),
        issuerName varchar(255),
        serialNumber numeric,
        allowed bit,
        keyUsage integer,
        dn varchar(255),
        qcComplianceFilter bit,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bit not null,
        fireDate timestamp,
        maxClockOffset integer not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout integer not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id bigint not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id bigint generated by default as identity (start with 1),
        language varchar(255),
        text varchar(1048576),
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bit not null,
        proxyHost varchar(255),
        proxyPort integer not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber numeric,
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate timestamp,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bit not null,
        useCaching bit not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id bigint not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bit not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;

Running hbm2ddl schema export
writing generated schema to file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/hsql-trust-service-ddl.sql

    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bit not null,
        primary key (id)
    );

    create table ts_audit (
        id bigint generated by default as identity (start with 1),
        auditDate timestamp,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate longvarbinary,
        nextUpdate timestamp,
        status varchar(255),
        thisUpdate timestamp,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id bigint generated by default as identity (start with 1),
        policy varchar(255),
        issuerName varchar(255),
        serialNumber numeric,
        allowed bit,
        keyUsage integer,
        dn varchar(255),
        qcComplianceFilter bit,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bit not null,
        fireDate timestamp,
        maxClockOffset integer not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout integer not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id bigint not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id bigint generated by default as identity (start with 1),
        language varchar(255),
        text varchar(1048576),
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bit not null,
        proxyHost varchar(255),
        proxyPort integer not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber numeric,
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate timestamp,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bit not null,
        useCaching bit not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id bigint not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bit not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;
schema export complete

--- eid-applet-sql-ddl-plugin:1.1.2-SNAPSHOT:generate-sql-ddl (oracle) @ eid-trust-service-sql-ddl ---
SQL DDL script generator
Output SQL DDL script file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/oracle-trust-service-ddl.sql
artifact: be.fedict.eid-trust-service:eid-trust-service-entity
artifact version: 1.0.3-SNAPSHOT
artifact file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes
hibernate dialect: org.hibernate.dialect.Oracle10gDialect
# JPA entity classes: 19
Using dialect: org.hibernate.dialect.Oracle10gDialect
dialect: org.hibernate.dialect.Oracle10gDialect
JPA entity: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.ClockDriftConfigEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.LocalizationKeyEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.LocalizationTextEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.CertificateAuthorityEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.AdministratorEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.RevokedCertificateEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.WSSecurityConfigEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.TrustPointEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.DNConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.NetworkConfigEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.AuditEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.TrustDomainEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.VirtualTrustDomainEntity
entity class loader: java.net.URLClassLoader@7f001ba5
JPA entity: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
entity class loader: java.net.URLClassLoader@7f001ba5
Using dialect: org.hibernate.dialect.Oracle10gDialect
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
Bind entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity on table ts_certcons
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.ClockDriftConfigEntity
Bind entity be.fedict.trust.service.entity.ClockDriftConfigEntity on table ts_clock_drift
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationKeyEntity
Bind entity be.fedict.trust.service.entity.LocalizationKeyEntity on table ts_locali_key
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationTextEntity
Bind entity be.fedict.trust.service.entity.LocalizationTextEntity on table ts_locali_text
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.CertificateAuthorityEntity
Binding Named query: ts_ca.q.w.tp => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.n.w.tp => SELECT name FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.d.w.tp => DELETE FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.all => FROM CertificateAuthorityEntity
Binding Named query: ts_ca.q.count.active => SELECT COUNT(*) FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Binding Named query: ts_ca.q.active => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Bind entity be.fedict.trust.service.entity.CertificateAuthorityEntity on table ts_cert_authorities
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.AdministratorEntity
Binding Named query: ts_admin.all => FROM AdministratorEntity
Bind entity be.fedict.trust.service.entity.AdministratorEntity on table ts_admin
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.RevokedCertificateEntity
Binding Named query: ts_rc.q.i.s => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
Binding Named query: ts_rc.q.c => SELECT MAX(crlNumber) FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i => DELETE FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.q.i => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i.old.c => DELETE FROM RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
Binding Named query: ts_rc.q.count.all => SELECT COUNT(*) FROM RevokedCertificateEntity
Bind entity be.fedict.trust.service.entity.RevokedCertificateEntity on table ts_revoked_certs
Binding entity from annotated class: be.fedict.trust.service.entity.WSSecurityConfigEntity
Bind entity be.fedict.trust.service.entity.WSSecurityConfigEntity on table ts_wssec_config
Binding entity from annotated class: be.fedict.trust.service.entity.TrustPointEntity
Binding Named query: ts_tp.q.all => FROM TrustPointEntity
Bind entity be.fedict.trust.service.entity.TrustPointEntity on table ts_trust_point
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.DNConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.NetworkConfigEntity
Bind entity be.fedict.trust.service.entity.NetworkConfigEntity on table ts_network_config
Binding entity from annotated class: be.fedict.trust.service.entity.AuditEntity
Binding Named query: ts_audit.all => FROM AuditEntity ORDER BY id DESC
Binding Named query: ts_audit.rem.all => DELETE FROM AuditEntity
Bind entity be.fedict.trust.service.entity.AuditEntity on table ts_audit
Binding entity from annotated class: be.fedict.trust.service.entity.TrustDomainEntity
Binding Named query: ts_td.list.all => FROM TrustDomainEntity
Binding Named query: ts_td.get.default => SELECT td FROM TrustDomainEntity AS td WHERE td.defaultDomain = true
Binding Named query: ts_td.list.tp => SELECT td.trustPoints FROM TrustDomainEntity AS td WHERE td.name = :name
Binding Named query: ts_td.list.w.tp => SELECT td FROM TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
Bind entity be.fedict.trust.service.entity.TrustDomainEntity on table ts_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.all => FROM VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.td => SELECT vtd.trustDomains FROM VirtualTrustDomainEntity AS vtd WHERE vtd.name = :name
Bind entity be.fedict.trust.service.entity.VirtualTrustDomainEntity on table ts_v_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
Hibernate Validator not found: ignoring
SQL DDL script: 
    create table ts_admin (
        id varchar2(255 char) not null,
        name varchar2(255 char) not null,
        pending number(1,0) not null,
        primary key (id)
    );

    create table ts_audit (
        id number(19,0) not null,
        auditDate timestamp,
        message varchar2(255 char),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar2(255 char) not null,
        crlUrl varchar2(255 char),
        encodedCertificate blob,
        nextUpdate timestamp,
        status varchar2(255 char),
        thisUpdate timestamp,
        trustPoint_name varchar2(255 char),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar2(31 char) not null,
        id number(19,0) not null,
        policy varchar2(255 char),
        issuerName varchar2(255 char),
        serialNumber number(38,0),
        allowed number(1,0),
        keyUsage number(10,0),
        dn varchar2(255 char),
        qcComplianceFilter number(1,0),
        trustDomain_name varchar2(255 char),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar2(255 char) not null,
        cronSchedule varchar2(255 char),
        enabled number(1,0) not null,
        fireDate timestamp,
        maxClockOffset number(10,0) not null,
        server varchar2(255 char),
        timeProtocol varchar2(255 char),
        timeout number(10,0) not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar2(255 char) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar2(255 char) not null,
        texts_id number(19,0) not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id number(19,0) not null,
        language varchar2(255 char),
        text long,
        keyName_keyName varchar2(255 char) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar2(255 char) not null,
        enabled number(1,0) not null,
        proxyHost varchar2(255 char),
        proxyPort number(10,0) not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar2(255 char) not null,
        serialNumber varchar2(255 char) not null,
        crlNumber number(38,0),
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar2(255 char) not null,
        crlRefreshCronSchedule varchar2(255 char),
        fireDate timestamp,
        certificateAuthority_name varchar2(255 char) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar2(255 char) not null,
        defaultDomain number(1,0) not null,
        useCaching number(1,0) not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar2(255 char) not null,
        certificateConstraints_id number(19,0) not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar2(255 char) not null,
        trustPoints_name varchar2(255 char) not null
    );

    create table ts_v_trustdom (
        name varchar2(255 char) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar2(255 char) not null,
        trustDomains_name varchar2(255 char) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar2(255 char) not null,
        alias varchar2(255 char),
        keyEntryPassword varchar2(255 char),
        keyStorePassword varchar2(255 char),
        keyStorePath varchar2(255 char),
        keyStoreType varchar2(255 char),
        signing number(1,0) not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;

    create sequence hibernate_sequence;

Running hbm2ddl schema export
writing generated schema to file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/oracle-trust-service-ddl.sql

    create table ts_admin (
        id varchar2(255 char) not null,
        name varchar2(255 char) not null,
        pending number(1,0) not null,
        primary key (id)
    );

    create table ts_audit (
        id number(19,0) not null,
        auditDate timestamp,
        message varchar2(255 char),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar2(255 char) not null,
        crlUrl varchar2(255 char),
        encodedCertificate blob,
        nextUpdate timestamp,
        status varchar2(255 char),
        thisUpdate timestamp,
        trustPoint_name varchar2(255 char),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar2(31 char) not null,
        id number(19,0) not null,
        policy varchar2(255 char),
        issuerName varchar2(255 char),
        serialNumber number(38,0),
        allowed number(1,0),
        keyUsage number(10,0),
        dn varchar2(255 char),
        qcComplianceFilter number(1,0),
        trustDomain_name varchar2(255 char),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar2(255 char) not null,
        cronSchedule varchar2(255 char),
        enabled number(1,0) not null,
        fireDate timestamp,
        maxClockOffset number(10,0) not null,
        server varchar2(255 char),
        timeProtocol varchar2(255 char),
        timeout number(10,0) not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar2(255 char) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar2(255 char) not null,
        texts_id number(19,0) not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id number(19,0) not null,
        language varchar2(255 char),
        text long,
        keyName_keyName varchar2(255 char) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar2(255 char) not null,
        enabled number(1,0) not null,
        proxyHost varchar2(255 char),
        proxyPort number(10,0) not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar2(255 char) not null,
        serialNumber varchar2(255 char) not null,
        crlNumber number(38,0),
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar2(255 char) not null,
        crlRefreshCronSchedule varchar2(255 char),
        fireDate timestamp,
        certificateAuthority_name varchar2(255 char) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar2(255 char) not null,
        defaultDomain number(1,0) not null,
        useCaching number(1,0) not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar2(255 char) not null,
        certificateConstraints_id number(19,0) not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar2(255 char) not null,
        trustPoints_name varchar2(255 char) not null
    );

    create table ts_v_trustdom (
        name varchar2(255 char) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar2(255 char) not null,
        trustDomains_name varchar2(255 char) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar2(255 char) not null,
        alias varchar2(255 char),
        keyEntryPassword varchar2(255 char),
        keyStorePassword varchar2(255 char),
        keyStorePath varchar2(255 char),
        keyStoreType varchar2(255 char),
        signing number(1,0) not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;

    create sequence hibernate_sequence;
schema export complete

--- eid-applet-sql-ddl-plugin:1.1.2-SNAPSHOT:generate-sql-ddl (postgresql) @ eid-trust-service-sql-ddl ---
SQL DDL script generator
Output SQL DDL script file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/postgresql-trust-service-ddl.sql
artifact: be.fedict.eid-trust-service:eid-trust-service-entity
artifact version: 1.0.3-SNAPSHOT
artifact file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-entity/target/classes
hibernate dialect: org.hibernate.dialect.PostgreSQLDialect
# JPA entity classes: 19
Using dialect: org.hibernate.dialect.PostgreSQLDialect
dialect: org.hibernate.dialect.PostgreSQLDialect
JPA entity: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.ClockDriftConfigEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.LocalizationKeyEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.LocalizationTextEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.CertificateAuthorityEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.AdministratorEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.RevokedCertificateEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.WSSecurityConfigEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.TrustPointEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.DNConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.NetworkConfigEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.AuditEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.TrustDomainEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.VirtualTrustDomainEntity
entity class loader: java.net.URLClassLoader@71662a95
JPA entity: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
entity class loader: java.net.URLClassLoader@71662a95
Using dialect: org.hibernate.dialect.PostgreSQLDialect
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.CertificateConstraintEntity
Bind entity be.fedict.trust.service.entity.constraints.CertificateConstraintEntity on table ts_certcons
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.PolicyConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.ClockDriftConfigEntity
Bind entity be.fedict.trust.service.entity.ClockDriftConfigEntity on table ts_clock_drift
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationKeyEntity
Bind entity be.fedict.trust.service.entity.LocalizationKeyEntity on table ts_locali_key
Binding entity from annotated class: be.fedict.trust.service.entity.LocalizationTextEntity
Bind entity be.fedict.trust.service.entity.LocalizationTextEntity on table ts_locali_text
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.EndEntityConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.CertificateAuthorityEntity
Binding Named query: ts_ca.q.w.tp => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.n.w.tp => SELECT name FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.d.w.tp => DELETE FROM CertificateAuthorityEntity AS ca WHERE ca.trustPoint = :trustPoint
Binding Named query: ts_ca.q.all => FROM CertificateAuthorityEntity
Binding Named query: ts_ca.q.count.active => SELECT COUNT(*) FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Binding Named query: ts_ca.q.active => SELECT ca FROM CertificateAuthorityEntity AS ca WHERE ca.status = 'ACTIVE'
Bind entity be.fedict.trust.service.entity.CertificateAuthorityEntity on table ts_cert_authorities
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.KeyUsageConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.AdministratorEntity
Binding Named query: ts_admin.all => FROM AdministratorEntity
Bind entity be.fedict.trust.service.entity.AdministratorEntity on table ts_admin
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.TSAConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.RevokedCertificateEntity
Binding Named query: ts_rc.q.i.s => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer AND pk.serialNumber = :serialNumber
Binding Named query: ts_rc.q.c => SELECT MAX(crlNumber) FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i => DELETE FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.q.i => FROM RevokedCertificateEntity WHERE pk.issuer = :issuer
Binding Named query: ts_rc.d.i.old.c => DELETE FROM RevokedCertificateEntity WHERE crlNumber < :crlNumber AND issuer = :issuer
Binding Named query: ts_rc.q.count.all => SELECT COUNT(*) FROM RevokedCertificateEntity
Bind entity be.fedict.trust.service.entity.RevokedCertificateEntity on table ts_revoked_certs
Binding entity from annotated class: be.fedict.trust.service.entity.WSSecurityConfigEntity
Bind entity be.fedict.trust.service.entity.WSSecurityConfigEntity on table ts_wssec_config
Binding entity from annotated class: be.fedict.trust.service.entity.TrustPointEntity
Binding Named query: ts_tp.q.all => FROM TrustPointEntity
Bind entity be.fedict.trust.service.entity.TrustPointEntity on table ts_trust_point
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.DNConstraintEntity
Binding entity from annotated class: be.fedict.trust.service.entity.NetworkConfigEntity
Bind entity be.fedict.trust.service.entity.NetworkConfigEntity on table ts_network_config
Binding entity from annotated class: be.fedict.trust.service.entity.AuditEntity
Binding Named query: ts_audit.all => FROM AuditEntity ORDER BY id DESC
Binding Named query: ts_audit.rem.all => DELETE FROM AuditEntity
Bind entity be.fedict.trust.service.entity.AuditEntity on table ts_audit
Binding entity from annotated class: be.fedict.trust.service.entity.TrustDomainEntity
Binding Named query: ts_td.list.all => FROM TrustDomainEntity
Binding Named query: ts_td.get.default => SELECT td FROM TrustDomainEntity AS td WHERE td.defaultDomain = true
Binding Named query: ts_td.list.tp => SELECT td.trustPoints FROM TrustDomainEntity AS td WHERE td.name = :name
Binding Named query: ts_td.list.w.tp => SELECT td FROM TrustDomainEntity AS td WHERE :trustPoint MEMBER OF td.trustPoints
Bind entity be.fedict.trust.service.entity.TrustDomainEntity on table ts_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.all => FROM VirtualTrustDomainEntity
Binding Named query: ts_vtd.list.td => SELECT vtd.trustDomains FROM VirtualTrustDomainEntity AS vtd WHERE vtd.name = :name
Bind entity be.fedict.trust.service.entity.VirtualTrustDomainEntity on table ts_v_trustdom
Binding entity from annotated class: be.fedict.trust.service.entity.constraints.QCStatementsConstraintEntity
Hibernate Validator not found: ignoring
SQL DDL script: 
    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bool not null,
        primary key (id)
    );

    create table ts_audit (
        id int8 not null,
        auditDate timestamp,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate oid,
        nextUpdate timestamp,
        status varchar(255),
        thisUpdate timestamp,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id int8 not null,
        policy varchar(255),
        issuerName varchar(255),
        serialNumber numeric(38, 0),
        allowed bool,
        keyUsage int4,
        dn varchar(255),
        qcComplianceFilter bool,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bool not null,
        fireDate timestamp,
        maxClockOffset int4 not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout int4 not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id int8 not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id int8 not null,
        language varchar(255),
        text varchar(1048576),
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bool not null,
        proxyHost varchar(255),
        proxyPort int4 not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber numeric(38, 0),
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate timestamp,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bool not null,
        useCaching bool not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id int8 not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bool not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;

    create sequence hibernate_sequence;

Running hbm2ddl schema export
writing generated schema to file: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/classes/postgresql-trust-service-ddl.sql

    create table ts_admin (
        id varchar(255) not null,
        name varchar(255) not null,
        pending bool not null,
        primary key (id)
    );

    create table ts_audit (
        id int8 not null,
        auditDate timestamp,
        message varchar(255),
        primary key (id)
    );

    create table ts_cert_authorities (
        name varchar(255) not null,
        crlUrl varchar(255),
        encodedCertificate oid,
        nextUpdate timestamp,
        status varchar(255),
        thisUpdate timestamp,
        trustPoint_name varchar(255),
        primary key (name)
    );

    create table ts_certcons (
        DTYPE varchar(31) not null,
        id int8 not null,
        policy varchar(255),
        issuerName varchar(255),
        serialNumber numeric(38, 0),
        allowed bool,
        keyUsage int4,
        dn varchar(255),
        qcComplianceFilter bool,
        trustDomain_name varchar(255),
        primary key (id)
    );

    create table ts_clock_drift (
        name varchar(255) not null,
        cronSchedule varchar(255),
        enabled bool not null,
        fireDate timestamp,
        maxClockOffset int4 not null,
        server varchar(255),
        timeProtocol varchar(255),
        timeout int4 not null,
        primary key (name)
    );

    create table ts_locali_key (
        keyName varchar(255) not null,
        primary key (keyName)
    );

    create table ts_locali_key_ts_locali_text (
        ts_locali_key_keyName varchar(255) not null,
        texts_id int8 not null,
        primary key (ts_locali_key_keyName, texts_id),
        unique (texts_id)
    );

    create table ts_locali_text (
        id int8 not null,
        language varchar(255),
        text varchar(1048576),
        keyName_keyName varchar(255) not null,
        primary key (id)
    );

    create table ts_network_config (
        name varchar(255) not null,
        enabled bool not null,
        proxyHost varchar(255),
        proxyPort int4 not null,
        primary key (name)
    );

    create table ts_revoked_certs (
        issuer varchar(255) not null,
        serialNumber varchar(255) not null,
        crlNumber numeric(38, 0),
        revocationDate timestamp,
        primary key (issuer, serialNumber)
    );

    create table ts_trust_point (
        name varchar(255) not null,
        crlRefreshCronSchedule varchar(255),
        fireDate timestamp,
        certificateAuthority_name varchar(255) not null,
        primary key (name),
        unique (certificateAuthority_name)
    );

    create table ts_trustdom (
        name varchar(255) not null,
        defaultDomain bool not null,
        useCaching bool not null,
        primary key (name)
    );

    create table ts_trustdom_ts_certcons (
        ts_trustdom_name varchar(255) not null,
        certificateConstraints_id int8 not null,
        unique (certificateConstraints_id)
    );

    create table ts_trustdom_ts_trust_point (
        ts_trustdom_name varchar(255) not null,
        trustPoints_name varchar(255) not null
    );

    create table ts_v_trustdom (
        name varchar(255) not null,
        primary key (name)
    );

    create table ts_v_trustdom_ts_trustdom (
        ts_v_trustdom_name varchar(255) not null,
        trustDomains_name varchar(255) not null,
        primary key (ts_v_trustdom_name, trustDomains_name)
    );

    create table ts_wssec_config (
        name varchar(255) not null,
        alias varchar(255),
        keyEntryPassword varchar(255),
        keyStorePassword varchar(255),
        keyStorePath varchar(255),
        keyStoreType varchar(255),
        signing bool not null,
        primary key (name)
    );

    alter table ts_cert_authorities 
        add constraint FKCADE27465C3D84DB 
        foreign key (trustPoint_name) 
        references ts_trust_point;

    alter table ts_certcons 
        add constraint FKE078915B788353F 
        foreign key (trustDomain_name) 
        references ts_trustdom;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4FCB4D740B 
        foreign key (texts_id) 
        references ts_locali_text;

    alter table ts_locali_key_ts_locali_text 
        add constraint FKA8512C4F1AF171A4 
        foreign key (ts_locali_key_keyName) 
        references ts_locali_key;

    alter table ts_locali_text 
        add constraint FKD122E0AED037C850 
        foreign key (keyName_keyName) 
        references ts_locali_key;

    alter table ts_trust_point 
        add constraint FKA6D87B29E01E20DB 
        foreign key (certificateAuthority_name) 
        references ts_cert_authorities;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200544E84EC 
        foreign key (certificateConstraints_id) 
        references ts_certcons;

    alter table ts_trustdom_ts_certcons 
        add constraint FKD354200BCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965EBCFCC571 
        foreign key (ts_trustdom_name) 
        references ts_trustdom;

    alter table ts_trustdom_ts_trust_point 
        add constraint FK109A965E3083C3B8 
        foreign key (trustPoints_name) 
        references ts_trust_point;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE400BAF9 
        foreign key (ts_v_trustdom_name) 
        references ts_v_trustdom;

    alter table ts_v_trustdom_ts_trustdom 
        add constraint FK4007F2BE18B8D064 
        foreign key (trustDomains_name) 
        references ts_trustdom;

    create sequence hibernate_sequence;
schema export complete

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-sql-ddl ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-sql-ddl ---
No sources to compile

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-sql-ddl ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-sql-ddl/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Portal Model 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-portal-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-portal-model ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-portal-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-model/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-portal-model ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-portal-model ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-model/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Portal Webapp 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-portal-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 5 resources

--- maven-dependency-plugin:2.3:unpack (unpack) @ eid-trust-service-portal-webapp ---
Configured Artifact: be.fedict.eid-applet:eid-applet-js:?:jar
Unpacking /home/jubarran/.m2/repository/be/fedict/eid-applet/eid-applet-js/1.1.2-SNAPSHOT/eid-applet-js-1.1.2-SNAPSHOT.jar to /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-webapp/target/eid-trust-service-portal-webapp-1.0.3-SNAPSHOT with includes "*.js" and excludes ""

--- maven-dependency-plugin:2.3:copy (copy) @ eid-trust-service-portal-webapp ---
Configured Artifact: be.fedict.eid-applet:eid-applet-package:?:jar
be.fedict.eid-applet:eid-applet-package:1.1.2-SNAPSHOT:jar already exists in /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-webapp/target/eid-trust-service-portal-webapp-1.0.3-SNAPSHOT

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-portal-webapp ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-portal-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-webapp/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-portal-webapp ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-portal-webapp ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-portal-webapp/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Admin Portal Model 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-admin-portal-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-admin-portal-model ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-admin-portal-model ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-model/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-admin-portal-model ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-admin-portal-model ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-model/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Admin Portal Webapp 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-admin-portal-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources

--- maven-dependency-plugin:2.3:unpack (unpack) @ eid-trust-service-admin-portal-webapp ---
Configured Artifact: be.fedict.eid-applet:eid-applet-js:?:jar
Unpacking /home/jubarran/.m2/repository/be/fedict/eid-applet/eid-applet-js/1.1.2-SNAPSHOT/eid-applet-js-1.1.2-SNAPSHOT.jar to /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-webapp/target/eid-trust-service-admin-portal-webapp-1.0.3-SNAPSHOT with includes "*.js" and excludes ""

--- maven-dependency-plugin:2.3:copy (copy) @ eid-trust-service-admin-portal-webapp ---
Configured Artifact: be.fedict.eid-applet:eid-applet-package:?:jar
be.fedict.eid-applet:eid-applet-package:1.1.2-SNAPSHOT:jar already exists in /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-webapp/target/eid-trust-service-admin-portal-webapp-1.0.3-SNAPSHOT

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-admin-portal-webapp ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-admin-portal-webapp ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-webapp/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-admin-portal-webapp ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-admin-portal-webapp ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-portal-webapp/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Startup Runtime 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-startup-runtime ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-startup-runtime/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-startup-runtime ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-startup-runtime ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-startup-runtime/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-startup-runtime ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-startup-runtime ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-startup-runtime/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service EAR 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-ear-plugin:2.6:generate-application-xml (default-generate-application-xml) @ eid-trust-service-deploy ---
Generating application.xml

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-deploy ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 2 resources
                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Tests 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-tests ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-tests/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-tests ---
No sources to compile

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-tests ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 4 resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-tests ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-tests ---
Tests are skipped.
                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service CXF Integration Tests 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-tests-cxf ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-tests-cxf/src/main/resources

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-tests-cxf ---
Nothing to compile - all classes are up to date

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-tests-cxf ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 1 resource

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-tests-cxf ---
Nothing to compile - all classes are up to date

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-tests-cxf ---
Tests are skipped.
                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service Administrator Guide 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (default-resources) @ eid-trust-service-admin-manual ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-manual/src/main/resources

--- maven-jdocbook-plugin:2.3.8:resources (resources) @ eid-trust-service-admin-manual ---
Downloading: http://snapshots.jboss.org/maven2/org/eclipse/wst/css/core/maven-metadata.xml

[WARNING] Could not transfer metadata org.eclipse.wst.css:core/maven-metadata.xml from/to maven-repository.dev.java.net (http://download.java.net/maven/1): No connector available to access repository maven-repository.dev.java.net (http://download.java.net/maven/1) of type legacy using the available factories WagonRepositoryConnectorFactory
Downloading: http://snapshots.jboss.org/maven2/org/eclipse/wst/sse/core/maven-metadata.xml

[WARNING] Could not transfer metadata org.eclipse.wst.sse:core/maven-metadata.xml from/to maven-repository.dev.java.net (http://download.java.net/maven/1): No connector available to access repository maven-repository.dev.java.net (http://download.java.net/maven/1) of type legacy using the available factories WagonRepositoryConnectorFactory
Downloading: http://snapshots.jboss.org/maven2/org/eclipse/wst/common/uriresolver/maven-metadata.xml

[WARNING] Could not transfer metadata org.eclipse.wst.common:uriresolver/maven-metadata.xml from/to maven-repository.dev.java.net (http://download.java.net/maven/1): No connector available to access repository maven-repository.dev.java.net (http://download.java.net/maven/1) of type legacy using the available factories WagonRepositoryConnectorFactory
[WARNING] Failure to transfer org.eclipse.wst.sse:core/maven-metadata.xml from http://download.java.net/maven/1 was cached in the local repository, resolution will not be reattempted until the update interval of maven-repository.dev.java.net has elapsed or updates are forced. Original error: Could not transfer metadata org.eclipse.wst.sse:core/maven-metadata.xml from/to maven-repository.dev.java.net (http://download.java.net/maven/1): No connector available to access repository maven-repository.dev.java.net (http://download.java.net/maven/1) of type legacy using the available factories WagonRepositoryConnectorFactory

--- maven-compiler-plugin:2.5.1:compile (default-compile) @ eid-trust-service-admin-manual ---
No sources to compile

--- maven-jdocbook-plugin:2.3.8:generate (generate) @ eid-trust-service-admin-manual ---
Starting rendering en-US/pdf
redirecting output to file [/home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-manual/target/docbook/work/log/console-en-US-pdf.log]
creating FOP user-config DOM

--- maven-resources-plugin:2.5:testResources (default-testResources) @ eid-trust-service-admin-manual ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
skip non existing resourceDirectory /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-manual/src/test/resources

--- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ eid-trust-service-admin-manual ---
No sources to compile

--- maven-surefire-plugin:2.9:test (default-test) @ eid-trust-service-admin-manual ---
No tests to run.
Surefire report directory: /home/jubarran/workspace/EID/FROM_HOME8/dcfd-mw-applet/trust-service/eid-trust-service-admin-manual/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

                                                                        
------------------------------------------------------------------------
Building FedICT eID Trust Service MySQL Distribution 1.0.3-SNAPSHOT
------------------------------------------------------------------------

--- maven-resources-plugin:2.5:resources (filter) @ eid-trust-service-mysql-distribution ---
[debug] execute contextualize
Using 'UTF-8' encoding to copy filtered resources.
Copying 5 resources
------------------------------------------------------------------------
Reactor Summary:

FedICT eID Trust Service Project .................. SUCCESS [  0.002 s]
FedICT eID Trust Service MBean Services ........... SUCCESS [  0.572 s]
FedICT eID Trust Service XKMS2 Web Service Binding  SUCCESS [  0.702 s]
FedICT eID Trust Service Entities ................. SUCCESS [  1.442 s]
FedICT eID Trust Service Java Client .............. SUCCESS [  0.202 s]
FedICT eID Trust Service SNMP ..................... SUCCESS [  0.145 s]
FedICT eID Trust Service Model .................... SUCCESS [  0.322 s]
FedICT eID Trust Service XKMS2 Implementation ..... SUCCESS [  2.311 s]
FedICT eID Trust Service WS Runtime ............... SUCCESS [  0.140 s]
FedICT eID Trust Service OCSP Responder ........... SUCCESS [  0.180 s]
FedICT eID Trust Service SQL DDL .................. SUCCESS [  0.924 s]
FedICT eID Trust Service Portal Model ............. SUCCESS [  0.258 s]
FedICT eID Trust Service Portal Webapp ............ SUCCESS [  0.640 s]
FedICT eID Trust Service Admin Portal Model ....... SUCCESS [  0.242 s]
FedICT eID Trust Service Admin Portal Webapp ...... SUCCESS [  0.214 s]
FedICT eID Trust Service Startup Runtime .......... SUCCESS [  0.177 s]
FedICT eID Trust Service EAR ...................... SUCCESS [  0.197 s]
FedICT eID Trust Service Tests .................... SUCCESS [  0.061 s]
FedICT eID Trust Service CXF Integration Tests .... SUCCESS [  0.103 s]
FedICT eID Trust Service Administrator Guide ...... SUCCESS [  9.668 s]
FedICT eID Trust Service MySQL Distribution ....... SUCCESS [  0.021 s]
------------------------------------------------------------------------
BUILD SUCCESS
------------------------------------------------------------------------
Total time: 19.443 s
Finished at: 2014-08-29T17:50:36-05:00
Final Memory: 47M/318M
------------------------------------------------------------------------
